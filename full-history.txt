commit fa76f8c7ad0de78d662f21da619e1ddc84a5fa86
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:44:52 2025 +0200

    Create package.json

diff --git a/package.json b/package.json
new file mode 100644
index 0000000..09932c3
--- /dev/null
+++ b/package.json
@@ -0,0 +1,24 @@
+{
+  "name": "beatsmarket",
+  "version": "1.0.0",
+  "private": true,
+  "scripts": {
+    "dev": "next dev",
+    "build": "next build",
+    "start": "next start",
+    "lint": "next lint"
+  },
+  "dependencies": {
+    "next": "13.5.2",
+    "react": "18.2.0",
+    "react-dom": "18.2.0",
+    "typescript": "^5.1.6",
+    "tailwindcss": "^3.3.2",
+    "autoprefixer": "^10.4.14",
+    "postcss": "^8.4.24"
+  },
+  "devDependencies": {
+    "@types/react": "^18.2.14",
+    "@types/node": "^20.4.2"
+  }
+}

commit 8c86450c02b963770479fffd2edcdf1bf6ede39a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:45:59 2025 +0200

    Create next.config.js

diff --git a/next.config.js b/next.config.js
new file mode 100644
index 0000000..af4bf05
--- /dev/null
+++ b/next.config.js
@@ -0,0 +1,9 @@
+/** @type {import('next').NextConfig} */
+const nextConfig = {
+  reactStrictMode: true,
+  experimental: {
+    appDir: true
+  }
+}
+
+module.exports = nextConfig

commit 9371f89fd47f98bef79be04f70eed677bd23ed3c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:47:10 2025 +0200

    Create tailwind.config.ts

diff --git a/tailwind.config.ts b/tailwind.config.ts
new file mode 100644
index 0000000..88997e9
--- /dev/null
+++ b/tailwind.config.ts
@@ -0,0 +1,25 @@
+import type { Config } from "tailwindcss"
+
+const config: Config = {
+  content: [
+    "./app/**/*.{ts,tsx}",
+    "./components/**/*.{ts,tsx}"
+  ],
+  theme: {
+    extend: {
+      colors: {
+        primary: "#D33F8D",  // rose vif BeatsMarket
+        secondary: "#6F42C1", // violet BeatsMarket
+        darkbg: "#121212",
+        darkbg2: "#181818"
+      },
+      fontFamily: {
+        poppins: ["Poppins", "sans-serif"],
+        ptsans: ["PT Sans", "sans-serif"]
+      }
+    }
+  },
+  plugins: []
+}
+
+export default config

commit 09f94aab0e4b904464687a103e1044be8a581d02
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:48:08 2025 +0200

    Create postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
new file mode 100644
index 0000000..33ad091
--- /dev/null
+++ b/postcss.config.js
@@ -0,0 +1,6 @@
+module.exports = {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+}

commit bf4229b387267f357b646d073172a22039c9d2c0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:49:10 2025 +0200

    Create globals.css

diff --git a/app/globals.css b/app/globals.css
new file mode 100644
index 0000000..919b37d
--- /dev/null
+++ b/app/globals.css
@@ -0,0 +1,14 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* Import des polices Google Fonts */
+@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&family=PT+Sans&display=swap');
+
+body {
+  font-family: 'Poppins', sans-serif;
+  background-color: #121212;
+  color: white;
+  margin: 0;
+  padding: 0;
+}

commit 542b09400d7b8db64ff4e1a9a90d13dc4355ec3c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:50:41 2025 +0200

    Create page.tsx

diff --git a/app/page.tsx b/app/page.tsx
new file mode 100644
index 0000000..45a5b6c
--- /dev/null
+++ b/app/page.tsx
@@ -0,0 +1,12 @@
+import React from "react"
+
+export default function HomePage() {
+  return (
+    <main className="min-h-screen bg-darkbg text-white font-poppins px-6 py-12">
+      <h1 className="text-4xl font-bold mb-6">Bienvenue sur BeatsMarket</h1>
+      <p className="text-lg max-w-xl">
+        La plateforme mondiale pour acheter et vendre des beats de qualité.
+      </p>
+    </main>
+  )
+}

commit 7a41a442ef0bdba1e6848f5e46eccdb0f6943521
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:51:45 2025 +0200

    Create tsconfig.json

diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..d96b7ae
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,21 @@
+{
+  "compilerOptions": {
+    "target": "ESNext",
+    "lib": ["dom", "dom.iterable", "esnext"],
+    "allowJs": true,
+    "skipLibCheck": true,
+    "strict": true,
+    "forceConsistentCasingInFileNames": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "module": "ESNext",
+    "moduleResolution": "node",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
+    "incremental": true,
+    "types": ["node"]
+  },
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
+  "exclude": ["node_modules"]
+}

commit afbbbd05fe7489bff8b5222151202b5cf5d73611
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:52:53 2025 +0200

    Create next-env.d.ts

diff --git a/next-env.d.ts b/next-env.d.ts
new file mode 100644
index 0000000..0b90e22
--- /dev/null
+++ b/next-env.d.ts
@@ -0,0 +1,5 @@
+/// <reference types="next" />
+/// <reference types="next/types/global" />
+/// <reference types="next/image-types/global" />
+
+// NOTE: This file should not be edited

commit 3a81c7df66a268e92654497d87ca46c1a6febef4
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:53:30 2025 +0200

    Create README.md

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..c95e614
--- /dev/null
+++ b/README.md
@@ -0,0 +1,29 @@
+# BeatsMarket
+
+Plateforme de vente de beats musicaux et services associés.
+
+## Installation
+
+1. Cloner le dépôt  
+2. Installer les dépendances avec `npm install` ou `yarn`  
+3. Lancer le serveur de développement avec `npm run dev`
+
+## Technologies utilisées
+
+- Next.js 13 (app directory)  
+- TypeScript  
+- Tailwind CSS  
+- React  
+- Stripe (paiement)  
+- ...
+
+## Structure
+
+- `app/` : pages et composants  
+- `components/` : composants réutilisables  
+- `public/` : images et ressources statiques  
+- ...
+
+## Développement
+
+N’hésite pas à consulter la documentation officielle Next.js et Tailwind CSS.

commit beb098fd479f570e15bd9c36d5b05f1c960ec82c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:54:17 2025 +0200

    Create layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
new file mode 100644
index 0000000..2939b98
--- /dev/null
+++ b/app/layout.tsx
@@ -0,0 +1,21 @@
+import './globals.css'
+import React from 'react'
+
+export const metadata = {
+  title: 'BeatsMarket - La plateforme mondiale des beats',
+  description: 'Achetez, vendez et découvrez les meilleurs beats musicaux.',
+}
+
+export default function RootLayout({
+  children,
+}: {
+  children: React.ReactNode
+}) {
+  return (
+    <html lang="fr">
+      <body className="bg-darkbg text-white font-poppins">
+        {children}
+      </body>
+    </html>
+  )
+}

commit f0b902dd61f9d98fd5ee21074a921d854dc315ba
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:55:26 2025 +0200

    Create Header.tsx

diff --git a/components/Header.tsx b/components/Header.tsx
new file mode 100644
index 0000000..28e8853
--- /dev/null
+++ b/components/Header.tsx
@@ -0,0 +1,36 @@
+import React from "react"
+import Link from "next/link"
+
+export default function Header() {
+  return (
+    <header className="bg-darkbg2 shadow-md p-4 flex justify-between items-center">
+      <Link href="/">
+        <a className="text-2xl font-bold text-primary">BeatsMarket</a>
+      </Link>
+      <nav>
+        <ul className="flex gap-6 text-white font-ptsans">
+          <li>
+            <Link href="/pricing">
+              <a className="hover:text-secondary">Tarifs</a>
+            </Link>
+          </li>
+          <li>
+            <Link href="/about">
+              <a className="hover:text-secondary">À propos</a>
+            </Link>
+          </li>
+          <li>
+            <Link href="/help">
+              <a className="hover:text-secondary">Aide</a>
+            </Link>
+          </li>
+          <li>
+            <Link href="/login">
+              <a className="hover:text-primary font-bold">Connexion</a>
+            </Link>
+          </li>
+        </ul>
+      </nav>
+    </header>
+  )
+}

commit 14b61aff3701bcce9ee2284fd030cb1d93f619c1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:57:06 2025 +0200

    Update layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
index 2939b98..ea532c6 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,5 +1,6 @@
 import './globals.css'
 import React from 'react'
+import Header from '../components/Header'
 
 export const metadata = {
   title: 'BeatsMarket - La plateforme mondiale des beats',
@@ -13,8 +14,9 @@ export default function RootLayout({
 }) {
   return (
     <html lang="fr">
-      <body className="bg-darkbg text-white font-poppins">
-        {children}
+      <body className="bg-darkbg text-white font-poppins flex flex-col min-h-screen">
+        <Header />
+        <main className="flex-grow">{children}</main>
       </body>
     </html>
   )

commit afedd7725fd1f58528e3cabcfa5f74e00da01a56
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sat Jul 19 23:59:35 2025 +0200

    Create Footer.tsx

diff --git a/components/Footer.tsx b/components/Footer.tsx
new file mode 100644
index 0000000..15d0c42
--- /dev/null
+++ b/components/Footer.tsx
@@ -0,0 +1,38 @@
+import React from "react"
+import Link from "next/link"
+
+export default function Footer() {
+  return (
+    <footer className="bg-darkbg2 text-white py-8 px-6 mt-12">
+      <div className="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-3 gap-8 text-sm">
+        <div>
+          <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
+          <p className="text-gray-400">
+            La plateforme ultime pour acheter, vendre et distribuer des beats avec style.
+          </p>
+        </div>
+        <div>
+          <h3 className="font-semibold mb-2">Navigation</h3>
+          <ul className="space-y-1">
+            <li><Link href="/"><a className="hover:text-primary">Accueil</a></Link></li>
+            <li><Link href="/pricing"><a className="hover:text-primary">Tarifs</a></Link></li>
+            <li><Link href="/about"><a className="hover:text-primary">À propos</a></Link></li>
+            <li><Link href="/terms"><a className="hover:text-primary">CGV / Mentions</a></Link></li>
+          </ul>
+        </div>
+        <div>
+          <h3 className="font-semibold mb-2">Réseaux</h3>
+          <ul className="space-y-1">
+            <li><a href="#" className="hover:text-primary">Instagram</a></li>
+            <li><a href="#" className="hover:text-primary">YouTube</a></li>
+            <li><a href="#" className="hover:text-primary">TikTok</a></li>
+            <li><a href="#" className="hover:text-primary">Contact</a></li>
+          </ul>
+        </div>
+      </div>
+      <div className="text-center text-xs text-gray-500 mt-8">
+        &copy; {new Date().getFullYear()} BeatsMarket. Tous droits réservés.
+      </div>
+    </footer>
+  )
+}

commit b9d6b95327e8ae2b72909b935b15fbb5182dd1e9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:01:03 2025 +0200

    Update layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
index ea532c6..80a510a 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,6 +1,7 @@
 import './globals.css'
 import React from 'react'
 import Header from '../components/Header'
+import Footer from '../components/Footer'
 
 export const metadata = {
   title: 'BeatsMarket - La plateforme mondiale des beats',
@@ -17,6 +18,7 @@ export default function RootLayout({
       <body className="bg-darkbg text-white font-poppins flex flex-col min-h-screen">
         <Header />
         <main className="flex-grow">{children}</main>
+        <Footer />
       </body>
     </html>
   )

commit f5eae9a8e5778a4ae42bbbe4ef7bef305bdec5c6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:03:49 2025 +0200

    Create page.tsx

diff --git a/app/pricing/page.tsx b/app/pricing/page.tsx
new file mode 100644
index 0000000..1915e4f
--- /dev/null
+++ b/app/pricing/page.tsx
@@ -0,0 +1,42 @@
+import React from "react"
+
+export default function PricingPage() {
+  return (
+    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-poppins">
+      <h1 className="text-4xl font-bold mb-8 text-primary">Nos Offres</h1>
+
+      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
+        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-gray-700">
+          <h2 className="text-xl font-semibold mb-4">Gratuit</h2>
+          <p className="text-gray-400 mb-6">Démarrez sans engagement.</p>
+          <ul className="text-sm space-y-2">
+            <li>• Mise en ligne de 3 beats</li>
+            <li>• Statistiques basiques</li>
+            <li>• Boutique publique</li>
+          </ul>
+        </div>
+
+        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-primary">
+          <h2 className="text-xl font-semibold text-primary mb-4">Or</h2>
+          <p className="text-gray-400 mb-6">Pour les beatmakers pros.</p>
+          <ul className="text-sm space-y-2">
+            <li>• 200 beats actifs</li>
+            <li>• Mastering IA offert</li>
+            <li>• Mise en avant premium</li>
+          </ul>
+        </div>
+
+        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-gray-700">
+          <h2 className="text-xl font-semibold mb-4">Diamant</h2>
+          <p className="text-gray-400 mb-6">Le plus complet.</p>
+          <ul className="text-sm space-y-2">
+            <li>• Beats illimités</li>
+            <li>• Couvertures IA</li>
+            <li>• Distribution Believe</li>
+            <li>• Équipe support dédiée</li>
+          </ul>
+        </div>
+      </div>
+    </section>
+  )
+}

commit 3bc010bad4c9c18cd8839c1d77cece81d31d5d33
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:04:55 2025 +0200

    Create page.tsx

diff --git a/app/about/page.tsx b/app/about/page.tsx
new file mode 100644
index 0000000..e0ccc47
--- /dev/null
+++ b/app/about/page.tsx
@@ -0,0 +1,25 @@
+import React from "react"
+
+export default function AboutPage() {
+  return (
+    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-6">À propos</h1>
+
+      <p className="text-lg max-w-3xl mb-6">
+        BeatsMarket est une plateforme internationale conçue pour connecter les beatmakers,
+        artistes et producteurs du monde entier. Nous croyons que chaque créateur mérite
+        des outils puissants pour vendre, distribuer et faire connaître sa musique.
+      </p>
+
+      <p className="text-lg max-w-3xl mb-6 text-gray-300">
+        Grâce à notre technologie moderne, nos services IA, et notre interface intuitive,
+        nous offrons une expérience unique, que vous soyez un artiste à la recherche du beat parfait
+        ou un beatmaker souhaitant monétiser ses créations.
+      </p>
+
+      <p className="text-lg max-w-3xl text-gray-400">
+        BeatsMarket est 100% indépendant et engagé pour une rémunération équitable des créateurs.
+      </p>
+    </section>
+  )
+}

commit 941f5f084b7bf0dcb7cb3375f2473ed17477747c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:05:45 2025 +0200

    Create page.tsx

diff --git a/app/terms/page.tsx b/app/terms/page.tsx
new file mode 100644
index 0000000..ef0f0b2
--- /dev/null
+++ b/app/terms/page.tsx
@@ -0,0 +1,49 @@
+import React from "react"
+
+export default function TermsPage() {
+  return (
+    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-ptsans">
+      <h1 className="text-4xl font-bold text-primary mb-8">Conditions Générales de Vente et d’Utilisation</h1>
+
+      <article className="space-y-6 text-gray-300 text-sm leading-relaxed max-w-5xl">
+        <p>
+          Bienvenue sur BeatsMarket. En utilisant notre site, vous acceptez sans réserve les présentes Conditions Générales de Vente et d'Utilisation.
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">1. Définitions</h2>
+        <p>
+          "Utilisateur" désigne toute personne utilisant le site. "Beatmaker" et "Artiste" désignent les utilisateurs professionnels inscrits.
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">2. Objet</h2>
+        <p>
+          Les CGV/CGU encadrent les relations entre BeatsMarket, les vendeurs (beatmakers) et les acheteurs (artistes).
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">3. Licences</h2>
+        <p>
+          Plusieurs types de licences sont proposées : Basique MP3, Premium WAV, Exclusive, Exclusive + Stems. Chaque licence définit des droits spécifiques.
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">4. Paiement & Commissions</h2>
+        <p>
+          Le paiement est géré via Stripe. BeatsMarket prélève une commission sur chaque vente. Tous les montants sont TTC.
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">5. Services</h2>
+        <p>
+          Les services additionnels incluent : mastering IA, création de covers, distribution digitale via Believe, etc.
+        </p>
+
+        <h2 className="text-white text-lg font-semibold mt-10">6. Droit applicable</h2>
+        <p>
+          Les présentes conditions sont régies par le droit français. En cas de litige, les tribunaux compétents seront ceux de Clermont-Ferrand.
+        </p>
+
+        <p className="text-xs mt-12 text-gray-500 italic">
+          Dernière mise à jour : juillet 2025
+        </p>
+      </article>
+    </section>
+  )
+}

commit da17a8d63a207aef19f0debd647a463be2dd3884
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:07:08 2025 +0200

    Update page.tsx

diff --git a/app/about/page.tsx b/app/about/page.tsx
index e0ccc47..28ef44d 100644
--- a/app/about/page.tsx
+++ b/app/about/page.tsx
@@ -2,24 +2,41 @@ import React from "react"
 
 export default function AboutPage() {
   return (
-    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-poppins">
-      <h1 className="text-4xl font-bold text-primary mb-6">À propos</h1>
+    <section className="min-h-screen bg-darkbg px-6 py-16 text-white font-poppins">
+      <div className="max-w-4xl mx-auto">
+        <h1 className="text-4xl font-bold text-primary mb-6">À propos de BeatsMarket</h1>
 
-      <p className="text-lg max-w-3xl mb-6">
-        BeatsMarket est une plateforme internationale conçue pour connecter les beatmakers,
-        artistes et producteurs du monde entier. Nous croyons que chaque créateur mérite
-        des outils puissants pour vendre, distribuer et faire connaître sa musique.
-      </p>
+        <p className="text-gray-300 text-sm mb-8">
+          BeatsMarket est une plateforme révolutionnaire dédiée à la vente, la promotion et la distribution de beats. Elle offre un espace sécurisé, professionnel, et propulsé par l’IA pour les artistes et les beatmakers du monde entier.
+        </p>
 
-      <p className="text-lg max-w-3xl mb-6 text-gray-300">
-        Grâce à notre technologie moderne, nos services IA, et notre interface intuitive,
-        nous offrons une expérience unique, que vous soyez un artiste à la recherche du beat parfait
-        ou un beatmaker souhaitant monétiser ses créations.
-      </p>
+        <h2 className="text-2xl font-semibold text-white mb-4">Notre mission</h2>
+        <p className="text-gray-400 text-sm mb-8">
+          Offrir à chaque créateur musical les outils, la visibilité et la liberté nécessaire pour monétiser ses créations de manière équitable, professionnelle et internationale.
+        </p>
 
-      <p className="text-lg max-w-3xl text-gray-400">
-        BeatsMarket est 100% indépendant et engagé pour une rémunération équitable des créateurs.
-      </p>
+        <h2 className="text-2xl font-semibold text-white mb-4">Notre vision</h2>
+        <p className="text-gray-400 text-sm mb-8">
+          Un monde musical plus transparent, plus connecté, où chaque talent, où qu’il soit, a les moyens de réussir.
+        </p>
+
+        <h2 className="text-2xl font-semibold text-white mb-4">Les outils disponibles</h2>
+        <div className="grid grid-cols-1 sm:grid-cols-2 gap-6 mt-4">
+          {[
+            ["Boutique Pro", "Vendez vos beats avec licences intelligentes."],
+            ["Mastering IA", "Obtenez un rendu professionnel en 2 clics."],
+            ["Générateur de covers", "Des visuels attrayants pour vos sorties."],
+            ["Distribution digitale", "Diffusez votre musique sur toutes les plateformes."],
+            ["Statistiques détaillées", "Suivez vos ventes, écoutes et revenus."],
+            ["Paiements rapides", "Grâce à l’intégration Stripe sécurisée."]
+          ].map(([title, desc]) => (
+            <div key={title} className="bg-[#1e1e1e] p-4 rounded-2xl shadow-lg">
+              <h3 className="text-lg font-semibold text-white">{title}</h3>
+              <p className="text-sm text-gray-400 mt-1">{desc}</p>
+            </div>
+          ))}
+        </div>
+      </div>
     </section>
   )
 }

commit 530fbf03aefdedc2df7c7f56c147dc4debc170fd
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:08:11 2025 +0200

    Create page.tsx

diff --git a/app/help/page.tsx b/app/help/page.tsx
new file mode 100644
index 0000000..b801ab3
--- /dev/null
+++ b/app/help/page.tsx
@@ -0,0 +1,79 @@
+"use client"
+import { useState } from "react"
+import { Input } from "@/components/ui/input"
+import { Textarea } from "@/components/ui/textarea"
+import { Button } from "@/components/ui/button"
+import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
+
+export default function HelpPage() {
+  const [form, setForm] = useState({ email: "", message: "" })
+
+  return (
+    <main className="min-h-screen bg-darkbg text-white px-4 py-12 font-poppins">
+      <div className="max-w-4xl mx-auto">
+        <h1 className="text-4xl font-bold text-primary mb-8">Besoin d'aide ?</h1>
+
+        {/* Chatbot IA */}
+        <section className="mb-16">
+          <h2 className="text-2xl font-semibold mb-4">👋 Monsieur Aide (IA)</h2>
+          <div className="bg-[#1f1f1f] rounded-xl p-4 text-sm text-gray-300">
+            <p>Bonjour ! Je suis Monsieur Aide. Pose-moi une question sur BeatsMarket et je te réponds tout de suite.</p>
+            <p className="mt-2 italic text-xs text-gray-500">Bientôt disponible en version complète (Genkit AI).</p>
+          </div>
+        </section>
+
+        {/* Formulaire de contact */}
+        <section className="mb-16">
+          <h2 className="text-2xl font-semibold mb-4">📨 Formulaire de contact</h2>
+          <div className="bg-[#1f1f1f] rounded-xl p-6 space-y-4">
+            <Input
+              type="email"
+              placeholder="Votre adresse e-mail"
+              value={form.email}
+              onChange={(e) => setForm({ ...form, email: e.target.value })}
+              className="bg-[#2c2c2c] text-white border-none"
+            />
+            <Textarea
+              placeholder="Votre message..."
+              value={form.message}
+              onChange={(e) => setForm({ ...form, message: e.target.value })}
+              className="bg-[#2c2c2c] text-white border-none min-h-[120px]"
+            />
+            <Button className="bg-primary hover:bg-primary/80 transition-colors">Envoyer</Button>
+          </div>
+        </section>
+
+        {/* FAQ */}
+        <section>
+          <h2 className="text-2xl font-semibold mb-4">❓ Questions fréquentes (FAQ)</h2>
+          <Accordion type="multiple" className="bg-[#1f1f1f] rounded-xl">
+            <AccordionItem value="q1">
+              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
+                Comment vendre mes beats sur BeatsMarket ?
+              </AccordionTrigger>
+              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
+                Crée un compte beatmaker, uploade tes beats, choisis tes licences, ton prix, et publie-les dans ta boutique. BeatsMarket s’occupe du reste !
+              </AccordionContent>
+            </AccordionItem>
+            <AccordionItem value="q2">
+              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
+                Quels sont les frais de BeatsMarket ?
+              </AccordionTrigger>
+              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
+                Nous prenons une commission de 15% sur les ventes. Les frais Stripe s’ajoutent selon le pays de l’utilisateur.
+              </AccordionContent>
+            </AccordionItem>
+            <AccordionItem value="q3">
+              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
+                Comment contacter l’équipe ?
+              </AccordionTrigger>
+              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
+                Utilisez le formulaire ci-dessus ou écrivez-nous à support@beatsmarket.fr. Nous répondons sous 48h maximum.
+              </AccordionContent>
+            </AccordionItem>
+          </Accordion>
+        </section>
+      </div>
+    </main>
+  )
+}

commit 223fc2a3cfc0ce59c450ffcae3acb89611ced7ce
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:09:38 2025 +0200

    Update page.tsx

diff --git a/app/pricing/page.tsx b/app/pricing/page.tsx
index 1915e4f..cd47bd2 100644
--- a/app/pricing/page.tsx
+++ b/app/pricing/page.tsx
@@ -3,40 +3,55 @@ import React from "react"
 export default function PricingPage() {
   return (
     <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-poppins">
-      <h1 className="text-4xl font-bold mb-8 text-primary">Nos Offres</h1>
+      <h1 className="text-4xl font-bold text-primary mb-8">Nos Tarifs</h1>
 
-      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
-        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-gray-700">
-          <h2 className="text-xl font-semibold mb-4">Gratuit</h2>
-          <p className="text-gray-400 mb-6">Démarrez sans engagement.</p>
-          <ul className="text-sm space-y-2">
-            <li>• Mise en ligne de 3 beats</li>
-            <li>• Statistiques basiques</li>
-            <li>• Boutique publique</li>
-          </ul>
-        </div>
+      {/* Plans d’abonnement */}
+      <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6 mb-16">
+        <PlanCard name="Gratuit" price="0€" features={["1 beat en boutique", "Accès IA mastering", "Distribution en option"]} />
+        <PlanCard name="Bronze" price="9,90€" features={["10 beats en boutique", "IA cover incluse", "Mise en avant possible"]} />
+        <PlanCard name="Or" price="19,90€" features={["25 beats", "Priorité IA", "Support premium"]} />
+        <PlanCard name="Diamant" price="49,90€" features={["Beats illimités", "Boost AI", "Mise en avant +"]} />
+        <PlanCard name="Diamant Plus" price="79,90€" features={["Illimité + stats avancées", "Mise en avant prioritaire"]} />
+      </div>
 
-        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-primary">
-          <h2 className="text-xl font-semibold text-primary mb-4">Or</h2>
-          <p className="text-gray-400 mb-6">Pour les beatmakers pros.</p>
-          <ul className="text-sm space-y-2">
-            <li>• 200 beats actifs</li>
-            <li>• Mastering IA offert</li>
-            <li>• Mise en avant premium</li>
-          </ul>
-        </div>
+      {/* Services additionnels */}
+      <h2 className="text-2xl font-semibold text-pink-500 mb-4">Services IA & Options</h2>
+      <ul className="space-y-2 text-lg mb-16">
+        <li>- Mastering IA : <span className="text-white">4,90€ / track</span></li>
+        <li>- Cover IA Pro : <span className="text-white">6,90€ / cover</span></li>
+        <li>- Distribution digitale : <span className="text-white">14,90€ / single</span> ou <span className="text-white">39,90€ / album</span></li>
+      </ul>
 
-        <div className="bg-darkbg2 p-6 rounded-2xl shadow-md border border-gray-700">
-          <h2 className="text-xl font-semibold mb-4">Diamant</h2>
-          <p className="text-gray-400 mb-6">Le plus complet.</p>
-          <ul className="text-sm space-y-2">
-            <li>• Beats illimités</li>
-            <li>• Couvertures IA</li>
-            <li>• Distribution Believe</li>
-            <li>• Équipe support dédiée</li>
-          </ul>
-        </div>
+      {/* Licences */}
+      <h2 className="text-2xl font-semibold text-pink-500 mb-4">Licences de Beats</h2>
+      <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
+        <LicenseCard type="Basique MP3" price="À partir de 14,90€" rights="Usage commercial limité" />
+        <LicenseCard type="Premium WAV" price="À partir de 29,90€" rights="Usage commercial étendu" />
+        <LicenseCard type="Exclusive" price="À partir de 99,90€" rights="Vente unique, droits exclusifs" />
+        <LicenseCard type="Exclusive + Stems" price="Dès 149,90€" rights="Inclut les multipistes, exclusif" />
       </div>
     </section>
   )
 }
+
+function PlanCard({ name, price, features }: { name: string, price: string, features: string[] }) {
+  return (
+    <div className="bg-zinc-900 rounded-2xl p-6 shadow-md border border-zinc-700">
+      <h3 className="text-xl font-semibold text-primary mb-2">{name}</h3>
+      <p className="text-3xl font-bold mb-4">{price}</p>
+      <ul className="space-y-1 text-sm text-gray-300">
+        {features.map((f, i) => <li key={i}>• {f}</li>)}
+      </ul>
+    </div>
+  )
+}
+
+function LicenseCard({ type, price, rights }: { type: string, price: string, rights: string }) {
+  return (
+    <div className="bg-zinc-800 rounded-2xl p-5 border border-zinc-600">
+      <h4 className="text-lg font-bold text-violet-400 mb-2">{type}</h4>
+      <p className="text-xl font-semibold mb-1">{price}</p>
+      <p className="text-sm text-gray-400">{rights}</p>
+    </div>
+  )
+}

commit feb620cd0afbd57cd3d96f66015d225ef38c7047
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:11:14 2025 +0200

    Update page.tsx

commit d793cfe6d94e568fe75faf9180c411db430d108f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:12:32 2025 +0200

    Create page.tsx

diff --git a/app/dashboard/page.tsx b/app/dashboard/page.tsx
new file mode 100644
index 0000000..3f8a1c8
--- /dev/null
+++ b/app/dashboard/page.tsx
@@ -0,0 +1,61 @@
+import React from "react"
+
+export default function DashboardPage() {
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Tableau de bord Admin</h1>
+
+      <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 mb-12">
+        <StatCard title="Revenus ce mois" value="12 450 €" />
+        <StatCard title="Nouveaux beatmakers" value="23" />
+        <StatCard title="Beats en ligne" value="1 200" />
+        <StatCard title="Commandes en attente" value="7" />
+      </div>
+
+      <section className="mb-12">
+        <h2 className="text-2xl font-semibold mb-4">Graphique des ventes</h2>
+        <div className="bg-darkbg2 rounded-lg h-48 flex items-center justify-center text-gray-500 italic">
+          [Graphique à implémenter]
+        </div>
+      </section>
+
+      <section>
+        <h2 className="text-2xl font-semibold mb-4">Ventes récentes</h2>
+        <table className="w-full text-sm text-left border border-gray-700 rounded-lg">
+          <thead className="bg-darkbg2">
+            <tr>
+              <th className="p-3">Date</th>
+              <th className="p-3">Beat</th>
+              <th className="p-3">Acheteur</th>
+              <th className="p-3">Montant</th>
+            </tr>
+          </thead>
+          <tbody>
+            {/* Exemple de ligne */}
+            <tr className="border-t border-gray-700 hover:bg-darkbg2/50">
+              <td className="p-3">15/07/2025</td>
+              <td className="p-3">Beat Hip-Hop N°1</td>
+              <td className="p-3">Jay Jay</td>
+              <td className="p-3">29,90 €</td>
+            </tr>
+            <tr className="border-t border-gray-700 hover:bg-darkbg2/50">
+              <td className="p-3">14/07/2025</td>
+              <td className="p-3">Beat Trap N°5</td>
+              <td className="p-3">Zara</td>
+              <td className="p-3">14,90 €</td>
+            </tr>
+          </tbody>
+        </table>
+      </section>
+    </section>
+  )
+}
+
+function StatCard({ title, value }: { title: string; value: string }) {
+  return (
+    <div className="bg-darkbg2 rounded-lg p-6 shadow-md">
+      <p className="text-gray-400 text-sm">{title}</p>
+      <p className="text-3xl font-bold mt-2">{value}</p>
+    </div>
+  )
+}

commit c9388f8b67d9dd5003324a450b94a1148be598db
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:13:42 2025 +0200

    Create page.tsx

diff --git a/app/admin/beatmakers/page.tsx b/app/admin/beatmakers/page.tsx
new file mode 100644
index 0000000..7b05a3d
--- /dev/null
+++ b/app/admin/beatmakers/page.tsx
@@ -0,0 +1,79 @@
+import React from "react"
+
+type Beatmaker = {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "en attente" | "banni"
+  beatsCount: number
+  revenue: number
+}
+
+const dummyBeatmakers: Beatmaker[] = [
+  { id: "1", name: "Jay Jay", email: "jay@example.com", status: "actif", beatsCount: 12, revenue: 1200 },
+  { id: "2", name: "Sophie", email: "sophie@example.com", status: "en attente", beatsCount: 5, revenue: 450 },
+  { id: "3", name: "Marc", email: "marc@example.com", status: "banni", beatsCount: 0, revenue: 0 },
+]
+
+export default function AdminBeatmakersPage() {
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Beatmakers</h1>
+
+      <div className="overflow-x-auto rounded-lg border border-gray-700">
+        <table className="w-full text-left text-sm">
+          <thead className="bg-darkbg2 text-gray-300">
+            <tr>
+              <th className="px-4 py-3">Nom</th>
+              <th className="px-4 py-3">Email</th>
+              <th className="px-4 py-3">Status</th>
+              <th className="px-4 py-3">Beats en ligne</th>
+              <th className="px-4 py-3">Revenu (€)</th>
+              <th className="px-4 py-3">Actions</th>
+            </tr>
+          </thead>
+          <tbody>
+            {dummyBeatmakers.map((b) => (
+              <tr key={b.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
+                <td className="px-4 py-3">{b.name}</td>
+                <td className="px-4 py-3">{b.email}</td>
+                <td className="px-4 py-3">
+                  <StatusBadge status={b.status} />
+                </td>
+                <td className="px-4 py-3">{b.beatsCount}</td>
+                <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
+                <td className="px-4 py-3">
+                  <ActionMenu beatmakerId={b.id} />
+                </td>
+              </tr>
+            ))}
+          </tbody>
+        </table>
+      </div>
+    </section>
+  )
+}
+
+function StatusBadge({ status }: { status: Beatmaker["status"] }) {
+  let color = "bg-gray-500"
+  if (status === "actif") color = "bg-green-600"
+  else if (status === "en attente") color = "bg-yellow-500"
+  else if (status === "banni") color = "bg-red-600"
+
+  return (
+    <span className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${color}`}>
+      {status.toUpperCase()}
+    </span>
+  )
+}
+
+function ActionMenu({ beatmakerId }: { beatmakerId: string }) {
+  return (
+    <div>
+      {/* Ici un menu déroulant avec actions comme Editer, Bannir, Supprimer */}
+      <button className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold">
+        Actions
+      </button>
+    </div>
+  )
+}

commit b59fb30567aae9ddd743a02833b56064685032c7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:14:46 2025 +0200

    Create page.tsx

diff --git a/app/admin/artists/page.tsx b/app/admin/artists/page.tsx
new file mode 100644
index 0000000..fd5a9e2
--- /dev/null
+++ b/app/admin/artists/page.tsx
@@ -0,0 +1,79 @@
+import React from "react"
+
+type Artist = {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "en attente" | "banni"
+  purchasesCount: number
+  totalSpent: number
+}
+
+const dummyArtists: Artist[] = [
+  { id: "a1", name: "Lina", email: "lina@example.com", status: "actif", purchasesCount: 8, totalSpent: 320 },
+  { id: "a2", name: "Tom", email: "tom@example.com", status: "en attente", purchasesCount: 1, totalSpent: 14.9 },
+  { id: "a3", name: "Emma", email: "emma@example.com", status: "banni", purchasesCount: 0, totalSpent: 0 },
+]
+
+export default function AdminArtistsPage() {
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Artistes</h1>
+
+      <div className="overflow-x-auto rounded-lg border border-gray-700">
+        <table className="w-full text-left text-sm">
+          <thead className="bg-darkbg2 text-gray-300">
+            <tr>
+              <th className="px-4 py-3">Nom</th>
+              <th className="px-4 py-3">Email</th>
+              <th className="px-4 py-3">Statut</th>
+              <th className="px-4 py-3">Achats</th>
+              <th className="px-4 py-3">Total dépensé (€)</th>
+              <th className="px-4 py-3">Actions</th>
+            </tr>
+          </thead>
+          <tbody>
+            {dummyArtists.map((a) => (
+              <tr key={a.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
+                <td className="px-4 py-3">{a.name}</td>
+                <td className="px-4 py-3">{a.email}</td>
+                <td className="px-4 py-3">
+                  <StatusBadge status={a.status} />
+                </td>
+                <td className="px-4 py-3">{a.purchasesCount}</td>
+                <td className="px-4 py-3">{a.totalSpent.toFixed(2)}</td>
+                <td className="px-4 py-3">
+                  <ActionMenu artistId={a.id} />
+                </td>
+              </tr>
+            ))}
+          </tbody>
+        </table>
+      </div>
+    </section>
+  )
+}
+
+function StatusBadge({ status }: { status: Artist["status"] }) {
+  let color = "bg-gray-500"
+  if (status === "actif") color = "bg-green-600"
+  else if (status === "en attente") color = "bg-yellow-500"
+  else if (status === "banni") color = "bg-red-600"
+
+  return (
+    <span className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${color}`}>
+      {status.toUpperCase()}
+    </span>
+  )
+}
+
+function ActionMenu({ artistId }: { artistId: string }) {
+  return (
+    <div>
+      {/* Ici un menu déroulant avec actions comme Editer, Suspendre, Supprimer */}
+      <button className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold">
+        Actions
+      </button>
+    </div>
+  )
+}

commit cbfee99174f0790cea67a8c95a1dc1e2b2147f4c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:15:49 2025 +0200

    Create status-badge.tsx

diff --git a/app/components/ui/status-badge.tsx b/app/components/ui/status-badge.tsx
new file mode 100644
index 0000000..355305d
--- /dev/null
+++ b/app/components/ui/status-badge.tsx
@@ -0,0 +1,20 @@
+import React from "react"
+
+type Status = "actif" | "en attente" | "banni"
+
+interface StatusBadgeProps {
+  status: Status
+}
+
+export function StatusBadge({ status }: StatusBadgeProps) {
+  let color = "bg-gray-500"
+  if (status === "actif") color = "bg-green-600"
+  else if (status === "en attente") color = "bg-yellow-500"
+  else if (status === "banni") color = "bg-red-600"
+
+  return (
+    <span className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${color}`}>
+      {status.toUpperCase()}
+    </span>
+  )
+}

commit 351b856d24b40f9a0c81f4ec34a26344c4533e4c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:17:00 2025 +0200

    Create action-menu.tsx

diff --git a/app/components/ui/action-menu.tsx b/app/components/ui/action-menu.tsx
new file mode 100644
index 0000000..8d0790e
--- /dev/null
+++ b/app/components/ui/action-menu.tsx
@@ -0,0 +1,75 @@
+"use client"
+import React, { useState, useRef, useEffect } from "react"
+
+interface ActionMenuProps {
+  onEdit?: () => void
+  onBan?: () => void
+  onDelete?: () => void
+}
+
+export function ActionMenu({ onEdit, onBan, onDelete }: ActionMenuProps) {
+  const [open, setOpen] = useState(false)
+  const ref = useRef<HTMLDivElement>(null)
+
+  useEffect(() => {
+    function handleClickOutside(event: MouseEvent) {
+      if (ref.current && !ref.current.contains(event.target as Node)) {
+        setOpen(false)
+      }
+    }
+    document.addEventListener("mousedown", handleClickOutside)
+    return () => {
+      document.removeEventListener("mousedown", handleClickOutside)
+    }
+  }, [])
+
+  return (
+    <div className="relative inline-block text-left" ref={ref}>
+      <button
+        onClick={() => setOpen(!open)}
+        className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold"
+      >
+        Actions
+      </button>
+      {open && (
+        <div className="absolute right-0 mt-2 w-36 rounded-md bg-darkbg2 shadow-lg ring-1 ring-black ring-opacity-5 z-10">
+          <div className="py-1 text-sm text-white">
+            {onEdit && (
+              <button
+                className="block w-full text-left px-4 py-2 hover:bg-primary/70"
+                onClick={() => {
+                  setOpen(false)
+                  onEdit()
+                }}
+              >
+                Éditer
+              </button>
+            )}
+            {onBan && (
+              <button
+                className="block w-full text-left px-4 py-2 hover:bg-red-600"
+                onClick={() => {
+                  setOpen(false)
+                  onBan()
+                }}
+              >
+                Bannir
+              </button>
+            )}
+            {onDelete && (
+              <button
+                className="block w-full text-left px-4 py-2 hover:bg-red-700"
+                onClick={() => {
+                  setOpen(false)
+                  onDelete()
+                }}
+              >
+                Supprimer
+              </button>
+            )}
+          </div>
+        </div>
+      )}
+    </div>
+  )
+}

commit 8f5a120ec5b7b94ab2393617ae745397ebb82168
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:19:34 2025 +0200

    Update page.tsx

diff --git a/app/admin/beatmakers/page.tsx b/app/admin/beatmakers/page.tsx
index 7b05a3d..a8e36db 100644
--- a/app/admin/beatmakers/page.tsx
+++ b/app/admin/beatmakers/page.tsx
@@ -1,4 +1,6 @@
 import React from "react"
+import { StatusBadge } from "@/components/ui/status-badge"
+import { ActionMenu } from "@/components/ui/action-menu"
 
 type Beatmaker = {
   id: string
@@ -16,6 +18,18 @@ const dummyBeatmakers: Beatmaker[] = [
 ]
 
 export default function AdminBeatmakersPage() {
+  const handleEdit = (id: string) => {
+    alert(`Éditer beatmaker ${id}`)
+  }
+  const handleBan = (id: string) => {
+    alert(`Bannir beatmaker ${id}`)
+  }
+  const handleDelete = (id: string) => {
+    if (confirm("Êtes-vous sûr de vouloir supprimer ce beatmaker ? Cette action est irréversible.")) {
+      alert(`Beatmaker ${id} supprimé`)
+    }
+  }
+
   return (
     <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
       <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Beatmakers</h1>
@@ -43,7 +57,11 @@ export default function AdminBeatmakersPage() {
                 <td className="px-4 py-3">{b.beatsCount}</td>
                 <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
                 <td className="px-4 py-3">
-                  <ActionMenu beatmakerId={b.id} />
+                  <ActionMenu
+                    onEdit={() => handleEdit(b.id)}
+                    onBan={() => handleBan(b.id)}
+                    onDelete={() => handleDelete(b.id)}
+                  />
                 </td>
               </tr>
             ))}
@@ -53,27 +71,3 @@ export default function AdminBeatmakersPage() {
     </section>
   )
 }
-
-function StatusBadge({ status }: { status: Beatmaker["status"] }) {
-  let color = "bg-gray-500"
-  if (status === "actif") color = "bg-green-600"
-  else if (status === "en attente") color = "bg-yellow-500"
-  else if (status === "banni") color = "bg-red-600"
-
-  return (
-    <span className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${color}`}>
-      {status.toUpperCase()}
-    </span>
-  )
-}
-
-function ActionMenu({ beatmakerId }: { beatmakerId: string }) {
-  return (
-    <div>
-      {/* Ici un menu déroulant avec actions comme Editer, Bannir, Supprimer */}
-      <button className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold">
-        Actions
-      </button>
-    </div>
-  )
-}

commit 9a034ad88b17d68ee295b2819413440d0a58e196
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:22:37 2025 +0200

    Update page.tsx

diff --git a/app/admin/artists/page.tsx b/app/admin/artists/page.tsx
index fd5a9e2..eca19bf 100644
--- a/app/admin/artists/page.tsx
+++ b/app/admin/artists/page.tsx
@@ -1,4 +1,6 @@
 import React from "react"
+import { StatusBadge } from "@/components/ui/status-badge"
+import { ActionMenu } from "@/components/ui/action-menu"
 
 type Artist = {
   id: string
@@ -16,6 +18,18 @@ const dummyArtists: Artist[] = [
 ]
 
 export default function AdminArtistsPage() {
+  const handleEdit = (id: string) => {
+    alert(`Éditer artiste ${id}`)
+  }
+  const handleSuspend = (id: string) => {
+    alert(`Suspendre artiste ${id}`)
+  }
+  const handleDelete = (id: string) => {
+    if (confirm("Êtes-vous sûr de vouloir supprimer cet artiste ? Cette action est irréversible.")) {
+      alert(`Artiste ${id} supprimé`)
+    }
+  }
+
   return (
     <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
       <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Artistes</h1>
@@ -43,7 +57,11 @@ export default function AdminArtistsPage() {
                 <td className="px-4 py-3">{a.purchasesCount}</td>
                 <td className="px-4 py-3">{a.totalSpent.toFixed(2)}</td>
                 <td className="px-4 py-3">
-                  <ActionMenu artistId={a.id} />
+                  <ActionMenu
+                    onEdit={() => handleEdit(a.id)}
+                    onBan={() => handleSuspend(a.id)}
+                    onDelete={() => handleDelete(a.id)}
+                  />
                 </td>
               </tr>
             ))}
@@ -53,27 +71,3 @@ export default function AdminArtistsPage() {
     </section>
   )
 }
-
-function StatusBadge({ status }: { status: Artist["status"] }) {
-  let color = "bg-gray-500"
-  if (status === "actif") color = "bg-green-600"
-  else if (status === "en attente") color = "bg-yellow-500"
-  else if (status === "banni") color = "bg-red-600"
-
-  return (
-    <span className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${color}`}>
-      {status.toUpperCase()}
-    </span>
-  )
-}
-
-function ActionMenu({ artistId }: { artistId: string }) {
-  return (
-    <div>
-      {/* Ici un menu déroulant avec actions comme Editer, Suspendre, Supprimer */}
-      <button className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold">
-        Actions
-      </button>
-    </div>
-  )
-}

commit 262cdef5e28c953943412672d8b6ff307f90c3a2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:24:23 2025 +0200

    Create page.tsx

diff --git a/app/admin/dashboard/page.tsx b/app/admin/dashboard/page.tsx
new file mode 100644
index 0000000..809aefe
--- /dev/null
+++ b/app/admin/dashboard/page.tsx
@@ -0,0 +1,26 @@
+import React from "react"
+import { StatCard } from "@/components/ui/stat-card"
+
+export default function AdminDashboardPage() {
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Tableau de bord SuperAdmin</h1>
+
+      <div className="grid grid-cols-1 md:grid-cols-3 xl:grid-cols-6 gap-6 mb-12">
+        <StatCard title="Nombre d'utilisateurs" value="1 245" />
+        <StatCard title="Beatmakers actifs" value="315" />
+        <StatCard title="Artistes inscrits" value="600" />
+        <StatCard title="Revenus totaux" value="98 750 €" />
+        <StatCard title="Beats vendus" value="2 300" />
+        <StatCard title="Tickets support ouverts" value="15" />
+      </div>
+
+      <section>
+        <h2 className="text-2xl font-semibold mb-4">Dernières activités</h2>
+        <div className="bg-darkbg2 rounded-lg p-6 text-gray-400 italic">
+          [Module d'activités à implémenter]
+        </div>
+      </section>
+    </section>
+  )
+}

commit 8d327b84918f59422a9a6c8dc4f6a76d8b23494c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:25:45 2025 +0200

    Create stat-card.tsx

diff --git a/app/components/ui/stat-card.tsx b/app/components/ui/stat-card.tsx
new file mode 100644
index 0000000..cdd1d59
--- /dev/null
+++ b/app/components/ui/stat-card.tsx
@@ -0,0 +1,15 @@
+import React from "react"
+
+interface StatCardProps {
+  title: string
+  value: string
+}
+
+export function StatCard({ title, value }: StatCardProps) {
+  return (
+    <div className="bg-darkbg2 rounded-lg p-6 shadow-md">
+      <p className="text-gray-400 text-sm">{title}</p>
+      <p className="text-3xl font-bold mt-2">{value}</p>
+    </div>
+  )
+}

commit 2cc6ea58542199fa233219edcaad4c3c8cb49f5c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:27:32 2025 +0200

    Create page.tsx

diff --git a/app/admin/promotions/page.tsx b/app/admin/promotions/page.tsx
new file mode 100644
index 0000000..4fbeb2d
--- /dev/null
+++ b/app/admin/promotions/page.tsx
@@ -0,0 +1,84 @@
+import React from "react"
+
+type Promotion = {
+  id: string
+  name: string
+  description: string
+  active: boolean
+  startDate: string
+  endDate: string
+  discountPercent: number
+}
+
+const dummyPromotions: Promotion[] = [
+  {
+    id: "promo1",
+    name: "Promo Été",
+    description: "10% de réduction sur tous les beats premium",
+    active: true,
+    startDate: "2025-07-01",
+    endDate: "2025-07-31",
+    discountPercent: 10,
+  },
+  {
+    id: "promo2",
+    name: "Black Friday",
+    description: "50% de réduction sur la boutique entière",
+    active: false,
+    startDate: "2024-11-25",
+    endDate: "2024-11-30",
+    discountPercent: 50,
+  },
+]
+
+export default function AdminPromotionsPage() {
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Promotions</h1>
+
+      <div className="overflow-x-auto rounded-lg border border-gray-700">
+        <table className="w-full text-left text-sm">
+          <thead className="bg-darkbg2 text-gray-300">
+            <tr>
+              <th className="px-4 py-3">Nom</th>
+              <th className="px-4 py-3">Description</th>
+              <th className="px-4 py-3">Statut</th>
+              <th className="px-4 py-3">Début</th>
+              <th className="px-4 py-3">Fin</th>
+              <th className="px-4 py-3">Réduction</th>
+              <th className="px-4 py-3">Actions</th>
+            </tr>
+          </thead>
+          <tbody>
+            {dummyPromotions.map((promo) => (
+              <tr key={promo.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
+                <td className="px-4 py-3">{promo.name}</td>
+                <td className="px-4 py-3">{promo.description}</td>
+                <td className="px-4 py-3">
+                  <span
+                    className={`inline-block px-2 py-1 rounded-full text-xs font-semibold ${
+                      promo.active ? "bg-green-600" : "bg-gray-600"
+                    }`}
+                  >
+                    {promo.active ? "Active" : "Inactif"}
+                  </span>
+                </td>
+                <td className="px-4 py-3">{promo.startDate}</td>
+                <td className="px-4 py-3">{promo.endDate}</td>
+                <td className="px-4 py-3">{promo.discountPercent}%</td>
+                <td className="px-4 py-3">
+                  <button className="bg-primary px-3 py-1 rounded hover:bg-primary/80 text-sm font-semibold mr-2">
+                    Éditer
+                  </button>
+                  <button className="bg-red-600 px-3 py-1 rounded hover:bg-red-700 text-sm font-semibold">
+                    Supprimer
+                  </button>
+                </td>
+              </tr>
+            ))}
+          </tbody>
+        </table>
+      </div>
+    </section>
+  )
+}

commit 5583544b99d46a969b171d2286727abf5094fd38
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 00:31:58 2025 +0200

    Update page.tsx

diff --git a/app/admin/promotions/page.tsx b/app/admin/promotions/page.tsx
index 4fbeb2d..6fff64d 100644
--- a/app/admin/promotions/page.tsx
+++ b/app/admin/promotions/page.tsx
@@ -1,4 +1,6 @@
-import React from "react"
+"use client"
+
+import React, { useState } from "react"
 
 type Promotion = {
   id: string
@@ -10,7 +12,7 @@ type Promotion = {
   discountPercent: number
 }
 
-const dummyPromotions: Promotion[] = [
+const initialPromotions: Promotion[] = [
   {
     id: "promo1",
     name: "Promo Été",
@@ -32,10 +34,105 @@ const dummyPromotions: Promotion[] = [
 ]
 
 export default function AdminPromotionsPage() {
+  const [promotions, setPromotions] = useState<Promotion[]>(initialPromotions)
+  const [form, setForm] = useState<Omit<Promotion, "id">>({
+    name: "",
+    description: "",
+    active: false,
+    startDate: "",
+    endDate: "",
+    discountPercent: 0,
+  })
+
+  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
+    const { name, value, type, checked } = e.target
+    setForm((prev) => ({
+      ...prev,
+      [name]: type === "checkbox" ? checked : value,
+    }))
+  }
+
+  const handleAddPromotion = () => {
+    const newPromotion: Promotion = {
+      ...form,
+      id: `promo${Date.now()}`,
+    }
+    setPromotions((prev) => [...prev, newPromotion])
+    setForm({
+      name: "",
+      description: "",
+      active: false,
+      startDate: "",
+      endDate: "",
+      discountPercent: 0,
+    })
+  }
+
   return (
     <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
       <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Promotions</h1>
 
+      {/* Formulaire de création */}
+      <div className="bg-darkbg2 p-6 rounded-lg shadow mb-10">
+        <h2 className="text-2xl font-semibold mb-4 text-white">Créer une nouvelle promotion</h2>
+        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
+          <input
+            type="text"
+            name="name"
+            placeholder="Nom de la promotion"
+            value={form.name}
+            onChange={handleChange}
+            className="bg-darkbg3 text-white p-2 rounded border border-gray-600"
+          />
+          <input
+            type="number"
+            name="discountPercent"
+            placeholder="Pourcentage de réduction"
+            value={form.discountPercent}
+            onChange={handleChange}
+            className="bg-darkbg3 text-white p-2 rounded border border-gray-600"
+          />
+          <input
+            type="date"
+            name="startDate"
+            value={form.startDate}
+            onChange={handleChange}
+            className="bg-darkbg3 text-white p-2 rounded border border-gray-600"
+          />
+          <input
+            type="date"
+            name="endDate"
+            value={form.endDate}
+            onChange={handleChange}
+            className="bg-darkbg3 text-white p-2 rounded border border-gray-600"
+          />
+          <textarea
+            name="description"
+            placeholder="Description"
+            value={form.description}
+            onChange={handleChange}
+            className="bg-darkbg3 text-white p-2 rounded border border-gray-600 col-span-1 md:col-span-2"
+          />
+          <label className="flex items-center gap-2 col-span-1 md:col-span-2 text-white">
+            <input
+              type="checkbox"
+              name="active"
+              checked={form.active}
+              onChange={handleChange}
+              className="form-checkbox h-5 w-5 text-primary"
+            />
+            Activer cette promotion
+          </label>
+        </div>
+        <button
+          onClick={handleAddPromotion}
+          className="mt-4 bg-primary hover:bg-primary/80 text-white font-bold py-2 px-6 rounded"
+        >
+          Ajouter la promotion
+        </button>
+      </div>
+
+      {/* Tableau des promotions */}
       <div className="overflow-x-auto rounded-lg border border-gray-700">
         <table className="w-full text-left text-sm">
           <thead className="bg-darkbg2 text-gray-300">
@@ -50,7 +147,7 @@ export default function AdminPromotionsPage() {
             </tr>
           </thead>
           <tbody>
-            {dummyPromotions.map((promo) => (
+            {promotions.map((promo) => (
               <tr key={promo.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
                 <td className="px-4 py-3">{promo.name}</td>
                 <td className="px-4 py-3">{promo.description}</td>

commit 68620cc217a72a97aecfdf4fce104004af21f975
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:03:28 2025 +0200

    Create page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
new file mode 100644
index 0000000..e66adec
--- /dev/null
+++ b/src/app/pricing/page.tsx
@@ -0,0 +1,22 @@
+import { Metadata } from "next";
+import { PricingPlans } from "@/components/pricing/plans";
+import { Features } from "@/components/pricing/features";
+import { Licenses } from "@/components/pricing/licenses";
+import { Addons } from "@/components/pricing/addons";
+
+export const metadata: Metadata = {
+  title: "Tarifs | BeatsMarket",
+  description:
+    "Découvrez nos plans d'abonnement pour les beatmakers ainsi que les options de licences musicales pour les artistes.",
+};
+
+export default function PricingPage() {
+  return (
+    <main className="flex flex-col gap-16 px-4 py-12 sm:px-8 md:px-16 xl:px-32 2xl:px-64">
+      <PricingPlans />
+      <Features />
+      <Addons />
+      <Licenses />
+    </main>
+  );
+}

commit 2db11455c59454d174334c0ab4f79f783a409c5a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:06:57 2025 +0200

    Create plans.tsx

diff --git a/src/components/pricing/plans.tsx b/src/components/pricing/plans.tsx
new file mode 100644
index 0000000..5181c71
--- /dev/null
+++ b/src/components/pricing/plans.tsx
@@ -0,0 +1,123 @@
+"use client";
+
+import { useState } from "react";
+import { Button } from "@/components/ui/button";
+import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
+import { Check, Crown } from "lucide-react";
+
+const plans = [
+  {
+    name: "Gratuit",
+    price: "0€",
+    features: [
+      "1 beat en ligne",
+      "Vente avec licence MP3 uniquement",
+      "Pas d'accès aux services IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Bronze",
+    price: "10€ / mois",
+    features: [
+      "10 beats en ligne",
+      "Vente MP3 & WAV",
+      "Accès au mastering IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Or",
+    price: "15€ / mois",
+    features: [
+      "50 beats en ligne",
+      "Vente MP3, WAV & Stems",
+      "Mastering + Covers IA",
+    ],
+    highlighted: true,
+  },
+  {
+    name: "Diamant",
+    price: "20€ / mois",
+    features: [
+      "Beats illimités",
+      "Vente exclusive autorisée",
+      "Mastering, Covers & Boosts",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Diamant Plus",
+    price: "29,90€ / mois",
+    features: [
+      "Boosts + Offres personnalisées",
+      "Suivi dédié",
+      "Préparation catalogue Believe",
+    ],
+    highlighted: false,
+  },
+];
+
+export function PricingPlans() {
+  const [selected, setSelected] = useState<number | null>(null);
+
+  return (
+    <section className="text-white">
+      <h2 className="text-3xl font-bold mb-6 text-center">Plans Beatmaker</h2>
+      <div className="grid md:grid-cols-5 gap-6">
+        {plans.map((plan, index) => (
+          <div
+            key={plan.name}
+            className={`rounded-2xl p-6 border ${
+              plan.highlighted
+                ? "border-pink-600 bg-gradient-to-br from-pink-900/50 to-pink-700/10 shadow-lg"
+                : "border-white/10 bg-white/5"
+            } flex flex-col justify-between`}
+          >
+            <div>
+              <div className="flex items-center justify-between">
+                <h3 className="text-xl font-semibold">{plan.name}</h3>
+                {plan.highlighted && <Crown className="text-yellow-400" />}
+              </div>
+              <p className="text-2xl font-bold my-4">{plan.price}</p>
+              <ul className="space-y-2 text-sm">
+                {plan.features.map((feature) => (
+                  <li key={feature} className="flex items-center gap-2">
+                    <Check className="w-4 h-4 text-green-400" />
+                    {feature}
+                  </li>
+                ))}
+              </ul>
+            </div>
+            <Dialog>
+              <DialogTrigger asChild>
+                <Button
+                  className="mt-6 w-full"
+                  variant={plan.highlighted ? "default" : "secondary"}
+                  onClick={() => setSelected(index)}
+                >
+                  Choisir
+                </Button>
+              </DialogTrigger>
+              <DialogContent className="text-white bg-[#111] border-white/10 max-w-md">
+                <h3 className="text-xl font-bold mb-4">
+                  Confirmer le plan {plan.name}
+                </h3>
+                <p className="mb-6">
+                  Souhaitez-vous souscrire à l’offre <strong>{plan.name}</strong> ?
+                  Cela activera automatiquement les avantages liés à ce plan.
+                </p>
+                <div className="flex justify-end gap-2">
+                  <Button variant="ghost" onClick={() => setSelected(null)}>
+                    Annuler
+                  </Button>
+                  <Button onClick={() => setSelected(null)}>Confirmer</Button>
+                </div>
+              </DialogContent>
+            </Dialog>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}

commit 001607b214240509b29f66e961b392fb096bbabe
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:23:46 2025 +0200

    Update plans.tsx

diff --git a/src/components/pricing/plans.tsx b/src/components/pricing/plans.tsx
index 5181c71..464a4c3 100644
--- a/src/components/pricing/plans.tsx
+++ b/src/components/pricing/plans.tsx
@@ -8,29 +8,39 @@ import { Check, Crown } from "lucide-react";
 const plans = [
   {
     name: "Gratuit",
-    price: "0€",
+    price: "0 €",
+    commission: "35%",
+    beatLimit: "Jusqu'à 10 beats",
     features: [
-      "1 beat en ligne",
-      "Vente avec licence MP3 uniquement",
+      "Support de base",
+      "Vente de toutes les licences disponibles",
       "Pas d'accès aux services IA",
+      "Statistiques de base",
     ],
     highlighted: false,
   },
   {
     name: "Bronze",
-    price: "10€ / mois",
+    price: "10 € / mois",
+    commission: "20%",
+    beatLimit: "Jusqu'à 30 beats",
     features: [
-      "10 beats en ligne",
+      "Support développé",
+      "Accès au mastering IA et cover IA",
+      "Statistiques avancées",
       "Vente MP3 & WAV",
-      "Accès au mastering IA",
     ],
     highlighted: false,
   },
   {
     name: "Or",
-    price: "15€ / mois",
+    price: "15 € / mois",
+    commission: "15%",
+    beatLimit: "Jusqu'à 50 beats",
     features: [
-      "50 beats en ligne",
+      "Support développé",
+      "Accès au mastering IA et cover IA",
+      "Statistiques avancées",
       "Vente MP3, WAV & Stems",
       "Mastering + Covers IA",
     ],
@@ -38,21 +48,27 @@ const plans = [
   },
   {
     name: "Diamant",
-    price: "20€ / mois",
+    price: "20 € / mois",
+    commission: "10%",
+    beatLimit: "Jusqu'à 100 beats",
     features: [
-      "Beats illimités",
-      "Vente exclusive autorisée",
-      "Mastering, Covers & Boosts",
+      "Support développé",
+      "Statistiques avancées",
+      "1 mise en avant de beat par semaine (1x par mois)",
+      "1 mise en avant de boutique par semaine (1x par mois)",
     ],
     highlighted: false,
   },
   {
     name: "Diamant Plus",
-    price: "29,90€ / mois",
+    price: "29 € / mois",
+    commission: "0%",
+    beatLimit: "Beats illimités",
     features: [
-      "Boosts + Offres personnalisées",
-      "Suivi dédié",
-      "Préparation catalogue Believe",
+      "Support développé",
+      "Statistiques avancées",
+      "2 mises en avant de beat par semaine (1x par mois)",
+      "2 mises en avant de boutique par semaine (1x par mois)",
     ],
     highlighted: false,
   },
@@ -79,7 +95,9 @@ export function PricingPlans() {
                 <h3 className="text-xl font-semibold">{plan.name}</h3>
                 {plan.highlighted && <Crown className="text-yellow-400" />}
               </div>
-              <p className="text-2xl font-bold my-4">{plan.price}</p>
+              <p className="text-2xl font-bold my-2">{plan.price}</p>
+              <p className="text-sm italic mb-1">Commission sur les ventes : {plan.commission}</p>
+              <p className="text-sm italic mb-4">{plan.beatLimit}</p>
               <ul className="space-y-2 text-sm">
                 {plan.features.map((feature) => (
                   <li key={feature} className="flex items-center gap-2">
@@ -104,8 +122,7 @@ export function PricingPlans() {
                   Confirmer le plan {plan.name}
                 </h3>
                 <p className="mb-6">
-                  Souhaitez-vous souscrire à l’offre <strong>{plan.name}</strong> ?
-                  Cela activera automatiquement les avantages liés à ce plan.
+                  Souhaitez-vous souscrire à l’offre <strong>{plan.name}</strong> ? Cela activera automatiquement les avantages liés à ce plan.
                 </p>
                 <div className="flex justify-end gap-2">
                   <Button variant="ghost" onClick={() => setSelected(null)}>

commit bf5b0e77379e17e99414c0072937538dd3ab8d14
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:44:12 2025 +0200

    Update plans.tsx

diff --git a/src/components/pricing/plans.tsx b/src/components/pricing/plans.tsx
index 464a4c3..16a50e1 100644
--- a/src/components/pricing/plans.tsx
+++ b/src/components/pricing/plans.tsx
@@ -12,63 +12,70 @@ const plans = [
     commission: "35%",
     beatLimit: "Jusqu'à 10 beats",
     features: [
+      "Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)",
       "Support de base",
-      "Vente de toutes les licences disponibles",
-      "Pas d'accès aux services IA",
-      "Statistiques de base",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
     ],
     highlighted: false,
   },
   {
     name: "Bronze",
-    price: "10 € / mois",
+    price: "10 €",
     commission: "20%",
     beatLimit: "Jusqu'à 30 beats",
     features: [
-      "Support développé",
-      "Accès au mastering IA et cover IA",
+      "Vente de toutes les licences",
+      "Support plus développé",
       "Statistiques avancées",
-      "Vente MP3 & WAV",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
     ],
     highlighted: false,
   },
   {
     name: "Or",
-    price: "15 € / mois",
+    price: "15 €",
     commission: "15%",
     beatLimit: "Jusqu'à 50 beats",
     features: [
-      "Support développé",
-      "Accès au mastering IA et cover IA",
+      "Vente de toutes les licences",
+      "Support plus développé",
       "Statistiques avancées",
-      "Vente MP3, WAV & Stems",
-      "Mastering + Covers IA",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
     ],
-    highlighted: true,
+    highlighted: false,
   },
   {
     name: "Diamant",
-    price: "20 € / mois",
+    price: "20 €",
     commission: "10%",
     beatLimit: "Jusqu'à 100 beats",
     features: [
-      "Support développé",
+      "Vente de toutes les licences",
+      "Support plus développé",
       "Statistiques avancées",
-      "1 mise en avant de beat par semaine (1x par mois)",
-      "1 mise en avant de boutique par semaine (1x par mois)",
+      "1 mise en avant de beat par semaine (1 fois par mois)",
+      "1 mise en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
     ],
-    highlighted: false,
+    highlighted: true,
   },
   {
     name: "Diamant Plus",
-    price: "29 € / mois",
+    price: "29,90 €",
     commission: "0%",
     beatLimit: "Beats illimités",
     features: [
-      "Support développé",
+      "Vente de toutes les licences",
+      "Support plus développé",
       "Statistiques avancées",
-      "2 mises en avant de beat par semaine (1x par mois)",
-      "2 mises en avant de boutique par semaine (1x par mois)",
+      "2 mises en avant de beat par semaine (1 fois par mois)",
+      "2 mises en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
     ],
     highlighted: false,
   },
@@ -78,26 +85,27 @@ export function PricingPlans() {
   const [selected, setSelected] = useState<number | null>(null);
 
   return (
-    <section className="text-white">
-      <h2 className="text-3xl font-bold mb-6 text-center">Plans Beatmaker</h2>
-      <div className="grid md:grid-cols-5 gap-6">
-        {plans.map((plan, index) => (
+    <section className="text-white px-4 py-8 max-w-7xl mx-auto">
+      <h2 className="text-4xl font-bold mb-10 text-center">Plans Beatmaker</h2>
+      <div className="grid grid-cols-1 md:grid-cols-5 gap-8">
+        {plans.map((plan, idx) => (
           <div
             key={plan.name}
-            className={`rounded-2xl p-6 border ${
+            className={`rounded-3xl p-6 border flex flex-col justify-between ${
               plan.highlighted
-                ? "border-pink-600 bg-gradient-to-br from-pink-900/50 to-pink-700/10 shadow-lg"
-                : "border-white/10 bg-white/5"
-            } flex flex-col justify-between`}
+                ? "border-pink-600 bg-gradient-to-br from-pink-900/50 to-pink-700/20 shadow-lg"
+                : "border-white/20 bg-white/5"
+            }`}
           >
             <div>
-              <div className="flex items-center justify-between">
-                <h3 className="text-xl font-semibold">{plan.name}</h3>
+              <div className="flex justify-between items-center mb-2">
+                <h3 className="text-2xl font-semibold">{plan.name}</h3>
                 {plan.highlighted && <Crown className="text-yellow-400" />}
               </div>
-              <p className="text-2xl font-bold my-2">{plan.price}</p>
-              <p className="text-sm italic mb-1">Commission sur les ventes : {plan.commission}</p>
-              <p className="text-sm italic mb-4">{plan.beatLimit}</p>
+              <p className="text-3xl font-extrabold mb-2">{plan.price}</p>
+              <p className="italic text-sm mb-1">Commission sur les ventes : {plan.commission}</p>
+              <p className="italic text-sm mb-4">{plan.beatLimit}</p>
+
               <ul className="space-y-2 text-sm">
                 {plan.features.map((feature) => (
                   <li key={feature} className="flex items-center gap-2">
@@ -107,24 +115,24 @@ export function PricingPlans() {
                 ))}
               </ul>
             </div>
+
             <Dialog>
               <DialogTrigger asChild>
                 <Button
                   className="mt-6 w-full"
                   variant={plan.highlighted ? "default" : "secondary"}
-                  onClick={() => setSelected(index)}
+                  onClick={() => setSelected(idx)}
                 >
-                  Choisir
+                  Choisir ce plan
                 </Button>
               </DialogTrigger>
-              <DialogContent className="text-white bg-[#111] border-white/10 max-w-md">
-                <h3 className="text-xl font-bold mb-4">
-                  Confirmer le plan {plan.name}
-                </h3>
+
+              <DialogContent className="max-w-md bg-[#111] border border-white/20 text-white rounded-xl">
+                <h3 className="text-xl font-bold mb-4">Confirmer le plan {plan.name}</h3>
                 <p className="mb-6">
-                  Souhaitez-vous souscrire à l’offre <strong>{plan.name}</strong> ? Cela activera automatiquement les avantages liés à ce plan.
+                  Vous êtes sur le point de souscrire au plan <strong>{plan.name}</strong>. Voulez-vous continuer ?
                 </p>
-                <div className="flex justify-end gap-2">
+                <div className="flex justify-end gap-4">
                   <Button variant="ghost" onClick={() => setSelected(null)}>
                     Annuler
                   </Button>

commit 7ac173c57bc8d0a23fb1a5aeaa1e12b5695d40a8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:49:44 2025 +0200

    Update page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
index e66adec..d0983db 100644
--- a/src/app/pricing/page.tsx
+++ b/src/app/pricing/page.tsx
@@ -1,22 +1,76 @@
-import { Metadata } from "next";
-import { PricingPlans } from "@/components/pricing/plans";
-import { Features } from "@/components/pricing/features";
-import { Licenses } from "@/components/pricing/licenses";
-import { Addons } from "@/components/pricing/addons";
+"use client";
 
-export const metadata: Metadata = {
-  title: "Tarifs | BeatsMarket",
-  description:
-    "Découvrez nos plans d'abonnement pour les beatmakers ainsi que les options de licences musicales pour les artistes.",
-};
+import React from "react";
+import { PricingPlans } from "@/components/pricing/Plans";
+import { licenses, services } from "@/components/pricing/data";
+
+function Licenses() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Licences proposées</h2>
+      <div className="space-y-8">
+        {licenses.map((license) => (
+          <div
+            key={license.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20"
+          >
+            <h3 className="text-2xl font-semibold mb-2">{license.name}</h3>
+            <p>
+              <strong>Cible :</strong> {license.target}
+            </p>
+            <p>
+              <strong>Fichiers fournis :</strong> {license.files}
+            </p>
+            <p>
+              <strong>Droits :</strong> {license.rights}
+            </p>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+function Services() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Services à la carte</h2>
+      <div className="space-y-8">
+        {services.map((service) => (
+          <div
+            key={service.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20"
+          >
+            <h3 className="text-2xl font-semibold mb-2">{service.name}</h3>
+            <p className="mb-4">{service.description}</p>
+            <ul className="list-disc list-inside space-y-1 text-sm">
+              {service.prices.map((priceItem, idx) => {
+                const label =
+                  priceItem.duration ?? priceItem.formula ?? priceItem.type ?? priceItem.fee ?? "";
+                return (
+                  <li key={idx}>
+                    <strong>{label} :</strong> {priceItem.price}
+                  </li>
+                );
+              })}
+            </ul>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
 
 export default function PricingPage() {
   return (
-    <main className="flex flex-col gap-16 px-4 py-12 sm:px-8 md:px-16 xl:px-32 2xl:px-64">
+    <main className="bg-[#111] min-h-screen pb-16">
+      <h1 className="text-center text-5xl font-extrabold text-white pt-12 pb-8">
+        Tarifs et Offres
+      </h1>
+
       <PricingPlans />
-      <Features />
-      <Addons />
       <Licenses />
+      <Services />
     </main>
   );
 }

commit 30c36369cddcf2ccee1e87fbea3471f95b6e1aad
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:51:11 2025 +0200

    Update plans.tsx

diff --git a/src/components/pricing/plans.tsx b/src/components/pricing/plans.tsx
index 16a50e1..80bdd1f 100644
--- a/src/components/pricing/plans.tsx
+++ b/src/components/pricing/plans.tsx
@@ -1,11 +1,4 @@
-"use client";
-
-import { useState } from "react";
-import { Button } from "@/components/ui/button";
-import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
-import { Check, Crown } from "lucide-react";
-
-const plans = [
+export const plans = [
   {
     name: "Gratuit",
     price: "0 €",
@@ -81,68 +74,78 @@ const plans = [
   },
 ];
 
-export function PricingPlans() {
-  const [selected, setSelected] = useState<number | null>(null);
-
-  return (
-    <section className="text-white px-4 py-8 max-w-7xl mx-auto">
-      <h2 className="text-4xl font-bold mb-10 text-center">Plans Beatmaker</h2>
-      <div className="grid grid-cols-1 md:grid-cols-5 gap-8">
-        {plans.map((plan, idx) => (
-          <div
-            key={plan.name}
-            className={`rounded-3xl p-6 border flex flex-col justify-between ${
-              plan.highlighted
-                ? "border-pink-600 bg-gradient-to-br from-pink-900/50 to-pink-700/20 shadow-lg"
-                : "border-white/20 bg-white/5"
-            }`}
-          >
-            <div>
-              <div className="flex justify-between items-center mb-2">
-                <h3 className="text-2xl font-semibold">{plan.name}</h3>
-                {plan.highlighted && <Crown className="text-yellow-400" />}
-              </div>
-              <p className="text-3xl font-extrabold mb-2">{plan.price}</p>
-              <p className="italic text-sm mb-1">Commission sur les ventes : {plan.commission}</p>
-              <p className="italic text-sm mb-4">{plan.beatLimit}</p>
-
-              <ul className="space-y-2 text-sm">
-                {plan.features.map((feature) => (
-                  <li key={feature} className="flex items-center gap-2">
-                    <Check className="w-4 h-4 text-green-400" />
-                    {feature}
-                  </li>
-                ))}
-              </ul>
-            </div>
-
-            <Dialog>
-              <DialogTrigger asChild>
-                <Button
-                  className="mt-6 w-full"
-                  variant={plan.highlighted ? "default" : "secondary"}
-                  onClick={() => setSelected(idx)}
-                >
-                  Choisir ce plan
-                </Button>
-              </DialogTrigger>
+export const licenses = [
+  {
+    name: "Licence Basique (MP3)",
+    target: "Artistes débutants, maquettes",
+    files: "1 fichier MP3 (avec tag vocal)",
+    rights:
+      "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
+  },
+  {
+    name: "Licence Premium (WAV)",
+    target: "Artistes indépendants pour plateformes de streaming",
+    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
+    rights:
+      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
+  },
+  {
+    name: "Licence Exclusive",
+    target: "Artistes signés, projets majeurs",
+    files: "MP3 + WAV",
+    rights:
+      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
+  },
+  {
+    name: "Licence Exclusive + Pistes (Stems)",
+    target: "Pack ultime, contrôle total",
+    files: "MP3 + WAV + pistes séparées",
+    rights:
+      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
+  },
+];
 
-              <DialogContent className="max-w-md bg-[#111] border border-white/20 text-white rounded-xl">
-                <h3 className="text-xl font-bold mb-4">Confirmer le plan {plan.name}</h3>
-                <p className="mb-6">
-                  Vous êtes sur le point de souscrire au plan <strong>{plan.name}</strong>. Voulez-vous continuer ?
-                </p>
-                <div className="flex justify-end gap-4">
-                  <Button variant="ghost" onClick={() => setSelected(null)}>
-                    Annuler
-                  </Button>
-                  <Button onClick={() => setSelected(null)}>Confirmer</Button>
-                </div>
-              </DialogContent>
-            </Dialog>
-          </div>
-        ))}
-      </div>
-    </section>
-  );
-}
+export const services = [
+  {
+    name: "Mises en avant (Beat ou Boutique)",
+    description: "Augmente la visibilité sur le site",
+    prices: [
+      { duration: "1 Jour", price: "1 €" },
+      { duration: "1 Semaine", price: "3 €" },
+      { duration: "2 Semaines", price: "5 €" },
+      { duration: "1 Mois", price: "8 €" },
+    ],
+  },
+  {
+    name: "Mastering IA",
+    description: "Améliore le son d'un morceau",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Cover IA",
+    description: "Génère une pochette unique",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Distribution Digitale",
+    description: "Publie la musique sur les plateformes de streaming",
+    prices: [
+      { type: "Single", price: "14,90 €" },
+      { type: "Album / EP", price: "38,90 €" },
+    ],
+  },
+  {
+    name: "Gestion des Droits Musicaux",
+    description: "Collecte les royalties pour les créateurs",
+    prices: [
+      { fee: "Frais d'inscription", price: "0 €" },
+      { fee: "Commission", price: "25% sur les droits perçus" },
+    ],
+  },
+];

commit 5982596381712cbb9504fce0f0e46f06f9d463aa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:52:45 2025 +0200

    Create Licenses.tsx

diff --git a/src/components/pricing/Licenses.tsx b/src/components/pricing/Licenses.tsx
new file mode 100644
index 0000000..ad99b9c
--- /dev/null
+++ b/src/components/pricing/Licenses.tsx
@@ -0,0 +1,31 @@
+"use client";
+
+import React from "react";
+import { licenses } from "./data";
+
+export function Licenses() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Licences proposées</h2>
+      <div className="grid gap-8 md:grid-cols-2">
+        {licenses.map((license) => (
+          <div
+            key={license.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20 hover:bg-white/20 transition"
+          >
+            <h3 className="text-2xl font-semibold mb-3">{license.name}</h3>
+            <p className="mb-2">
+              <strong>Cible :</strong> {license.target}
+            </p>
+            <p className="mb-2">
+              <strong>Fichiers fournis :</strong> {license.files}
+            </p>
+            <p>
+              <strong>Droits :</strong> {license.rights}
+            </p>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}

commit da04c8ea7f476cb52b075dd16bd1f7a1e3c9ee2c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:53:40 2025 +0200

    Create Services.tsx

diff --git a/src/components/pricing/Services.tsx b/src/components/pricing/Services.tsx
new file mode 100644
index 0000000..6228d51
--- /dev/null
+++ b/src/components/pricing/Services.tsx
@@ -0,0 +1,38 @@
+"use client";
+
+import React from "react";
+import { services } from "./data";
+
+export function Services() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Services à la carte</h2>
+      <div className="grid gap-8 md:grid-cols-2">
+        {services.map((service) => (
+          <div
+            key={service.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20 hover:bg-white/20 transition"
+          >
+            <h3 className="text-2xl font-semibold mb-4">{service.name}</h3>
+            <p className="mb-4">{service.description}</p>
+            <ul className="list-disc list-inside space-y-1 text-sm">
+              {service.prices.map((priceItem, idx) => {
+                const label =
+                  priceItem.duration ??
+                  priceItem.formula ??
+                  priceItem.type ??
+                  priceItem.fee ??
+                  "";
+                return (
+                  <li key={idx}>
+                    <strong>{label} :</strong> {priceItem.price}
+                  </li>
+                );
+              })}
+            </ul>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}

commit 51c32a237aa32a900fbd8b5cf8155d5e34f15b66
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 06:54:49 2025 +0200

    Update page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
index d0983db..7e8f8be 100644
--- a/src/app/pricing/page.tsx
+++ b/src/app/pricing/page.tsx
@@ -1,65 +1,6 @@
-"use client";
-
-import React from "react";
 import { PricingPlans } from "@/components/pricing/Plans";
-import { licenses, services } from "@/components/pricing/data";
-
-function Licenses() {
-  return (
-    <section className="text-white max-w-5xl mx-auto px-4 py-12">
-      <h2 className="text-3xl font-bold mb-8 text-center">Licences proposées</h2>
-      <div className="space-y-8">
-        {licenses.map((license) => (
-          <div
-            key={license.name}
-            className="bg-white/10 rounded-xl p-6 border border-white/20"
-          >
-            <h3 className="text-2xl font-semibold mb-2">{license.name}</h3>
-            <p>
-              <strong>Cible :</strong> {license.target}
-            </p>
-            <p>
-              <strong>Fichiers fournis :</strong> {license.files}
-            </p>
-            <p>
-              <strong>Droits :</strong> {license.rights}
-            </p>
-          </div>
-        ))}
-      </div>
-    </section>
-  );
-}
-
-function Services() {
-  return (
-    <section className="text-white max-w-5xl mx-auto px-4 py-12">
-      <h2 className="text-3xl font-bold mb-8 text-center">Services à la carte</h2>
-      <div className="space-y-8">
-        {services.map((service) => (
-          <div
-            key={service.name}
-            className="bg-white/10 rounded-xl p-6 border border-white/20"
-          >
-            <h3 className="text-2xl font-semibold mb-2">{service.name}</h3>
-            <p className="mb-4">{service.description}</p>
-            <ul className="list-disc list-inside space-y-1 text-sm">
-              {service.prices.map((priceItem, idx) => {
-                const label =
-                  priceItem.duration ?? priceItem.formula ?? priceItem.type ?? priceItem.fee ?? "";
-                return (
-                  <li key={idx}>
-                    <strong>{label} :</strong> {priceItem.price}
-                  </li>
-                );
-              })}
-            </ul>
-          </div>
-        ))}
-      </div>
-    </section>
-  );
-}
+import { Licenses } from "@/components/pricing/Licenses";
+import { Services } from "@/components/pricing/Services";
 
 export default function PricingPage() {
   return (

commit d2ef67968559f2eac88eff78cc2e6c6f03ff46eb
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:02:31 2025 +0200

    Update page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
index 7e8f8be..d40950e 100644
--- a/src/app/pricing/page.tsx
+++ b/src/app/pricing/page.tsx
@@ -1,17 +1,59 @@
-import { PricingPlans } from "@/components/pricing/Plans";
-import { Licenses } from "@/components/pricing/Licenses";
-import { Services } from "@/components/pricing/Services";
-
-export default function PricingPage() {
-  return (
-    <main className="bg-[#111] min-h-screen pb-16">
-      <h1 className="text-center text-5xl font-extrabold text-white pt-12 pb-8">
-        Tarifs et Offres
-      </h1>
-
-      <PricingPlans />
-      <Licenses />
-      <Services />
-    </main>
-  );
-}
+<section className="w-full py-16 border-t border-white/10" id="licenses">
+  <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
+    <h2 className="text-3xl font-bold tracking-tight text-white sm:text-4xl mb-6 text-center">
+      Licences disponibles
+    </h2>
+    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
+      {[
+        {
+          name: "Licence Basique MP3",
+          description:
+            "Usage personnel et non commercial limité. Autorisé pour les plateformes de streaming avec seuil de 100k streams.",
+          files: "MP3 haute qualité",
+          rights:
+            "Usage non-exclusif, pas de diffusion radio ni TV, crédit requis.",
+        },
+        {
+          name: "Licence Premium WAV",
+          description:
+            "Utilisation commerciale modérée, jusqu’à 500k streams. Clip YouTube autorisé.",
+          files: "WAV + MP3",
+          rights:
+            "Non-exclusif, diffusion limitée, monétisation partielle autorisée.",
+        },
+        {
+          name: "Licence Exclusive",
+          description:
+            "Usage commercial illimité, sauf modifications de stems. 1 million de streams autorisés.",
+          files: "WAV + MP3 + contrat PDF",
+          rights:
+            "Exclusivité temporaire, pas de revente ni modification structurelle.",
+        },
+        {
+          name: "Exclusive + Stems",
+          description:
+            "Tous droits d'exploitation commerciale + mixage personnalisé avec stems.",
+          files: "WAV + MP3 + stems + contrat PDF",
+          rights:
+            "Exclusivité complète sauf revente. Aucune redistribution du beat autorisée.",
+        },
+      ].map((license, i) => (
+        <div
+          key={i}
+          className="bg-white/5 border border-white/10 rounded-2xl p-6 text-white shadow-md backdrop-blur-sm"
+        >
+          <h3 className="text-xl font-semibold mb-2">{license.name}</h3>
+          <p className="text-sm text-white/80 mb-3">{license.description}</p>
+          <ul className="text-sm space-y-1">
+            <li>
+              <strong>Fichiers fournis :</strong> {license.files}
+            </li>
+            <li>
+              <strong>Droits :</strong> {license.rights}
+            </li>
+          </ul>
+        </div>
+      ))}
+    </div>
+  </div>
+</section>

commit 047c9b0b76f7487fb29fe48ccc2f7f5c4de77e5e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:05:25 2025 +0200

    Update page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
index d40950e..4b587b6 100644
--- a/src/app/pricing/page.tsx
+++ b/src/app/pricing/page.tsx
@@ -1,59 +1,187 @@
-<section className="w-full py-16 border-t border-white/10" id="licenses">
-  <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
-    <h2 className="text-3xl font-bold tracking-tight text-white sm:text-4xl mb-6 text-center">
-      Licences disponibles
-    </h2>
-    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
-      {[
-        {
-          name: "Licence Basique MP3",
-          description:
-            "Usage personnel et non commercial limité. Autorisé pour les plateformes de streaming avec seuil de 100k streams.",
-          files: "MP3 haute qualité",
-          rights:
-            "Usage non-exclusif, pas de diffusion radio ni TV, crédit requis.",
-        },
-        {
-          name: "Licence Premium WAV",
-          description:
-            "Utilisation commerciale modérée, jusqu’à 500k streams. Clip YouTube autorisé.",
-          files: "WAV + MP3",
-          rights:
-            "Non-exclusif, diffusion limitée, monétisation partielle autorisée.",
-        },
-        {
-          name: "Licence Exclusive",
-          description:
-            "Usage commercial illimité, sauf modifications de stems. 1 million de streams autorisés.",
-          files: "WAV + MP3 + contrat PDF",
-          rights:
-            "Exclusivité temporaire, pas de revente ni modification structurelle.",
-        },
-        {
-          name: "Exclusive + Stems",
-          description:
-            "Tous droits d'exploitation commerciale + mixage personnalisé avec stems.",
-          files: "WAV + MP3 + stems + contrat PDF",
-          rights:
-            "Exclusivité complète sauf revente. Aucune redistribution du beat autorisée.",
-        },
-      ].map((license, i) => (
-        <div
-          key={i}
-          className="bg-white/5 border border-white/10 rounded-2xl p-6 text-white shadow-md backdrop-blur-sm"
+"use client"
+
+import { useState } from "react"
+import { Card, CardContent } from "@/components/ui/card"
+
+export default function PricingPage() {
+  // Données Plans Beatmakers
+  const plans = [
+    {
+      name: "Gratuit",
+      price: "0 € / mois",
+      commission: "35%",
+      beatsLimit: 10,
+      support: "Support de base",
+      masteringCoverIA: true,
+      statsAvancees: false,
+      miseEnAvantBeat: 0,
+      miseEnAvantBoutique: 0,
+      description:
+        "Pour bien démarrer, vente de toutes les licences, accès mastering et cover IA inclus.",
+    },
+    {
+      name: "Bronze",
+      price: "10 € / mois",
+      commission: "20%",
+      beatsLimit: 30,
+      support: "Support développé",
+      masteringCoverIA: true,
+      statsAvancees: true,
+      miseEnAvantBeat: 0,
+      miseEnAvantBoutique: 0,
+      description:
+        "Pour les créateurs réguliers, accès complet aux outils IA et statistiques avancées.",
+    },
+    {
+      name: "Or",
+      price: "15 € / mois",
+      commission: "15%",
+      beatsLimit: 50,
+      support: "Support développé",
+      masteringCoverIA: true,
+      statsAvancees: true,
+      miseEnAvantBeat: 0,
+      miseEnAvantBoutique: 0,
+      description:
+        "Pour les pros ambitieux, accès complet aux outils IA et statistiques avancées.",
+    },
+    {
+      name: "Diamant",
+      price: "20 € / mois",
+      commission: "10%",
+      beatsLimit: 100,
+      support: "Support développé",
+      masteringCoverIA: true,
+      statsAvancees: true,
+      miseEnAvantBeat: 1,
+      miseEnAvantBoutique: 1,
+      description:
+        "Dominez le marché avec 1 mise en avant beat et boutique chaque semaine.",
+    },
+    {
+      name: "Diamant Plus",
+      price: "29,90 € / mois",
+      commission: "0%",
+      beatsLimit: "Illimité",
+      support: "Support développé",
+      masteringCoverIA: true,
+      statsAvancees: true,
+      miseEnAvantBeat: 2,
+      miseEnAvantBoutique: 2,
+      description:
+        "Liberté totale avec 2 mises en avant beat et boutique par semaine.",
+    },
+  ]
+
+  // Licences sans prix (les beatmakers fixent leurs prix)
+  const licenses = [
+    {
+      name: "Licence Basique MP3",
+      description:
+        "Usage personnel et non commercial limité. Autorisé pour les plateformes de streaming avec seuil de 100k streams.",
+      files: "MP3 haute qualité",
+      rights:
+        "Usage non-exclusif, pas de diffusion radio ni TV, crédit requis.",
+    },
+    {
+      name: "Licence Premium WAV",
+      description:
+        "Utilisation commerciale modérée, jusqu’à 500k streams. Clip YouTube autorisé.",
+      files: "WAV + MP3",
+      rights:
+        "Non-exclusif, diffusion limitée, monétisation partielle autorisée.",
+    },
+    {
+      name: "Licence Exclusive",
+      description:
+        "Usage commercial illimité, sauf modifications de stems. 1 million de streams autorisés.",
+      files: "WAV + MP3 + contrat PDF",
+      rights:
+        "Exclusivité temporaire, pas de revente ni modification structurelle.",
+    },
+    {
+      name: "Exclusive + Stems",
+      description:
+        "Tous droits d'exploitation commerciale + mixage personnalisé avec stems.",
+      files: "WAV + MP3 + stems + contrat PDF",
+      rights:
+        "Exclusivité complète sauf revente. Aucune redistribution du beat autorisée.",
+    },
+  ]
+
+  return (
+    <main className="bg-background min-h-screen text-white px-4 py-12">
+      <div className="max-w-6xl mx-auto space-y-20">
+
+        {/* Plans Beatmakers */}
+        <section id="plans" className="space-y-8">
+          <h1 className="text-4xl font-extrabold text-center mb-8">
+            Nos plans pour beatmakers
+          </h1>
+          <div className="grid grid-cols-1 md:grid-cols-5 gap-6">
+            {plans.map((plan) => (
+              <Card
+                key={plan.name}
+                className="bg-neutral-900 border border-neutral-800 text-white"
+              >
+                <CardContent className="flex flex-col p-6 space-y-4">
+                  <h2 className="text-2xl font-bold text-pink-500">{plan.name}</h2>
+                  <p className="text-lg font-semibold">{plan.price}</p>
+                  <p className="text-sm">{plan.description}</p>
+                  <ul className="text-sm list-disc list-inside space-y-1">
+                    <li>Commission sur ventes : {plan.commission}</li>
+                    <li>Limite beats : {plan.beatsLimit}</li>
+                    <li>Support : {plan.support}</li>
+                    <li>
+                      Accès Mastering & Cover IA :{" "}
+                      {plan.masteringCoverIA ? "Oui" : "Non"}
+                    </li>
+                    <li>
+                      Statistiques avancées :{" "}
+                      {plan.statsAvancees ? "Oui" : "Non"}
+                    </li>
+                    <li>
+                      Mises en avant beat / boutique par semaine :{" "}
+                      {plan.miseEnAvantBeat} / {plan.miseEnAvantBoutique}
+                    </li>
+                  </ul>
+                </CardContent>
+              </Card>
+            ))}
+          </div>
+        </section>
+
+        {/* Licences disponibles */}
+        <section
+          id="licenses"
+          className="w-full py-16 border-t border-white/10"
         >
-          <h3 className="text-xl font-semibold mb-2">{license.name}</h3>
-          <p className="text-sm text-white/80 mb-3">{license.description}</p>
-          <ul className="text-sm space-y-1">
-            <li>
-              <strong>Fichiers fournis :</strong> {license.files}
-            </li>
-            <li>
-              <strong>Droits :</strong> {license.rights}
-            </li>
-          </ul>
-        </div>
-      ))}
-    </div>
-  </div>
-</section>
+          <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
+            <h2 className="text-3xl font-bold tracking-tight text-white sm:text-4xl mb-6 text-center">
+              Licences disponibles
+            </h2>
+            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
+              {licenses.map((license, i) => (
+                <div
+                  key={i}
+                  className="bg-white/5 border border-white/10 rounded-2xl p-6 text-white shadow-md backdrop-blur-sm"
+                >
+                  <h3 className="text-xl font-semibold mb-2">{license.name}</h3>
+                  <p className="text-sm text-white/80 mb-3">{license.description}</p>
+                  <ul className="text-sm space-y-1">
+                    <li>
+                      <strong>Fichiers fournis :</strong> {license.files}
+                    </li>
+                    <li>
+                      <strong>Droits :</strong> {license.rights}
+                    </li>
+                  </ul>
+                </div>
+              ))}
+            </div>
+          </div>
+        </section>
+
+        {/* Services IA à la carte */}
+        <section className="mt-20 w-full max-w-5xl mx-auto px-4">
+          <h2 className="text-2xl md:text-3xl font-bold mb

commit 2b80d40a5a965ade5c4779e4bcfde5cea2fd5500
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:07:47 2025 +0200

    Update page.tsx

diff --git a/src/app/pricing/page.tsx b/src/app/pricing/page.tsx
index 4b587b6..d3a757e 100644
--- a/src/app/pricing/page.tsx
+++ b/src/app/pricing/page.tsx
@@ -4,7 +4,6 @@ import { useState } from "react"
 import { Card, CardContent } from "@/components/ui/card"
 
 export default function PricingPage() {
-  // Données Plans Beatmakers
   const plans = [
     {
       name: "Gratuit",
@@ -73,7 +72,6 @@ export default function PricingPage() {
     },
   ]
 
-  // Licences sans prix (les beatmakers fixent leurs prix)
   const licenses = [
     {
       name: "Licence Basique MP3",
@@ -109,6 +107,14 @@ export default function PricingPage() {
     },
   ]
 
+  // Données mises en avant
+  const promotions = [
+    { duration: "1 jour", price: "1 €" },
+    { duration: "1 semaine", price: "3 €" },
+    { duration: "2 semaines", price: "5 €" },
+    { duration: "1 mois", price: "8 €" },
+  ]
+
   return (
     <main className="bg-background min-h-screen text-white px-4 py-12">
       <div className="max-w-6xl mx-auto space-y-20">
@@ -151,6 +157,28 @@ export default function PricingPage() {
           </div>
         </section>
 
+        {/* Mises en avant & tarifs */}
+        <section id="promotions" className="w-full max-w-5xl mx-auto px-4 border-t border-white/10 pt-16">
+          <h2 className="text-3xl font-bold tracking-tight text-white sm:text-4xl mb-8 text-center">
+            Mises en avant et tarifs
+          </h2>
+          <p className="text-center text-white/80 mb-6 max-w-3xl mx-auto">
+            Augmentez la visibilité de vos beats ou de votre boutique avec nos offres de mises en avant.
+            Les durées sont cumulables et renouvelables chaque mois.
+          </p>
+          <div className="grid grid-cols-1 sm:grid-cols-4 gap-6 max-w-md mx-auto">
+            {promotions.map(({ duration, price }, i) => (
+              <div
+                key={i}
+                className="bg-white/5 border border-white/10 rounded-2xl p-6 text-white shadow-md backdrop-blur-sm text-center"
+              >
+                <p className="text-lg font-semibold">{duration}</p>
+                <p className="text-pink-500 text-2xl font-bold">{price}</p>
+              </div>
+            ))}
+          </div>
+        </section>
+
         {/* Licences disponibles */}
         <section
           id="licenses"
@@ -184,4 +212,38 @@ export default function PricingPage() {
 
         {/* Services IA à la carte */}
         <section className="mt-20 w-full max-w-5xl mx-auto px-4">
-          <h2 className="text-2xl md:text-3xl font-bold mb
+          <h2 className="text-2xl md:text-3xl font-bold mb-6 text-white">
+            Services IA à la carte
+          </h2>
+          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
+            <div className="rounded-2xl border border-pink-600 bg-zinc-900 p-6 shadow-lg">
+              <h3 className="text-xl font-semibold text-white mb-2">🎛️ Mastering IA</h3>
+              <p className="text-zinc-300 mb-2">
+                Obtiens un mastering professionnel de ton beat ou de ton morceau en quelques secondes.
+              </p>
+              <ul className="text-zinc-400 text-sm list-disc ml-4">
+                <li>Qualité studio</li>
+                <li>Analyse intelligente de la dynamique et des fréquences</li>
+                <li>Export WAV 24 bits</li>
+              </ul>
+              <p className="mt-4 text-pink-500 font-medium">Disponible même pour les comptes gratuits</p>
+            </div>
+
+            <div className="rounded-2xl border border-pink-600 bg-zinc-900 p-6 shadow-lg">
+              <h3 className="text-xl font-semibold text-white mb-2">🖼️ Cover IA</h3>
+              <p className="text-zinc-300 mb-2">
+                Génère une pochette d’album ou de single unique, avec intelligence artificielle.
+              </p>
+              <ul className="text-zinc-400 text-sm list-disc ml-4">
+                <li>Choix du style, ambiance, couleurs</li>
+                <li>Résolution haute qualité 3000x3000px</li>
+                <li>Prête pour Spotify, Apple Music, etc.</li>
+              </ul>
+              <p className="mt-4 text-pink-500 font-medium">Inclus dès le plan gratuit</p>
+            </div>
+          </div>
+        </section>
+      </div>
+    </main>
+  )
+}

commit d2d6dec40ad13ed0f1458da30c2e549eae3237a1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:22:49 2025 +0200

    Create PricingPlan.tsx

diff --git a/src/components/PricingPlan.tsx b/src/components/PricingPlan.tsx
new file mode 100644
index 0000000..1a8a3b1
--- /dev/null
+++ b/src/components/PricingPlan.tsx
@@ -0,0 +1,45 @@
+import React from "react"
+import { Card, CardContent } from "@/components/ui/card"
+
+interface PricingPlanProps {
+  name: string
+  price: string
+  commission: string
+  beatsLimit: string
+  support: string
+  masteringCoverIA: boolean
+  statsAvancees: boolean
+  miseEnAvantBeat: number
+  miseEnAvantBoutique: number
+  description: string
+}
+
+export default function PricingPlan({
+  name,
+  price,
+  commission,
+  beatsLimit,
+  support,
+  masteringCoverIA,
+  statsAvancees,
+  miseEnAvantBeat,
+  miseEnAvantBoutique,
+  description,
+}: PricingPlanProps) {
+  return (
+    <Card className="max-w-md mx-auto border border-gray-700 shadow-md hover:shadow-lg transition-shadow duration-300">
+      <CardContent>
+        <h3 className="text-2xl font-bold mb-2">{name}</h3>
+        <p className="text-xl text-pink-500 font-extrabold mb-4">{price}</p>
+        <p><strong>Commission :</strong> {commission}</p>
+        <p><strong>Limite de beats :</strong> {beatsLimit}</p>
+        <p><strong>Support :</strong> {support}</p>
+        <p><strong>Mastering & Cover IA :</strong> {masteringCoverIA ? "Oui" : "Non"}</p>
+        <p><strong>Statistiques avancées :</strong> {statsAvancees ? "Oui" : "Non"}</p>
+        <p><strong>Mises en avant beats :</strong> {miseEnAvantBeat} fois / mois</p>
+        <p><strong>Mises en avant boutique :</strong> {miseEnAvantBoutique} fois / mois</p>
+        <p className="mt-3 text-gray-400 text-sm">{description}</p>
+      </CardContent>
+    </Card>
+  )
+}

commit f28a5be63b6b3c628d373d0c380cb2e0b8c57685
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:25:23 2025 +0200

    Create pricing.tsx

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
new file mode 100644
index 0000000..cb933c8
--- /dev/null
+++ b/src/pages/pricing.tsx
@@ -0,0 +1,127 @@
+import React from "react"
+import PricingPlan from "@/components/PricingPlan"
+
+const plans = [
+  {
+    name: "Gratuit",
+    price: "0 €",
+    commission: "35%",
+    beatLimit: "Jusqu'à 10 beats",
+    features: [
+      "Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)",
+      "Support de base",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Bronze",
+    price: "10 €",
+    commission: "20%",
+    beatLimit: "Jusqu'à 30 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Or",
+    price: "15 €",
+    commission: "15%",
+    beatLimit: "Jusqu'à 50 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Diamant",
+    price: "20 €",
+    commission: "10%",
+    beatLimit: "Jusqu'à 100 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "1 mise en avant de beat par semaine (1 fois par mois)",
+      "1 mise en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: true,
+  },
+  {
+    name: "Diamant Plus",
+    price: "29,90 €",
+    commission: "0%",
+    beatLimit: "Beats illimités",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "2 mises en avant de beat par semaine (1 fois par mois)",
+      "2 mises en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+]
+
+export default function Pricing() {
+  return (
+    <main className="max-w-7xl mx-auto px-4 py-8">
+      <h1 className="text-4xl font-extrabold mb-8 text-center">Nos offres</h1>
+      <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
+        {plans.map((plan) => {
+          const supportFeature = plan.features.find((f) =>
+            f.toLowerCase().includes("support")
+          ) || "Support non défini"
+
+          const masteringCoverIA = plan.features.some((f) =>
+            f.toLowerCase().includes("mastering ia")
+          )
+          const statsAvancees = plan.features.some((f) =>
+            f.toLowerCase().includes("statistiques avancées")
+          )
+
+          const miseEnAvantBeat = plan.features.some((f) =>
+            f.toLowerCase().includes("mise en avant de beat")
+          )
+            ? 1
+            : 0
+          const miseEnAvantBoutique = plan.features.some((f) =>
+            f.toLowerCase().includes("mise en avant de boutique")
+          )
+            ? 1
+            : 0
+
+          return (
+            <PricingPlan
+              key={plan.name}
+              name={plan.name}
+              price={plan.price}
+              commission={plan.commission}
+              beatsLimit={plan.beatLimit}
+              support={supportFeature}
+              masteringCoverIA={masteringCoverIA}
+              statsAvancees={statsAvancees}
+              miseEnAvantBeat={miseEnAvantBeat}
+              miseEnAvantBoutique={miseEnAvantBoutique}
+              description={plan.features.join(", ")}
+            />
+          )
+        })}
+      </div>
+    </main>
+  )
+}

commit f8e471113d18c2a3fc47cb8fdc316609a8f88bc0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:29:59 2025 +0200

    Update pricing.tsx

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
index cb933c8..12c5d3c 100644
--- a/src/pages/pricing.tsx
+++ b/src/pages/pricing.tsx
@@ -77,11 +77,44 @@ const plans = [
   },
 ]
 
+const licenses = [
+  {
+    name: "Licence Basique (MP3)",
+    target: "Artistes débutants, maquettes",
+    files: "1 fichier MP3 (avec tag vocal)",
+    rights:
+      "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
+  },
+  {
+    name: "Licence Premium (WAV)",
+    target: "Artistes indépendants pour plateformes de streaming",
+    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
+    rights:
+      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
+  },
+  {
+    name: "Licence Exclusive",
+    target: "Artistes signés, projets majeurs",
+    files: "MP3 + WAV",
+    rights:
+      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
+  },
+  {
+    name: "Licence Exclusive + Pistes (Stems)",
+    target: "Pack ultime, contrôle total",
+    files: "MP3 + WAV + pistes séparées",
+    rights:
+      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
+  },
+]
+
 export default function Pricing() {
   return (
     <main className="max-w-7xl mx-auto px-4 py-8">
       <h1 className="text-4xl font-extrabold mb-8 text-center">Nos offres</h1>
-      <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
+
+      {/* Plans */}
+      <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-12">
         {plans.map((plan) => {
           const supportFeature = plan.features.find((f) =>
             f.toLowerCase().includes("support")
@@ -122,6 +155,24 @@ export default function Pricing() {
           )
         })}
       </div>
+
+      {/* Licences */}
+      <section>
+        <h2 className="text-3xl font-bold mb-6 text-center">Nos licences</h2>
+        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
+          {licenses.map((lic) => (
+            <div
+              key={lic.name}
+              className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
+            >
+              <h3 className="text-xl font-semibold mb-2">{lic.name}</h3>
+              <p className="italic text-sm mb-2">{lic.target}</p>
+              <p><strong>Fichiers fournis :</strong> {lic.files}</p>
+              <p className="mt-2 text-gray-400 text-sm">{lic.rights}</p>
+            </div>
+          ))}
+        </div>
+      </section>
     </main>
   )
 }

commit 5d2f8cf15b3a5a5c5bd1aa4741b161c4e42f862d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:31:13 2025 +0200

    Update pricing.tsx

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
index 12c5d3c..78cd80a 100644
--- a/src/pages/pricing.tsx
+++ b/src/pages/pricing.tsx
@@ -84,95 +84,3 @@ const licenses = [
     files: "1 fichier MP3 (avec tag vocal)",
     rights:
       "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
-  },
-  {
-    name: "Licence Premium (WAV)",
-    target: "Artistes indépendants pour plateformes de streaming",
-    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
-    rights:
-      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
-  },
-  {
-    name: "Licence Exclusive",
-    target: "Artistes signés, projets majeurs",
-    files: "MP3 + WAV",
-    rights:
-      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
-  },
-  {
-    name: "Licence Exclusive + Pistes (Stems)",
-    target: "Pack ultime, contrôle total",
-    files: "MP3 + WAV + pistes séparées",
-    rights:
-      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
-  },
-]
-
-export default function Pricing() {
-  return (
-    <main className="max-w-7xl mx-auto px-4 py-8">
-      <h1 className="text-4xl font-extrabold mb-8 text-center">Nos offres</h1>
-
-      {/* Plans */}
-      <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-12">
-        {plans.map((plan) => {
-          const supportFeature = plan.features.find((f) =>
-            f.toLowerCase().includes("support")
-          ) || "Support non défini"
-
-          const masteringCoverIA = plan.features.some((f) =>
-            f.toLowerCase().includes("mastering ia")
-          )
-          const statsAvancees = plan.features.some((f) =>
-            f.toLowerCase().includes("statistiques avancées")
-          )
-
-          const miseEnAvantBeat = plan.features.some((f) =>
-            f.toLowerCase().includes("mise en avant de beat")
-          )
-            ? 1
-            : 0
-          const miseEnAvantBoutique = plan.features.some((f) =>
-            f.toLowerCase().includes("mise en avant de boutique")
-          )
-            ? 1
-            : 0
-
-          return (
-            <PricingPlan
-              key={plan.name}
-              name={plan.name}
-              price={plan.price}
-              commission={plan.commission}
-              beatsLimit={plan.beatLimit}
-              support={supportFeature}
-              masteringCoverIA={masteringCoverIA}
-              statsAvancees={statsAvancees}
-              miseEnAvantBeat={miseEnAvantBeat}
-              miseEnAvantBoutique={miseEnAvantBoutique}
-              description={plan.features.join(", ")}
-            />
-          )
-        })}
-      </div>
-
-      {/* Licences */}
-      <section>
-        <h2 className="text-3xl font-bold mb-6 text-center">Nos licences</h2>
-        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
-          {licenses.map((lic) => (
-            <div
-              key={lic.name}
-              className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
-            >
-              <h3 className="text-xl font-semibold mb-2">{lic.name}</h3>
-              <p className="italic text-sm mb-2">{lic.target}</p>
-              <p><strong>Fichiers fournis :</strong> {lic.files}</p>
-              <p className="mt-2 text-gray-400 text-sm">{lic.rights}</p>
-            </div>
-          ))}
-        </div>
-      </section>
-    </main>
-  )
-}

commit 9be2186386b4f760b64960c8c42c090f276ad7ca
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:36:28 2025 +0200

    Create Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
new file mode 100644
index 0000000..d6f00ec
--- /dev/null
+++ b/src/components/Footer.tsx
@@ -0,0 +1,82 @@
+import React from "react"
+import Link from "next/link"
+
+export default function Footer() {
+  return (
+    <footer className="bg-gray-900 text-gray-400 py-10 px-4">
+      <div className="max-w-4xl mx-auto flex flex-col items-center space-y-6">
+
+        {/* Logo - remplace cette div par ton image logo */}
+        <div>
+          <img
+            src="/images/logo-beatsmarket.png"
+            alt="Logo BeatsMarket"
+            className="h-16 w-auto mx-auto"
+          />
+        </div>
+
+        {/* Liens */}
+        <nav className="flex flex-wrap justify-center gap-6 text-lg font-medium">
+          <Link href="/help" className="hover:text-pink-500 transition">
+            Aide
+          </Link>
+          <Link href="/about" className="hover:text-pink-500 transition">
+            À propos
+          </Link>
+          <Link href="/terms" className="hover:text-pink-500 transition">
+            CGV
+          </Link>
+          <Link href="/pricing" className="hover:text-pink-500 transition">
+            Tarifs
+          </Link>
+        </nav>
+
+        {/* Nom du site */}
+        <div className="text-white text-xl font-bold text-center">BeatsMarket</div>
+
+        {/* Tous droits réservés */}
+        <div className="text-gray-400 text-center text-sm">
+          © {new Date().getFullYear()} BeatsMarket. Tous droits réservés.
+        </div>
+
+        {/* Propulsé par */}
+        <div className="text-gray-400 text-center text-sm">
+          Propulsé par <a href="https://pourmastreet.com" target="_blank" rel="noopener noreferrer" className="hover:text-pink-500">Pour Ma Street</a>
+        </div>
+
+        {/* Images depuis ton téléphone */}
+        <div className="flex space-x-4 justify-center">
+          {/* Remplace les src par le chemin correct vers tes images */}
+          <img
+            src="/images/photo1.jpg"
+            alt="Photo 1"
+            className="h-12 w-auto rounded-md"
+          />
+          <img
+            src="/images/photo2.jpg"
+            alt="Photo 2"
+            className="h-12 w-auto rounded-md"
+          />
+          <img
+            src="/images/photo3.jpg"
+            alt="Photo 3"
+            className="h-12 w-auto rounded-md"
+          />
+        </div>
+
+        {/* Sélecteur langue (optionnel) */}
+        <div>
+          <select
+            aria-label="Sélection de la langue"
+            className="bg-gray-800 text-gray-200 py-1 px-3 rounded border border-gray-700 focus:outline-none focus:ring-2 focus:ring-pink-500"
+            defaultValue="fr"
+          >
+            <option value="fr">Français</option>
+            <option value="en">English</option>
+          </select>
+        </div>
+
+      </div>
+    </footer>
+  )
+}

commit 6027e4a14b6f474a5b17500914afae073279fbb5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:39:02 2025 +0200

    Update pricing.tsx

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
index 78cd80a..8e69e3b 100644
--- a/src/pages/pricing.tsx
+++ b/src/pages/pricing.tsx
@@ -1,5 +1,6 @@
 import React from "react"
 import PricingPlan from "@/components/PricingPlan"
+import Footer from "@/components/Footer"
 
 const plans = [
   {
@@ -84,3 +85,176 @@ const licenses = [
     files: "1 fichier MP3 (avec tag vocal)",
     rights:
       "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
+  },
+  {
+    name: "Licence Premium (WAV)",
+    target: "Artistes indépendants pour plateformes de streaming",
+    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
+    rights:
+      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
+  },
+  {
+    name: "Licence Exclusive",
+    target: "Artistes signés, projets majeurs",
+    files: "MP3 + WAV",
+    rights:
+      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
+  },
+  {
+    name: "Licence Exclusive + Pistes (Stems)",
+    target: "Pack ultime, contrôle total",
+    files: "MP3 + WAV + pistes séparées",
+    rights:
+      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
+  },
+]
+
+const services = [
+  {
+    name: "Mises en avant (Beat ou Boutique)",
+    description: "Augmente la visibilité sur le site",
+    prices: [
+      { duration: "1 Jour", price: "1 €" },
+      { duration: "1 Semaine", price: "3 €" },
+      { duration: "2 Semaines", price: "5 €" },
+      { duration: "1 Mois", price: "8 €" },
+    ],
+  },
+  {
+    name: "Mastering IA",
+    description: "Améliore le son d'un morceau",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Cover IA",
+    description: "Génère une pochette unique",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Distribution Digitale",
+    description: "Publie la musique sur les plateformes de streaming",
+    prices: [
+      { type: "Single", price: "14,90 €" },
+      { type: "Album / EP", price: "38,90 €" },
+    ],
+  },
+  {
+    name: "Gestion des Droits Musicaux",
+    description: "Collecte les royalties pour les créateurs",
+    prices: [
+      { fee: "Frais d'inscription", price: "0 €" },
+      { fee: "Commission", price: "25% sur les droits perçus" },
+    ],
+  },
+]
+
+export default function Pricing() {
+  return (
+    <>
+      <main className="max-w-7xl mx-auto px-4 py-8">
+        <h1 className="text-4xl font-extrabold mb-8 text-center">Nos offres</h1>
+
+        {/* Plans */}
+        <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-12">
+          {plans.map((plan) => {
+            const supportFeature = plan.features.find((f) =>
+              f.toLowerCase().includes("support")
+            ) || "Support non défini"
+
+            const masteringCoverIA = plan.features.some((f) =>
+              f.toLowerCase().includes("mastering ia")
+            )
+            const statsAvancees = plan.features.some((f) =>
+              f.toLowerCase().includes("statistiques avancées")
+            )
+
+            const miseEnAvantBeat = plan.features.some((f) =>
+              f.toLowerCase().includes("mise en avant de beat")
+            )
+              ? 1
+              : 0
+            const miseEnAvantBoutique = plan.features.some((f) =>
+              f.toLowerCase().includes("mise en avant de boutique")
+            )
+              ? 1
+              : 0
+
+            return (
+              <PricingPlan
+                key={plan.name}
+                name={plan.name}
+                price={plan.price}
+                commission={plan.commission}
+                beatsLimit={plan.beatLimit}
+                support={supportFeature}
+                masteringCoverIA={masteringCoverIA}
+                statsAvancees={statsAvancees}
+                miseEnAvantBeat={miseEnAvantBeat}
+                miseEnAvantBoutique={miseEnAvantBoutique}
+                description={plan.features.join(", ")}
+              />
+            )
+          })}
+        </div>
+
+        {/* Licences */}
+        <section className="mb-12">
+          <h2 className="text-3xl font-bold mb-6 text-center">Nos licences</h2>
+          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
+            {licenses.map((lic) => (
+              <div
+                key={lic.name}
+                className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
+              >
+                <h3 className="text-xl font-semibold mb-2">{lic.name}</h3>
+                <p className="italic text-sm mb-2">{lic.target}</p>
+                <p><strong>Fichiers fournis :</strong> {lic.files}</p>
+                <p className="mt-2 text-gray-400 text-sm">{lic.rights}</p>
+              </div>
+            ))}
+          </div>
+        </section>
+
+        {/* Services */}
+        <section>
+          <h2 className="text-3xl font-bold mb-6 text-center">Nos services</h2>
+          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
+            {services.map((service) => (
+              <div
+                key={service.name}
+                className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
+              >
+                <h3 className="text-xl font-semibold mb-2">{service.name}</h3>
+                <p className="mb-3">{service.description}</p>
+                <ul className="list-disc list-inside text-sm text-gray-400">
+                  {service.prices.map((priceItem, idx) => {
+                    const labelKey = Object.keys(priceItem).find((k) => k !== "price")
+                    const labelValue = labelKey ? (priceItem as any)[labelKey] : ""
+                    return (
+                      <li key={idx}>
+                        {labelValue ? (
+                          <>
+                            <strong>{labelValue} :</strong> {priceItem.price}
+                          </>
+                        ) : (
+                          priceItem.price
+                        )}
+                      </li>
+                    )
+                  })}
+                </ul>
+              </div>
+            ))}
+          </div>
+        </section>
+      </main>
+      <Footer />
+    </>
+  )
+}

commit c832577bc02bf73591e741594c0fd8a0409a5e6a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:40:51 2025 +0200

    Update PricingPlan.tsx

diff --git a/src/components/PricingPlan.tsx b/src/components/PricingPlan.tsx
index 1a8a3b1..72e50d6 100644
--- a/src/components/PricingPlan.tsx
+++ b/src/components/PricingPlan.tsx
@@ -1,11 +1,10 @@
 import React from "react"
-import { Card, CardContent } from "@/components/ui/card"
 
 interface PricingPlanProps {
   name: string
   price: string
   commission: string
-  beatsLimit: string
+  beatsLimit: number | string
   support: string
   masteringCoverIA: boolean
   statsAvancees: boolean
@@ -27,19 +26,21 @@ export default function PricingPlan({
   description,
 }: PricingPlanProps) {
   return (
-    <Card className="max-w-md mx-auto border border-gray-700 shadow-md hover:shadow-lg transition-shadow duration-300">
-      <CardContent>
-        <h3 className="text-2xl font-bold mb-2">{name}</h3>
-        <p className="text-xl text-pink-500 font-extrabold mb-4">{price}</p>
-        <p><strong>Commission :</strong> {commission}</p>
-        <p><strong>Limite de beats :</strong> {beatsLimit}</p>
-        <p><strong>Support :</strong> {support}</p>
-        <p><strong>Mastering & Cover IA :</strong> {masteringCoverIA ? "Oui" : "Non"}</p>
-        <p><strong>Statistiques avancées :</strong> {statsAvancees ? "Oui" : "Non"}</p>
-        <p><strong>Mises en avant beats :</strong> {miseEnAvantBeat} fois / mois</p>
-        <p><strong>Mises en avant boutique :</strong> {miseEnAvantBoutique} fois / mois</p>
-        <p className="mt-3 text-gray-400 text-sm">{description}</p>
-      </CardContent>
-    </Card>
+    <div className="border border-gray-700 rounded-lg p-6 bg-gray-900 hover:shadow-lg transition-shadow duration-300 flex flex-col">
+      <h3 className="text-2xl font-bold mb-4 text-white">{name}</h3>
+      <div className="text-3xl font-extrabold mb-4 text-pink-500">{price}</div>
+      <p className="mb-2 text-gray-300">Commission : {commission}</p>
+      <p className="mb-2 text-gray-300">Limite beats : {beatsLimit}</p>
+      <p className="mb-2 text-gray-300">{support}</p>
+
+      <ul className="list-disc list-inside text-gray-400 mb-4 flex-1">
+        {masteringCoverIA && <li>Accès complet Mastering IA & Cover IA</li>}
+        {statsAvancees && <li>Statistiques avancées</li>}
+        {miseEnAvantBeat > 0 && <li>Mise en avant de beat : {miseEnAvantBeat} fois/mois</li>}
+        {miseEnAvantBoutique > 0 && <li>Mise en avant de boutique : {miseEnAvantBoutique} fois/mois</li>}
+      </ul>
+
+      <p className="text-sm text-gray-400 mt-auto">{description}</p>
+    </div>
   )
 }

commit a3864ac732c7f93dd640e7fc187d5b8391ed076d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:42:13 2025 +0200

    Create SubscriptionForm.tsx

diff --git a/src/components/SubscriptionForm.tsx b/src/components/SubscriptionForm.tsx
new file mode 100644
index 0000000..3c03ebc
--- /dev/null
+++ b/src/components/SubscriptionForm.tsx
@@ -0,0 +1,51 @@
+import React, { useState } from "react"
+
+interface Plan {
+  name: string
+  price: string
+}
+
+interface SubscriptionFormProps {
+  plans: Plan[]
+  onSubscribe: (planName: string) => void
+}
+
+export default function SubscriptionForm({ plans, onSubscribe }: SubscriptionFormProps) {
+  const [selectedPlan, setSelectedPlan] = useState(plans[0]?.name || "")
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    if (selectedPlan) {
+      onSubscribe(selectedPlan)
+    }
+  }
+
+  return (
+    <form onSubmit={handleSubmit} className="max-w-md mx-auto bg-gray-900 p-6 rounded-lg shadow">
+      <h2 className="text-2xl font-bold mb-4 text-white text-center">Choisissez un plan</h2>
+
+      <div className="flex flex-col space-y-4 mb-6">
+        {plans.map((plan) => (
+          <label key={plan.name} className="flex items-center cursor-pointer">
+            <input
+              type="radio"
+              name="plan"
+              value={plan.name}
+              checked={selectedPlan === plan.name}
+              onChange={() => setSelectedPlan(plan.name)}
+              className="mr-3"
+            />
+            <span className="text-white">{plan.name} - {plan.price}</span>
+          </label>
+        ))}
+      </div>
+
+      <button
+        type="submit"
+        className="w-full bg-pink-600 hover:bg-pink-700 text-white font-bold py-2 px-4 rounded transition"
+      >
+        Souscrire
+      </button>
+    </form>
+  )
+}

commit 1614dd713d1ccc33470f2980f4fe2dd76b8d385b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:44:16 2025 +0200

    Update pricing.tsx

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
index 8e69e3b..85a7ac6 100644
--- a/src/pages/pricing.tsx
+++ b/src/pages/pricing.tsx
@@ -1,160 +1,23 @@
 import React from "react"
 import PricingPlan from "@/components/PricingPlan"
+import SubscriptionForm from "@/components/SubscriptionForm"
 import Footer from "@/components/Footer"
 
 const plans = [
-  {
-    name: "Gratuit",
-    price: "0 €",
-    commission: "35%",
-    beatLimit: "Jusqu'à 10 beats",
-    features: [
-      "Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)",
-      "Support de base",
-      "Accès complet au Mastering IA",
-      "Accès complet au Cover IA",
-    ],
-    highlighted: false,
-  },
-  {
-    name: "Bronze",
-    price: "10 €",
-    commission: "20%",
-    beatLimit: "Jusqu'à 30 beats",
-    features: [
-      "Vente de toutes les licences",
-      "Support plus développé",
-      "Statistiques avancées",
-      "Accès complet au Mastering IA",
-      "Accès complet au Cover IA",
-    ],
-    highlighted: false,
-  },
-  {
-    name: "Or",
-    price: "15 €",
-    commission: "15%",
-    beatLimit: "Jusqu'à 50 beats",
-    features: [
-      "Vente de toutes les licences",
-      "Support plus développé",
-      "Statistiques avancées",
-      "Accès complet au Mastering IA",
-      "Accès complet au Cover IA",
-    ],
-    highlighted: false,
-  },
-  {
-    name: "Diamant",
-    price: "20 €",
-    commission: "10%",
-    beatLimit: "Jusqu'à 100 beats",
-    features: [
-      "Vente de toutes les licences",
-      "Support plus développé",
-      "Statistiques avancées",
-      "1 mise en avant de beat par semaine (1 fois par mois)",
-      "1 mise en avant de boutique par semaine (1 fois par mois)",
-      "Accès complet au Mastering IA",
-      "Accès complet au Cover IA",
-    ],
-    highlighted: true,
-  },
-  {
-    name: "Diamant Plus",
-    price: "29,90 €",
-    commission: "0%",
-    beatLimit: "Beats illimités",
-    features: [
-      "Vente de toutes les licences",
-      "Support plus développé",
-      "Statistiques avancées",
-      "2 mises en avant de beat par semaine (1 fois par mois)",
-      "2 mises en avant de boutique par semaine (1 fois par mois)",
-      "Accès complet au Mastering IA",
-      "Accès complet au Cover IA",
-    ],
-    highlighted: false,
-  },
+  { name: "Gratuit", price: "0 €", commission: "35%", beatLimit: "Jusqu'à 10 beats", features: ["Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)", "Support de base", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
+  { name: "Bronze", price: "10 €", commission: "20%", beatLimit: "Jusqu'à 30 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
+  { name: "Or", price: "15 €", commission: "15%", beatLimit: "Jusqu'à 50 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
+  { name: "Diamant", price: "20 €", commission: "10%", beatLimit: "Jusqu'à 100 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "1 mise en avant de beat par semaine (1 fois par mois)", "1 mise en avant de boutique par semaine (1 fois par mois)", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: true },
+  { name: "Diamant Plus", price: "29,90 €", commission: "0%", beatLimit: "Beats illimités", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "2 mises en avant de beat par semaine (1 fois par mois)", "2 mises en avant de boutique par semaine (1 fois par mois)", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
 ]
 
-const licenses = [
-  {
-    name: "Licence Basique (MP3)",
-    target: "Artistes débutants, maquettes",
-    files: "1 fichier MP3 (avec tag vocal)",
-    rights:
-      "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
-  },
-  {
-    name: "Licence Premium (WAV)",
-    target: "Artistes indépendants pour plateformes de streaming",
-    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
-    rights:
-      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
-  },
-  {
-    name: "Licence Exclusive",
-    target: "Artistes signés, projets majeurs",
-    files: "MP3 + WAV",
-    rights:
-      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
-  },
-  {
-    name: "Licence Exclusive + Pistes (Stems)",
-    target: "Pack ultime, contrôle total",
-    files: "MP3 + WAV + pistes séparées",
-    rights:
-      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
-  },
-]
+export default function Pricing() {
 
-const services = [
-  {
-    name: "Mises en avant (Beat ou Boutique)",
-    description: "Augmente la visibilité sur le site",
-    prices: [
-      { duration: "1 Jour", price: "1 €" },
-      { duration: "1 Semaine", price: "3 €" },
-      { duration: "2 Semaines", price: "5 €" },
-      { duration: "1 Mois", price: "8 €" },
-    ],
-  },
-  {
-    name: "Mastering IA",
-    description: "Améliore le son d'un morceau",
-    prices: [
-      { formula: "Essentiel (2 retouches)", price: "12 €" },
-      { formula: "Pro (5 retouches)", price: "22 €" },
-    ],
-  },
-  {
-    name: "Cover IA",
-    description: "Génère une pochette unique",
-    prices: [
-      { formula: "Essentiel (2 retouches)", price: "12 €" },
-      { formula: "Pro (5 retouches)", price: "22 €" },
-    ],
-  },
-  {
-    name: "Distribution Digitale",
-    description: "Publie la musique sur les plateformes de streaming",
-    prices: [
-      { type: "Single", price: "14,90 €" },
-      { type: "Album / EP", price: "38,90 €" },
-    ],
-  },
-  {
-    name: "Gestion des Droits Musicaux",
-    description: "Collecte les royalties pour les créateurs",
-    prices: [
-      { fee: "Frais d'inscription", price: "0 €" },
-      { fee: "Commission", price: "25% sur les droits perçus" },
-    ],
-  },
-]
+  const handleSubscribe = (planName: string) => {
+    alert(`Merci pour votre souscription au plan : ${planName}`)
+    // Ici tu peux ajouter la logique pour la souscription réelle (appel API, redirection, etc.)
+  }
 
-export default function Pricing() {
   return (
     <>
       <main className="max-w-7xl mx-auto px-4 py-8">
@@ -203,56 +66,11 @@ export default function Pricing() {
           })}
         </div>
 
-        {/* Licences */}
-        <section className="mb-12">
-          <h2 className="text-3xl font-bold mb-6 text-center">Nos licences</h2>
-          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
-            {licenses.map((lic) => (
-              <div
-                key={lic.name}
-                className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
-              >
-                <h3 className="text-xl font-semibold mb-2">{lic.name}</h3>
-                <p className="italic text-sm mb-2">{lic.target}</p>
-                <p><strong>Fichiers fournis :</strong> {lic.files}</p>
-                <p className="mt-2 text-gray-400 text-sm">{lic.rights}</p>
-              </div>
-            ))}
-          </div>
-        </section>
-
-        {/* Services */}
-        <section>
-          <h2 className="text-3xl font-bold mb-6 text-center">Nos services</h2>
-          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
-            {services.map((service) => (
-              <div
-                key={service.name}
-                className="border border-gray-700 rounded-lg p-6 shadow hover:shadow-lg transition-shadow duration-300 bg-gray-900"
-              >
-                <h3 className="text-xl font-semibold mb-2">{service.name}</h3>
-                <p className="mb-3">{service.description}</p>
-                <ul className="list-disc list-inside text-sm text-gray-400">
-                  {service.prices.map((priceItem, idx) => {
-                    const labelKey = Object.keys(priceItem).find((k) => k !== "price")
-                    const labelValue = labelKey ? (priceItem as any)[labelKey] : ""
-                    return (
-                      <li key={idx}>
-                        {labelValue ? (
-                          <>
-                            <strong>{labelValue} :</strong> {priceItem.price}
-                          </>
-                        ) : (
-                          priceItem.price
-                        )}
-                      </li>
-                    )
-                  })}
-                </ul>
-              </div>
-            ))}
-          </div>
-        </section>
+        {/* Formulaire d'abonnement */}
+        <SubscriptionForm
+          plans={plans.map(({ name, price }) => ({ name, price }))}
+          onSubscribe={handleSubscribe}
+        />
       </main>
       <Footer />
     </>

commit 49ffbf2f182504673d2fc1912d9a5c36e7a15062
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 07:57:10 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index af4bf05..e986c8e 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,9 +1,10 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  experimental: {
-    appDir: true
-  }
+  swcMinify: true,
+  images: {
+    domains: ['yourdomain.com'], // ajoute ici les domaines autorisés pour les images (CDN, etc.)
+  },
 }
 
 module.exports = nextConfig

commit 64adf723703ca5946cccfea84c98e2b0d624c510
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:10:04 2025 +0200

    Create page.tsx

diff --git a/src/app/page.tsx b/src/app/page.tsx
new file mode 100644
index 0000000..c3a83a8
--- /dev/null
+++ b/src/app/page.tsx
@@ -0,0 +1,8 @@
+export default function Home() {
+  return (
+    <main className="p-8 text-white bg-black min-h-screen">
+      <h1 className="text-4xl font-bold mb-4">Bienvenue sur BeatsMarket 🎧</h1>
+      <p className="text-lg">Ceci est la page d’accueil. Tout fonctionne bien 🎉</p>
+    </main>
+  );
+}

commit cf8e2eeb0c3b1db819855fe78c00b6d6188aa6c3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:13:43 2025 +0200

    Update page.tsx

diff --git a/src/app/page.tsx b/src/app/page.tsx
index c3a83a8..ac976d0 100644
--- a/src/app/page.tsx
+++ b/src/app/page.tsx
@@ -4,5 +4,5 @@ export default function Home() {
       <h1 className="text-4xl font-bold mb-4">Bienvenue sur BeatsMarket 🎧</h1>
       <p className="text-lg">Ceci est la page d’accueil. Tout fonctionne bien 🎉</p>
     </main>
-  );
+  )
 }

commit 4b27393a4dc7a5cb4145d6b561b7fed4ac2ffe17
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:14:26 2025 +0200

    Delete src/pages directory

diff --git a/src/pages/pricing.tsx b/src/pages/pricing.tsx
deleted file mode 100644
index 85a7ac6..0000000
--- a/src/pages/pricing.tsx
+++ /dev/null
@@ -1,78 +0,0 @@
-import React from "react"
-import PricingPlan from "@/components/PricingPlan"
-import SubscriptionForm from "@/components/SubscriptionForm"
-import Footer from "@/components/Footer"
-
-const plans = [
-  { name: "Gratuit", price: "0 €", commission: "35%", beatLimit: "Jusqu'à 10 beats", features: ["Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)", "Support de base", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
-  { name: "Bronze", price: "10 €", commission: "20%", beatLimit: "Jusqu'à 30 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
-  { name: "Or", price: "15 €", commission: "15%", beatLimit: "Jusqu'à 50 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
-  { name: "Diamant", price: "20 €", commission: "10%", beatLimit: "Jusqu'à 100 beats", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "1 mise en avant de beat par semaine (1 fois par mois)", "1 mise en avant de boutique par semaine (1 fois par mois)", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: true },
-  { name: "Diamant Plus", price: "29,90 €", commission: "0%", beatLimit: "Beats illimités", features: ["Vente de toutes les licences", "Support plus développé", "Statistiques avancées", "2 mises en avant de beat par semaine (1 fois par mois)", "2 mises en avant de boutique par semaine (1 fois par mois)", "Accès complet au Mastering IA", "Accès complet au Cover IA"], highlighted: false },
-]
-
-export default function Pricing() {
-
-  const handleSubscribe = (planName: string) => {
-    alert(`Merci pour votre souscription au plan : ${planName}`)
-    // Ici tu peux ajouter la logique pour la souscription réelle (appel API, redirection, etc.)
-  }
-
-  return (
-    <>
-      <main className="max-w-7xl mx-auto px-4 py-8">
-        <h1 className="text-4xl font-extrabold mb-8 text-center">Nos offres</h1>
-
-        {/* Plans */}
-        <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-12">
-          {plans.map((plan) => {
-            const supportFeature = plan.features.find((f) =>
-              f.toLowerCase().includes("support")
-            ) || "Support non défini"
-
-            const masteringCoverIA = plan.features.some((f) =>
-              f.toLowerCase().includes("mastering ia")
-            )
-            const statsAvancees = plan.features.some((f) =>
-              f.toLowerCase().includes("statistiques avancées")
-            )
-
-            const miseEnAvantBeat = plan.features.some((f) =>
-              f.toLowerCase().includes("mise en avant de beat")
-            )
-              ? 1
-              : 0
-            const miseEnAvantBoutique = plan.features.some((f) =>
-              f.toLowerCase().includes("mise en avant de boutique")
-            )
-              ? 1
-              : 0
-
-            return (
-              <PricingPlan
-                key={plan.name}
-                name={plan.name}
-                price={plan.price}
-                commission={plan.commission}
-                beatsLimit={plan.beatLimit}
-                support={supportFeature}
-                masteringCoverIA={masteringCoverIA}
-                statsAvancees={statsAvancees}
-                miseEnAvantBeat={miseEnAvantBeat}
-                miseEnAvantBoutique={miseEnAvantBoutique}
-                description={plan.features.join(", ")}
-              />
-            )
-          })}
-        </div>
-
-        {/* Formulaire d'abonnement */}
-        <SubscriptionForm
-          plans={plans.map(({ name, price }) => ({ name, price }))}
-          onSubscribe={handleSubscribe}
-        />
-      </main>
-      <Footer />
-    </>
-  )
-}

commit fd2cb827f0aa50bc590e18f79a059bb5f0730342
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:18:03 2025 +0200

    Update tsconfig.json

diff --git a/tsconfig.json b/tsconfig.json
index d96b7ae..5879100 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,21 +1,8 @@
 {
   "compilerOptions": {
-    "target": "ESNext",
-    "lib": ["dom", "dom.iterable", "esnext"],
-    "allowJs": true,
-    "skipLibCheck": true,
-    "strict": true,
-    "forceConsistentCasingInFileNames": true,
-    "noEmit": true,
-    "esModuleInterop": true,
-    "module": "ESNext",
-    "moduleResolution": "node",
-    "resolveJsonModule": true,
-    "isolatedModules": true,
-    "jsx": "preserve",
-    "incremental": true,
-    "types": ["node"]
-  },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
-  "exclude": ["node_modules"]
+    "baseUrl": "src",
+    "paths": {
+      "@/*": ["*"]
+    }
+  }
 }

commit 79d20a1d5fecd610c339a6d6eaa36c422d21ac64
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:20:17 2025 +0200

    Update tsconfig.json

diff --git a/tsconfig.json b/tsconfig.json
index 5879100..1c3236a 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,8 +1,22 @@
 {
   "compilerOptions": {
+    "target": "esnext",
+    "lib": ["dom", "dom.iterable", "esnext"],
+    "allowJs": true,
+    "skipLibCheck": true,
+    "strict": true,
+    "forceConsistentCasingInFileNames": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "moduleResolution": "node",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
     "baseUrl": "src",
     "paths": {
       "@/*": ["*"]
     }
-  }
+  },
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
+  "exclude": ["node_modules"]
 }

commit 72e1b0961e7808d88b0114eb837d04aaf4912b53
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:23:16 2025 +0200

    Create jsconfig.json

diff --git a/jsconfig.json b/jsconfig.json
new file mode 100644
index 0000000..5879100
--- /dev/null
+++ b/jsconfig.json
@@ -0,0 +1,8 @@
+{
+  "compilerOptions": {
+    "baseUrl": "src",
+    "paths": {
+      "@/*": ["*"]
+    }
+  }
+}

commit 660791802a767285ca372afc1ce2d8fb44bf0c5d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:26:02 2025 +0200

    Create button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
new file mode 100644
index 0000000..905f921
--- /dev/null
+++ b/src/components/ui/button.tsx
@@ -0,0 +1,3 @@
+export default function Button(props: React.ButtonHTMLAttributes<HTMLButtonElement>) {
+  return <button {...props} />;
+}

commit c80ead28bebf90f41289e3d8934c02e1e03262e9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:27:02 2025 +0200

    Create input.tsx

diff --git a/src/components/ui/input.tsx b/src/components/ui/input.tsx
new file mode 100644
index 0000000..073dc74
--- /dev/null
+++ b/src/components/ui/input.tsx
@@ -0,0 +1,3 @@
+export default function Input(props: React.InputHTMLAttributes<HTMLInputElement>) {
+  return <input {...props} />;
+}

commit 088316495f27dcf5a6567b7dcf843fb40529d2b9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:27:54 2025 +0200

    Create textarea.tsx

diff --git a/src/components/ui/textarea.tsx b/src/components/ui/textarea.tsx
new file mode 100644
index 0000000..d354919
--- /dev/null
+++ b/src/components/ui/textarea.tsx
@@ -0,0 +1,3 @@
+export default function Textarea(props: React.TextareaHTMLAttributes<HTMLTextAreaElement>) {
+  return <textarea {...props} />;
+}

commit 0bc3c4df0c0bba4e9003c212b3a95ffde9f66d50
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:28:41 2025 +0200

    Create accordion.tsx

diff --git a/src/components/ui/accordion.tsx b/src/components/ui/accordion.tsx
new file mode 100644
index 0000000..2e1eb6b
--- /dev/null
+++ b/src/components/ui/accordion.tsx
@@ -0,0 +1,3 @@
+export default function Accordion({ children }: { children: React.ReactNode }) {
+  return <div>{children}</div>;
+}

commit 2ca554f056854634975b2f718ef0e10aca06c7d0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:29:20 2025 +0200

    Create status-badge.tsx

diff --git a/src/components/ui/status-badge.tsx b/src/components/ui/status-badge.tsx
new file mode 100644
index 0000000..ce8a466
--- /dev/null
+++ b/src/components/ui/status-badge.tsx
@@ -0,0 +1,3 @@
+export default function StatusBadge({ children }: { children: React.ReactNode }) {
+  return <span>{children}</span>;
+}

commit 3f7f977a37c508a8d516ddc4f669639cb5e3d985
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:34:43 2025 +0200

    Create action-menu.tsx

diff --git a/src/components/ui/action-menu.tsx b/src/components/ui/action-menu.tsx
new file mode 100644
index 0000000..1f2635a
--- /dev/null
+++ b/src/components/ui/action-menu.tsx
@@ -0,0 +1,35 @@
+"use client"
+
+import { MoreHorizontal, Trash2, Pencil } from "lucide-react"
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu"
+import { Button } from "@/components/ui/button"
+
+interface ActionMenuProps {
+  onEdit: () => void
+  onDelete: () => void
+}
+
+export default function ActionMenu({ onEdit, onDelete }: ActionMenuProps) {
+  return (
+    <DropdownMenu>
+      <DropdownMenuTrigger asChild>
+        <Button variant="ghost" size="icon">
+          <MoreHorizontal className="h-4 w-4" />
+        </Button>
+      </DropdownMenuTrigger>
+      <DropdownMenuContent align="end">
+        <DropdownMenuItem onClick={onEdit}>
+          <Pencil className="mr-2 h-4 w-4" /> Modifier
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={onDelete}>
+          <Trash2 className="mr-2 h-4 w-4" /> Supprimer
+        </DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+}

commit e44beaea2ec3728c3b34b292b1f4ab8b1ea29016
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:35:51 2025 +0200

    Create card.tsx

diff --git a/src/components/ui/card.tsx b/src/components/ui/card.tsx
new file mode 100644
index 0000000..d2e1580
--- /dev/null
+++ b/src/components/ui/card.tsx
@@ -0,0 +1,85 @@
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Card = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn(
+      "rounded-2xl border border-border bg-card text-card-foreground shadow-sm",
+      className
+    )}
+    {...props}
+  />
+))
+Card.displayName = "Card"
+
+const CardHeader = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("flex flex-col space-y-1.5 p-6", className)}
+    {...props}
+  />
+))
+CardHeader.displayName = "CardHeader"
+
+const CardTitle = React.forwardRef<
+  HTMLParagraphElement,
+  React.HTMLAttributes<HTMLHeadingElement>
+>(({ className, ...props }, ref) => (
+  <h3
+    ref={ref}
+    className={cn(
+      "text-2xl font-semibold leading-none tracking-tight",
+      className
+    )}
+    {...props}
+  />
+))
+CardTitle.displayName = "CardTitle"
+
+const CardDescription = React.forwardRef<
+  HTMLParagraphElement,
+  React.HTMLAttributes<HTMLParagraphElement>
+>(({ className, ...props }, ref) => (
+  <p
+    ref={ref}
+    className={cn("text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+CardDescription.displayName = "CardDescription"
+
+const CardContent = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
+))
+CardContent.displayName = "CardContent"
+
+const CardFooter = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("flex items-center p-6 pt-0", className)}
+    {...props}
+  />
+))
+CardFooter.displayName = "CardFooter"
+
+export {
+  Card,
+  CardHeader,
+  CardFooter,
+  CardTitle,
+  CardDescription,
+  CardContent,
+}

commit 5caea7a80fd1dfd45723d69d737151b7c36a099b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:36:30 2025 +0200

    Create badge.tsx

diff --git a/src/components/ui/badge.tsx b/src/components/ui/badge.tsx
new file mode 100644
index 0000000..bf34c3c
--- /dev/null
+++ b/src/components/ui/badge.tsx
@@ -0,0 +1,35 @@
+import * as React from "react"
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
+
+const badgeVariants = cva(
+  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+  {
+    variants: {
+      variant: {
+        default: "border-transparent bg-primary text-primary-foreground",
+        secondary: "border-transparent bg-secondary text-secondary-foreground",
+        destructive: "border-transparent bg-destructive text-destructive-foreground",
+        outline: "text-foreground",
+        success: "border-transparent bg-green-600 text-white",
+        warning: "border-transparent bg-yellow-500 text-black",
+        info: "border-transparent bg-blue-500 text-white",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+    },
+  }
+)
+
+export interface BadgeProps
+  extends React.HTMLAttributes<HTMLDivElement>,
+    VariantProps<typeof badgeVariants> {}
+
+function Badge({ className, variant, ...props }: BadgeProps) {
+  return (
+    <div className={cn(badgeVariants({ variant }), className)} {...props} />
+  )
+}
+
+export { Badge, badgeVariants }

commit 11e53f985e7bef71e93f6f901763d309b91416b0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:38:41 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 905f921..38ee623 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,3 +1,52 @@
-export default function Button(props: React.ButtonHTMLAttributes<HTMLButtonElement>) {
-  return <button {...props} />;
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
+
+const buttonVariants = cva(
+  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ring-offset-background",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90",
+        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
+        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
+        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "text-primary underline-offset-4 hover:underline",
+      },
+      size: {
+        default: "h-10 px-4 py-2",
+        sm: "h-9 rounded-md px-3",
+        lg: "h-11 rounded-md px-8",
+        icon: "h-10 w-10",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
+
+export interface ButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof buttonVariants> {
+  asChild?: boolean
 }
+
+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
+  ({ className, variant, size, asChild = false, ...props }, ref) => {
+    const Comp = asChild ? Slot : "button"
+    return (
+      <Comp
+        className={cn(buttonVariants({ variant, size }), className)}
+        ref={ref}
+        {...props}
+      />
+    )
+  }
+)
+Button.displayName = "Button"
+
+export { Button, buttonVariants }

commit 0fb9dbe5521f9d8de7404c14dba26cddcb7045a7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:39:44 2025 +0200

    Create dropdown-menu.tsx

diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx
new file mode 100644
index 0000000..a5e4bae
--- /dev/null
+++ b/src/components/ui/dropdown-menu.tsx
@@ -0,0 +1,78 @@
+"use client"
+
+import * as React from "react"
+import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
+import { cn } from "@/lib/utils"
+
+const DropdownMenu = DropdownMenuPrimitive.Root
+
+const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
+
+const DropdownMenuPortal = DropdownMenuPrimitive.Portal
+
+const DropdownMenuContent = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
+>(({ className, sideOffset = 4, ...props }, ref) => (
+  <DropdownMenuPortal>
+    <DropdownMenuPrimitive.Content
+      ref={ref}
+      sideOffset={sideOffset}
+      className={cn(
+        "z-50 min-w-[8rem] rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  </DropdownMenuPortal>
+))
+DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
+
+const DropdownMenuItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item>
+>(({ className, disabled, ...props }, ref) => (
+  <DropdownMenuPrimitive.Item
+    ref={ref}
+    className={cn(
+      "relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    disabled={disabled}
+    {...props}
+  />
+))
+DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
+
+const DropdownMenuLabel = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label>
+>(({ className, ...props }, ref) => (
+  <DropdownMenuPrimitive.Label
+    ref={ref}
+    className={cn("px-2 py-1.5 text-sm font-semibold text-muted-foreground", className)}
+    {...props}
+  />
+))
+DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
+
+const DropdownMenuSeparator = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+  <DropdownMenuPrimitive.Separator
+    ref={ref}
+    className={cn("-mx-1 my-1 h-px bg-border", className)}
+    {...props}
+  />
+))
+DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
+
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+}

commit 8f3dfba7b9d431cde00eb98b6d6eb11891544ce4
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:41:19 2025 +0200

    Update input.tsx

diff --git a/src/components/ui/input.tsx b/src/components/ui/input.tsx
index 073dc74..7c6da58 100644
--- a/src/components/ui/input.tsx
+++ b/src/components/ui/input.tsx
@@ -1,3 +1,23 @@
-export default function Input(props: React.InputHTMLAttributes<HTMLInputElement>) {
-  return <input {...props} />;
-}
+"use client"
+
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Input = React.forwardRef<
+  HTMLInputElement,
+  React.InputHTMLAttributes<HTMLInputElement>
+>(({ className, ...props }, ref) => {
+  return (
+    <input
+      ref={ref}
+      className={cn(
+        "flex h-10 w-full rounded-md border border-border bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+        className
+      )}
+      {...props}
+    />
+  )
+})
+Input.displayName = "Input"
+
+export { Input }

commit 4331ec9b15ecf12c51ac0f1649802b8d2e7361f6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:42:13 2025 +0200

    Update textarea.tsx

diff --git a/src/components/ui/textarea.tsx b/src/components/ui/textarea.tsx
index d354919..80cc930 100644
--- a/src/components/ui/textarea.tsx
+++ b/src/components/ui/textarea.tsx
@@ -1,3 +1,23 @@
-export default function Textarea(props: React.TextareaHTMLAttributes<HTMLTextAreaElement>) {
-  return <textarea {...props} />;
-}
+"use client"
+
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Textarea = React.forwardRef<
+  HTMLTextAreaElement,
+  React.TextareaHTMLAttributes<HTMLTextAreaElement>
+>(({ className, ...props }, ref) => {
+  return (
+    <textarea
+      ref={ref}
+      className={cn(
+        "flex min-h-[80px] w-full rounded-md border border-border bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+        className
+      )}
+      {...props}
+    />
+  )
+})
+Textarea.displayName = "Textarea"
+
+export { Textarea }

commit 759b14f8fcbde9024c1f37cfac4237638c541e31
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:43:23 2025 +0200

    Create label.tsx

diff --git a/src/components/ui/label.tsx b/src/components/ui/label.tsx
new file mode 100644
index 0000000..ff53ee3
--- /dev/null
+++ b/src/components/ui/label.tsx
@@ -0,0 +1,18 @@
+"use client"
+
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Label = React.forwardRef<
+  HTMLLabelElement,
+  React.LabelHTMLAttributes<HTMLLabelElement>
+>(({ className, ...props }, ref) => (
+  <label
+    ref={ref}
+    className={cn("block mb-2 text-sm font-medium text-muted-foreground", className)}
+    {...props}
+  />
+))
+Label.displayName = "Label"
+
+export { Label }

commit ac7f648bd6cd82006d43957330523ca7e9178a88
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 08:45:36 2025 +0200

    Update status-badge.tsx

diff --git a/src/components/ui/status-badge.tsx b/src/components/ui/status-badge.tsx
index ce8a466..28d2f41 100644
--- a/src/components/ui/status-badge.tsx
+++ b/src/components/ui/status-badge.tsx
@@ -1,3 +1,26 @@
-export default function StatusBadge({ children }: { children: React.ReactNode }) {
-  return <span>{children}</span>;
+"use client"
+
+import React from "react"
+import { Badge } from "@/components/ui/badge"
+
+interface StatusBadgeProps {
+  status: "En attente" | "Validé" | "Refusé"
+}
+
+export function StatusBadge({ status }: StatusBadgeProps) {
+  let variant = "default"
+
+  switch (status) {
+    case "En attente":
+      variant = "warning"
+      break
+    case "Validé":
+      variant = "success"
+      break
+    case "Refusé":
+      variant = "destructive"
+      break
+  }
+
+  return <Badge variant={variant}>{status}</Badge>
 }

commit 6beefc6adaaff246e589b25bb326b014bba91233
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:00:09 2025 +0200

    Create stat-card.tsx

diff --git a/src/components/ui/stat-card.tsx b/src/components/ui/stat-card.tsx
new file mode 100644
index 0000000..806330b
--- /dev/null
+++ b/src/components/ui/stat-card.tsx
@@ -0,0 +1,24 @@
+"use client"
+
+import React from "react"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+interface StatCardProps {
+  title: string
+  value: string | number
+  icon?: React.ReactNode
+}
+
+export function StatCard({ title, value, icon }: StatCardProps) {
+  return (
+    <Card>
+      <CardHeader>
+        <CardTitle>{title}</CardTitle>
+      </CardHeader>
+      <CardContent className="flex items-center justify-between">
+        <p className="text-3xl font-bold">{value}</p>
+        {icon && <div className="text-primary">{icon}</div>}
+      </CardContent>
+    </Card>
+  )
+}

commit 94bf5f5d6bb3c77ebb6e09f304af0f7a59c876d5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:01:45 2025 +0200

    Update input.tsx

commit 404ea46e355f525e8799cd1376b1500a8b35f9b2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:02:34 2025 +0200

    Update accordion.tsx

diff --git a/src/components/ui/accordion.tsx b/src/components/ui/accordion.tsx
index 2e1eb6b..4989c2f 100644
--- a/src/components/ui/accordion.tsx
+++ b/src/components/ui/accordion.tsx
@@ -1,3 +1,65 @@
-export default function Accordion({ children }: { children: React.ReactNode }) {
-  return <div>{children}</div>;
+"use client"
+
+import * as React from "react"
+import * as AccordionPrimitive from "@radix-ui/react-accordion"
+import { cn } from "@/lib/utils"
+import { ChevronDown } from "lucide-react"
+
+const Accordion = AccordionPrimitive.Root
+
+const AccordionItem = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
+>(({ className, ...props }, ref) => (
+  <AccordionPrimitive.Item
+    ref={ref}
+    className={cn(
+      "border-b border-border data-[state=open]:bg-accent/50",
+      className
+    )}
+    {...props}
+  />
+))
+AccordionItem.displayName = AccordionPrimitive.Item.displayName
+
+const AccordionTrigger = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Trigger>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
+>(({ className, children, ...props }, ref) => (
+  <AccordionPrimitive.Header className="flex">
+    <AccordionPrimitive.Trigger
+      ref={ref}
+      className={cn(
+        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline focus:outline-none focus-visible:ring focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
+        className
+      )}
+      {...props}
+    >
+      {children}
+      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200 data-[state=open]:rotate-180" />
+    </AccordionPrimitive.Trigger>
+  </AccordionPrimitive.Header>
+))
+AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName
+
+const AccordionContent = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <AccordionPrimitive.Content
+    ref={ref}
+    className={cn(
+      "overflow-hidden text-sm transition-all data-[state=open]:animate-slide-down data-[state=closed]:animate-slide-up",
+      className
+    )}
+    {...props}
+  />
+))
+AccordionContent.displayName = AccordionPrimitive.Content.displayName
+
+export {
+  Accordion,
+  AccordionItem,
+  AccordionTrigger,
+  AccordionContent,
 }

commit 0d5e03a8b30385c6e031943698b73d2a02f11156
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:07:43 2025 +0200

    Update action-menu.tsx

diff --git a/src/components/ui/action-menu.tsx b/src/components/ui/action-menu.tsx
index 1f2635a..da7dff0 100644
--- a/src/components/ui/action-menu.tsx
+++ b/src/components/ui/action-menu.tsx
@@ -1,35 +1,55 @@
-"use client"
-
-import { MoreHorizontal, Trash2, Pencil } from "lucide-react"
-import {
-  DropdownMenu,
-  DropdownMenuContent,
-  DropdownMenuItem,
-  DropdownMenuTrigger,
-} from "@/components/ui/dropdown-menu"
-import { Button } from "@/components/ui/button"
+import * as React from "react";
 
 interface ActionMenuProps {
-  onEdit: () => void
-  onDelete: () => void
+  actions: { label: string; onClick: () => void }[];
 }
 
-export default function ActionMenu({ onEdit, onDelete }: ActionMenuProps) {
+export function ActionMenu({ actions }: ActionMenuProps) {
+  const [open, setOpen] = React.useState(false);
+
   return (
-    <DropdownMenu>
-      <DropdownMenuTrigger asChild>
-        <Button variant="ghost" size="icon">
-          <MoreHorizontal className="h-4 w-4" />
-        </Button>
-      </DropdownMenuTrigger>
-      <DropdownMenuContent align="end">
-        <DropdownMenuItem onClick={onEdit}>
-          <Pencil className="mr-2 h-4 w-4" /> Modifier
-        </DropdownMenuItem>
-        <DropdownMenuItem onClick={onDelete}>
-          <Trash2 className="mr-2 h-4 w-4" /> Supprimer
-        </DropdownMenuItem>
-      </DropdownMenuContent>
-    </DropdownMenu>
-  )
+    <div className="relative inline-block text-left">
+      <button
+        onClick={() => setOpen(!open)}
+        className="inline-flex justify-center w-full rounded-md border border-gray-700 bg-gray-800 px-4 py-2 text-sm font-medium text-white hover:bg-gray-700 focus:outline-none"
+        aria-haspopup="true"
+        aria-expanded={open}
+      >
+        Actions
+        <svg
+          className="-mr-1 ml-2 h-5 w-5"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke="currentColor"
+          aria-hidden="true"
+        >
+          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
+        </svg>
+      </button>
+
+      {open && (
+        <div
+          className="origin-top-right absolute right-0 mt-2 w-40 rounded-md shadow-lg bg-gray-900 ring-1 ring-black ring-opacity-5 focus:outline-none z-10"
+          role="menu"
+        >
+          <div className="py-1">
+            {actions.map((action, index) => (
+              <button
+                key={index}
+                onClick={() => {
+                  action.onClick();
+                  setOpen(false);
+                }}
+                className="block w-full text-left px-4 py-2 text-sm text-white hover:bg-pink-600"
+                role="menuitem"
+              >
+                {action.label}
+              </button>
+            ))}
+          </div>
+        </div>
+      )}
+    </div>
+  );
 }

commit fb86a7aa584f9c8e9a0ea19afc67682f4d3be190
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:09:10 2025 +0200

    Update stat-card.tsx

diff --git a/src/components/ui/stat-card.tsx b/src/components/ui/stat-card.tsx
index 806330b..811e944 100644
--- a/src/components/ui/stat-card.tsx
+++ b/src/components/ui/stat-card.tsx
@@ -1,24 +1,20 @@
-"use client"
-
-import React from "react"
-import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import React from "react";
 
 interface StatCardProps {
-  title: string
-  value: string | number
-  icon?: React.ReactNode
+  title: string;
+  value: string | number;
+  icon?: React.ReactNode;
+  className?: string;
 }
 
-export function StatCard({ title, value, icon }: StatCardProps) {
+export function StatCard({ title, value, icon, className }: StatCardProps) {
   return (
-    <Card>
-      <CardHeader>
-        <CardTitle>{title}</CardTitle>
-      </CardHeader>
-      <CardContent className="flex items-center justify-between">
-        <p className="text-3xl font-bold">{value}</p>
-        {icon && <div className="text-primary">{icon}</div>}
-      </CardContent>
-    </Card>
-  )
+    <div className={`bg-gray-800 p-4 rounded-md shadow-md flex items-center space-x-4 ${className}`}>
+      {icon && <div className="text-pink-500">{icon}</div>}
+      <div>
+        <p className="text-sm text-gray-400">{title}</p>
+        <p className="text-2xl font-bold text-white">{value}</p>
+      </div>
+    </div>
+  );
 }

commit 6aa8524a00cfa394b50db120e9842a4de210b16d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:12:36 2025 +0200

    Update jsconfig.json

diff --git a/jsconfig.json b/jsconfig.json
index 5879100..b015d7c 100644
--- a/jsconfig.json
+++ b/jsconfig.json
@@ -1,8 +1,9 @@
 {
   "compilerOptions": {
-    "baseUrl": "src",
+    "baseUrl": ".",
     "paths": {
-      "@/*": ["*"]
+      "@/*": ["src/*"]
     }
-  }
+  },
+  "exclude": ["node_modules", ".next"]
 }

commit d98bea77c46d9934f25cc87187ac24bebfcf5a45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:13:29 2025 +0200

    Update tsconfig.json

diff --git a/tsconfig.json b/tsconfig.json
index 1c3236a..6cf4856 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -8,15 +8,15 @@
     "forceConsistentCasingInFileNames": true,
     "noEmit": true,
     "esModuleInterop": true,
+    "module": "esnext",
     "moduleResolution": "node",
     "resolveJsonModule": true,
     "isolatedModules": true,
     "jsx": "preserve",
-    "baseUrl": "src",
+    "baseUrl": ".",
     "paths": {
-      "@/*": ["*"]
+      "@/*": ["src/*"]
     }
   },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
-  "exclude": ["node_modules"]
+  "exclude": ["node_modules", ".next"]
 }

commit 1067e4f5d6f0db7a9297a37bf91f5810a6caf30d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:21:45 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 09932c3..2b8d1d9 100644
--- a/package.json
+++ b/package.json
@@ -12,13 +12,13 @@
     "next": "13.5.2",
     "react": "18.2.0",
     "react-dom": "18.2.0",
-    "typescript": "^5.1.6",
-    "tailwindcss": "^3.3.2",
-    "autoprefixer": "^10.4.14",
-    "postcss": "^8.4.24"
+    "@radix-ui/react-accordion": "^1.0.0",
+    "lucide-react": "^0.275.0",
+    "class-variance-authority": "^0.5.1"
   },
   "devDependencies": {
-    "@types/react": "^18.2.14",
-    "@types/node": "^20.4.2"
+    "typescript": "^5.1.3",
+    "eslint": "8.48.0",
+    "eslint-config-next": "13.5.2"
   }
 }

commit d4510e68b3ab013a5bb929992075944440ffc9e9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:23:08 2025 +0200

    Create utils.ts

diff --git a/src/lib/utils.ts b/src/lib/utils.ts
new file mode 100644
index 0000000..453aa09
--- /dev/null
+++ b/src/lib/utils.ts
@@ -0,0 +1,9 @@
+// src/lib/utils.ts
+
+/**
+ * Fonction utilitaire pour concaténer des classes conditionnelles en CSS
+ * Exemple : cn('btn', isActive && 'btn-active') => 'btn btn-active' ou 'btn'
+ */
+export function cn(...classes: (string | boolean | undefined | null)[]) {
+  return classes.filter(Boolean).join(' ');
+}

commit afa007923f03ec271d40f98edb9fce006f7fa527
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:23:58 2025 +0200

    Update accordion.tsx

diff --git a/src/components/ui/accordion.tsx b/src/components/ui/accordion.tsx
index 4989c2f..c308003 100644
--- a/src/components/ui/accordion.tsx
+++ b/src/components/ui/accordion.tsx
@@ -1,28 +1,22 @@
-"use client"
+import * as React from "react";
+import * as AccordionPrimitive from "@radix-ui/react-accordion";
+import { cn } from "@/lib/utils";
 
-import * as React from "react"
-import * as AccordionPrimitive from "@radix-ui/react-accordion"
-import { cn } from "@/lib/utils"
-import { ChevronDown } from "lucide-react"
+export const Accordion = AccordionPrimitive.Root;
 
-const Accordion = AccordionPrimitive.Root
-
-const AccordionItem = React.forwardRef<
+export const AccordionItem = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Item>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
 >(({ className, ...props }, ref) => (
   <AccordionPrimitive.Item
     ref={ref}
-    className={cn(
-      "border-b border-border data-[state=open]:bg-accent/50",
-      className
-    )}
+    className={cn("border-b border-gray-700", className)}
     {...props}
   />
-))
-AccordionItem.displayName = AccordionPrimitive.Item.displayName
+));
+AccordionItem.displayName = "AccordionItem";
 
-const AccordionTrigger = React.forwardRef<
+export const AccordionTrigger = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Trigger>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
 >(({ className, children, ...props }, ref) => (
@@ -30,36 +24,37 @@ const AccordionTrigger = React.forwardRef<
     <AccordionPrimitive.Trigger
       ref={ref}
       className={cn(
-        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline focus:outline-none focus-visible:ring focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
+        "flex flex-1 items-center justify-between py-4 font-medium text-white hover:underline",
         className
       )}
       {...props}
     >
       {children}
-      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200 data-[state=open]:rotate-180" />
+      <svg
+        className="ml-2 h-4 w-4 shrink-0"
+        xmlns="http://www.w3.org/2000/svg"
+        fill="none"
+        viewBox="0 0 24 24"
+        stroke="currentColor"
+      >
+        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
+      </svg>
     </AccordionPrimitive.Trigger>
   </AccordionPrimitive.Header>
-))
-AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName
+));
+AccordionTrigger.displayName = "AccordionTrigger";
 
-const AccordionContent = React.forwardRef<
+export const AccordionContent = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Content>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
 >(({ className, ...props }, ref) => (
   <AccordionPrimitive.Content
     ref={ref}
     className={cn(
-      "overflow-hidden text-sm transition-all data-[state=open]:animate-slide-down data-[state=closed]:animate-slide-up",
+      "overflow-hidden text-gray-300 data-[state=open]:animate-accordion-down data-[state=closed]:animate-accordion-up",
       className
     )}
     {...props}
   />
-))
-AccordionContent.displayName = AccordionPrimitive.Content.displayName
-
-export {
-  Accordion,
-  AccordionItem,
-  AccordionTrigger,
-  AccordionContent,
-}
+));
+AccordionContent.displayName = "AccordionContent";

commit c388367475bc23e8c414da54fdb2981d2cbd3ede
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:25:08 2025 +0200

    Update badge.tsx

diff --git a/src/components/ui/badge.tsx b/src/components/ui/badge.tsx
index bf34c3c..4d8194c 100644
--- a/src/components/ui/badge.tsx
+++ b/src/components/ui/badge.tsx
@@ -1,35 +1,29 @@
-import * as React from "react"
-import { cva, type VariantProps } from "class-variance-authority"
-import { cn } from "@/lib/utils"
+import React from "react";
+import { cva, VariantProps } from "class-variance-authority";
+import { cn } from "@/lib/utils";
 
 const badgeVariants = cva(
-  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+  "inline-flex items-center rounded-full px-2 py-1 text-xs font-semibold uppercase tracking-wide",
   {
     variants: {
       variant: {
-        default: "border-transparent bg-primary text-primary-foreground",
-        secondary: "border-transparent bg-secondary text-secondary-foreground",
-        destructive: "border-transparent bg-destructive text-destructive-foreground",
-        outline: "text-foreground",
-        success: "border-transparent bg-green-600 text-white",
-        warning: "border-transparent bg-yellow-500 text-black",
-        info: "border-transparent bg-blue-500 text-white",
+        default: "bg-gray-700 text-white",
+        destructive: "bg-red-600 text-white",
+        outline: "border border-gray-700 text-gray-300",
+        pink: "bg-pink-600 text-white",
       },
     },
     defaultVariants: {
       variant: "default",
     },
   }
-)
+);
 
-export interface BadgeProps
-  extends React.HTMLAttributes<HTMLDivElement>,
-    VariantProps<typeof badgeVariants> {}
+interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement>, VariantProps<typeof badgeVariants> {}
 
-function Badge({ className, variant, ...props }: BadgeProps) {
-  return (
-    <div className={cn(badgeVariants({ variant }), className)} {...props} />
-  )
-}
-
-export { Badge, badgeVariants }
+export const Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(
+  ({ className, variant, ...props }, ref) => {
+    return <span ref={ref} className={cn(badgeVariants({ variant }), className)} {...props} />;
+  }
+);
+Badge.displayName = "Badge";

commit 13914ac8b9e4ea72872c41c1c9be4a23352519ce
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:26:26 2025 +0200

    Update status-badge.tsx

diff --git a/src/components/ui/status-badge.tsx b/src/components/ui/status-badge.tsx
index 28d2f41..ef10263 100644
--- a/src/components/ui/status-badge.tsx
+++ b/src/components/ui/status-badge.tsx
@@ -1,26 +1,34 @@
-"use client"
+import React from "react";
+import { Badge } from "./badge";
 
-import React from "react"
-import { Badge } from "@/components/ui/badge"
+type Status = "pending" | "approved" | "rejected" | "draft";
 
 interface StatusBadgeProps {
-  status: "En attente" | "Validé" | "Refusé"
+  status: Status;
 }
 
 export function StatusBadge({ status }: StatusBadgeProps) {
-  let variant = "default"
+  let variant: Parameters<typeof Badge>[0]["variant"] = "default";
+  let text = "";
 
   switch (status) {
-    case "En attente":
-      variant = "warning"
-      break
-    case "Validé":
-      variant = "success"
-      break
-    case "Refusé":
-      variant = "destructive"
-      break
+    case "pending":
+      variant = "pink";
+      text = "En attente";
+      break;
+    case "approved":
+      variant = "default";
+      text = "Approuvé";
+      break;
+    case "rejected":
+      variant = "destructive";
+      text = "Rejeté";
+      break;
+    case "draft":
+      variant = "outline";
+      text = "Brouillon";
+      break;
   }
 
-  return <Badge variant={variant}>{status}</Badge>
+  return <Badge variant={variant}>{text}</Badge>;
 }

commit 2862c5575af142d24ba1d50e44aad1d2946de119
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:26:57 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 38ee623..9961a01 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,52 +1,41 @@
-import * as React from "react"
-import { Slot } from "@radix-ui/react-slot"
-import { cva, type VariantProps } from "class-variance-authority"
-import { cn } from "@/lib/utils"
+import React, { ButtonHTMLAttributes, ReactNode } from "react";
+import clsx from "clsx";
 
-const buttonVariants = cva(
-  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ring-offset-background",
-  {
-    variants: {
-      variant: {
-        default: "bg-primary text-primary-foreground hover:bg-primary/90",
-        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
-        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
-        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        ghost: "hover:bg-accent hover:text-accent-foreground",
-        link: "text-primary underline-offset-4 hover:underline",
-      },
-      size: {
-        default: "h-10 px-4 py-2",
-        sm: "h-9 rounded-md px-3",
-        lg: "h-11 rounded-md px-8",
-        icon: "h-10 w-10",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-      size: "default",
-    },
-  }
-)
-
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
-    VariantProps<typeof buttonVariants> {
-  asChild?: boolean
+interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {
+  variant?: "primary" | "secondary" | "ghost" | "destructive";
+  size?: "sm" | "md" | "lg";
+  children: ReactNode;
 }
 
-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ className, variant, size, asChild = false, ...props }, ref) => {
-    const Comp = asChild ? Slot : "button"
-    return (
-      <Comp
-        className={cn(buttonVariants({ variant, size }), className)}
-        ref={ref}
-        {...props}
-      />
-    )
-  }
-)
-Button.displayName = "Button"
+export function Button({
+  variant = "primary",
+  size = "md",
+  className,
+  children,
+  ...props
+}: ButtonProps) {
+  const baseStyles =
+    "inline-flex items-center justify-center rounded-md font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none";
+
+  const variants = {
+    primary: "bg-pink-600 text-white hover:bg-pink-700 focus:ring-pink-500",
+    secondary: "bg-gray-800 text-white hover:bg-gray-700 focus:ring-gray-600",
+    ghost: "bg-transparent hover:bg-gray-700 text-white focus:ring-gray-600",
+    destructive: "bg-red-600 text-white hover:bg-red-700 focus:ring-red-500",
+  };
 
-export { Button, buttonVariants }
+  const sizes = {
+    sm: "h-8 px-3 text-sm",
+    md: "h-10 px-4 text-base",
+    lg: "h-12 px-6 text-lg",
+  };
+
+  return (
+    <button
+      className={clsx(baseStyles, variants[variant], sizes[size], className)}
+      {...props}
+    >
+      {children}
+    </button>
+  );
+}

commit dd376b7a30fc8b6afe5f012827ebbb450def7253
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:31:09 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 2b8d1d9..8d124f1 100644
--- a/package.json
+++ b/package.json
@@ -9,16 +9,18 @@
     "lint": "next lint"
   },
   "dependencies": {
-    "next": "13.5.2",
+    "autoprefixer": "^10.4.19",
+    "lucide-react": "^0.339.0",
+    "next": "14.2.3",
+    "postcss": "^8.4.38",
     "react": "18.2.0",
     "react-dom": "18.2.0",
-    "@radix-ui/react-accordion": "^1.0.0",
-    "lucide-react": "^0.275.0",
-    "class-variance-authority": "^0.5.1"
+    "shadcn/ui": "^1.0.0",
+    "tailwindcss": "^3.4.1"
   },
   "devDependencies": {
-    "typescript": "^5.1.3",
-    "eslint": "8.48.0",
-    "eslint-config-next": "13.5.2"
+    "eslint": "8.56.0",
+    "eslint-config-next": "14.2.3",
+    "typescript": "^5.4.5"
   }
 }

commit 2852a4c7416c018fb7d6e777d5119bb19c5ca143
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:33:36 2025 +0200

    Update jsconfig.json

diff --git a/jsconfig.json b/jsconfig.json
index b015d7c..2c8ee2b 100644
--- a/jsconfig.json
+++ b/jsconfig.json
@@ -4,6 +4,5 @@
     "paths": {
       "@/*": ["src/*"]
     }
-  },
-  "exclude": ["node_modules", ".next"]
+  }
 }

commit 41d1c598441e67e45e50c53fa339105a63e2b558
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:35:27 2025 +0200

    Create tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
new file mode 100644
index 0000000..67f0f98
--- /dev/null
+++ b/tailwind.config.js
@@ -0,0 +1,12 @@
+/** @type {import('tailwindcss').Config} */
+module.exports = {
+  content: [
+    "./app/**/*.{js,ts,jsx,tsx}",
+    "./pages/**/*.{js,ts,jsx,tsx}",
+    "./components/**/*.{js,ts,jsx,tsx}"
+  ],
+  theme: {
+    extend: {},
+  },
+  plugins: [],
+}

commit 8d6fa6a8559001bc427a6b8b5a74f4bf21ed367a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 09:37:19 2025 +0200

    Update postcss.config.js

commit bf6fb3ea2ade27464cc5ab5d5458f0b69d5b9a84
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:00:06 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 9961a01..1421002 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,41 +1,45 @@
-import React, { ButtonHTMLAttributes, ReactNode } from "react";
-import clsx from "clsx";
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
 
-interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {
-  variant?: "primary" | "secondary" | "ghost" | "destructive";
-  size?: "sm" | "md" | "lg";
-  children: ReactNode;
-}
-
-export function Button({
-  variant = "primary",
-  size = "md",
-  className,
-  children,
-  ...props
-}: ButtonProps) {
-  const baseStyles =
-    "inline-flex items-center justify-center rounded-md font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none";
+const buttonVariants = cva(
+  "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90",
+        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
+        outline: "border border-input hover:bg-accent hover:text-accent-foreground",
+        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "underline-offset-4 hover:underline text-primary",
+      },
+      size: {
+        default: "h-10 py-2 px-4",
+        sm: "h-9 px-3 rounded-md",
+        lg: "h-11 px-8 rounded-md",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
 
-  const variants = {
-    primary: "bg-pink-600 text-white hover:bg-pink-700 focus:ring-pink-500",
-    secondary: "bg-gray-800 text-white hover:bg-gray-700 focus:ring-gray-600",
-    ghost: "bg-transparent hover:bg-gray-700 text-white focus:ring-gray-600",
-    destructive: "bg-red-600 text-white hover:bg-red-700 focus:ring-red-500",
-  };
+export interface ButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof buttonVariants> {
+  asChild?: boolean
+}
 
-  const sizes = {
-    sm: "h-8 px-3 text-sm",
-    md: "h-10 px-4 text-base",
-    lg: "h-12 px-6 text-lg",
-  };
+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
+  ({ className, variant, size, asChild = false, ...props }, ref) => {
+    const Comp = asChild ? Slot : "button"
+    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />
+  }
+)
+Button.displayName = "Button"
 
-  return (
-    <button
-      className={clsx(baseStyles, variants[variant], sizes[size], className)}
-      {...props}
-    >
-      {children}
-    </button>
-  );
-}
+export { Button, buttonVariants }
\ No newline at end of file

commit 802fc76f374aa294b8b3f4eb078cb6616c8f873f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:01:45 2025 +0200

    Update utils.ts

diff --git a/src/lib/utils.ts b/src/lib/utils.ts
index 453aa09..52cc1fb 100644
--- a/src/lib/utils.ts
+++ b/src/lib/utils.ts
@@ -1,9 +1,3 @@
-// src/lib/utils.ts
-
-/**
- * Fonction utilitaire pour concaténer des classes conditionnelles en CSS
- * Exemple : cn('btn', isActive && 'btn-active') => 'btn btn-active' ou 'btn'
- */
-export function cn(...classes: (string | boolean | undefined | null)[]) {
-  return classes.filter(Boolean).join(' ');
+export function cn(...inputs: (string | boolean | undefined | null)[]) {
+  return inputs.filter(Boolean).join(" ")
 }

commit 5b45fa96d5df11a820f10d69374310e62ed64d6b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:08:16 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 1421002..8f3f7ff 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -42,4 +42,4 @@ const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
 )
 Button.displayName = "Button"
 
-export { Button, buttonVariants }
\ No newline at end of file
+export { Button, buttonVariants }

commit 4dda9cbe8afd9a7236c389cffe23b45a6cd19e18
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:17:02 2025 +0200

    Create README.md

diff --git a/src/components/ui/README.md b/src/components/ui/README.md
new file mode 100644
index 0000000..9c9ec52
--- /dev/null
+++ b/src/components/ui/README.md
@@ -0,0 +1,26 @@
+# Composants UI de BeatsMarket
+
+Voici la liste des composants UI disponibles dans ce dossier, avec leur usage.
+
+- **Accordion** : Affiche des sections repliables.
+- **ActionMenu** : Menu d’actions déroulant.
+- **Badge** : Petit badge pour afficher un statut.
+- **Bouton** : Bouton avec variantes.
+- **Card** : Carte visuelle contenant des infos.
+- **DropDownMenu** : Menu déroulant multi-options.
+- **Input** : Champ texte de formulaire.
+- **Label** : Étiquette pour champ formulaire.
+- **StadCard** : Carte statistique (KPI).
+- **StatutBadge** : Badge pour statuts dynamiques.
+- **Textarea** : Zone de texte multi-lignes.
+
+---
+
+## Exemple d’utilisation
+
+```tsx
+import { Button } from "./button"
+
+export function Exemple() {
+  return <Button variant="default">Cliquez-moi</Button>
+}

commit e3bc87788c77a733820d3fcb4fbbb3ecef0dcfdf
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:18:28 2025 +0200

    Create AccordionExample.tsx

diff --git a/src/components/ui/AccordionExample.tsx b/src/components/ui/AccordionExample.tsx
new file mode 100644
index 0000000..a705f8b
--- /dev/null
+++ b/src/components/ui/AccordionExample.tsx
@@ -0,0 +1,21 @@
+import * as React from "react"
+import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from "./Accordion"
+
+export function AccordionExample() {
+  return (
+    <Accordion type="single" collapsible className="w-full max-w-md border rounded-md">
+      <AccordionItem value="item-1">
+        <AccordionTrigger>Section 1</AccordionTrigger>
+        <AccordionContent>
+          Contenu de la section 1. Tu peux mettre ici du texte, des images, ou tout autre composant.
+        </AccordionContent>
+      </AccordionItem>
+      <AccordionItem value="item-2">
+        <AccordionTrigger>Section 2</AccordionTrigger>
+        <AccordionContent>
+          Contenu de la section 2. Chaque section peut être ouverte ou fermée indépendamment.
+        </AccordionContent>
+      </AccordionItem>
+    </Accordion>
+  )
+}

commit e71ab43eb0fb18bb4a40b9de47daba1e7f942a8e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:19:20 2025 +0200

    Create ActionMenuExample.tsx

diff --git a/src/components/ui/ActionMenuExample.tsx b/src/components/ui/ActionMenuExample.tsx
new file mode 100644
index 0000000..5eebcd7
--- /dev/null
+++ b/src/components/ui/ActionMenuExample.tsx
@@ -0,0 +1,23 @@
+import * as React from "react"
+import {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+} from "./DropDownMenu"
+import { MoreHorizontal } from "lucide-react"
+
+export function ActionMenuExample() {
+  return (
+    <DropdownMenu>
+      <DropdownMenuTrigger className="p-2 rounded-full hover:bg-gray-200">
+        <MoreHorizontal size={20} />
+      </DropdownMenuTrigger>
+      <DropdownMenuContent className="w-48">
+        <DropdownMenuItem onSelect={() => alert("Modifier")}>Modifier</DropdownMenuItem>
+        <DropdownMenuItem onSelect={() => alert("Supprimer")}>Supprimer</DropdownMenuItem>
+        <DropdownMenuItem onSelect={() => alert("Partager")}>Partager</DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+}

commit 8da8f78fa1c767b548354a886036a7516065eb37
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:20:07 2025 +0200

    Create BadgeExample.tsx

diff --git a/src/components/ui/BadgeExample.tsx b/src/components/ui/BadgeExample.tsx
new file mode 100644
index 0000000..73f1fa9
--- /dev/null
+++ b/src/components/ui/BadgeExample.tsx
@@ -0,0 +1,26 @@
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {
+  variant?: "default" | "success" | "warning" | "danger"
+}
+
+const variantStyles = {
+  default: "bg-gray-100 text-gray-800",
+  success: "bg-green-100 text-green-800",
+  warning: "bg-yellow-100 text-yellow-800",
+  danger: "bg-red-100 text-red-800",
+}
+
+export function BadgeExample({ className, variant = "default", ...props }: BadgeProps) {
+  return (
+    <span
+      className={cn(
+        "inline-flex items-center rounded-full px-2 py-0.5 text-xs font-semibold",
+        variantStyles[variant],
+        className
+      )}
+      {...props}
+    />
+  )
+}

commit ed9f6961bf7a58e5c95fde3a30d5cdbf2f953ab3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:21:01 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 8f3f7ff..91bbe62 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,45 +1,43 @@
 import * as React from "react"
 import { Slot } from "@radix-ui/react-slot"
-import { cva, type VariantProps } from "class-variance-authority"
 import { cn } from "@/lib/utils"
 
-const buttonVariants = cva(
-  "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background",
-  {
-    variants: {
-      variant: {
-        default: "bg-primary text-primary-foreground hover:bg-primary/90",
-        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
-        outline: "border border-input hover:bg-accent hover:text-accent-foreground",
-        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        ghost: "hover:bg-accent hover:text-accent-foreground",
-        link: "underline-offset-4 hover:underline text-primary",
-      },
-      size: {
-        default: "h-10 py-2 px-4",
-        sm: "h-9 px-3 rounded-md",
-        lg: "h-11 px-8 rounded-md",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-      size: "default",
-    },
-  }
-)
-
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
-    VariantProps<typeof buttonVariants> {
+export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
   asChild?: boolean
+  variant?: "default" | "secondary" | "destructive" | "ghost"
+  size?: "sm" | "md" | "lg"
+}
+
+const variants = {
+  default: "bg-pink-600 text-white hover:bg-pink-700",
+  secondary: "bg-gray-100 text-gray-900 hover:bg-gray-200",
+  destructive: "bg-red-600 text-white hover:bg-red-700",
+  ghost: "bg-transparent hover:bg-gray-100 text-gray-800",
+}
+
+const sizes = {
+  sm: "h-8 px-3 text-sm",
+  md: "h-10 px-4 text-base",
+  lg: "h-12 px-6 text-lg",
 }
 
 const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ className, variant, size, asChild = false, ...props }, ref) => {
+  ({ className, variant = "default", size = "md", asChild = false, ...props }, ref) => {
     const Comp = asChild ? Slot : "button"
-    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />
+    return (
+      <Comp
+        className={cn(
+          "inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2",
+          variants[variant],
+          sizes[size],
+          className
+        )}
+        ref={ref}
+        {...props}
+      />
+    )
   }
 )
 Button.displayName = "Button"
 
-export { Button, buttonVariants }
+export { Button }

commit 1596e10aff2cdd04d85d7f61831d645c8d9ffc1a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:21:48 2025 +0200

    Update card.tsx

diff --git a/src/components/ui/card.tsx b/src/components/ui/card.tsx
index d2e1580..55faf48 100644
--- a/src/components/ui/card.tsx
+++ b/src/components/ui/card.tsx
@@ -1,4 +1,5 @@
 import * as React from "react"
+
 import { cn } from "@/lib/utils"
 
 const Card = React.forwardRef<
@@ -8,7 +9,7 @@ const Card = React.forwardRef<
   <div
     ref={ref}
     className={cn(
-      "rounded-2xl border border-border bg-card text-card-foreground shadow-sm",
+      "rounded-2xl border border-border bg-background shadow-sm",
       className
     )}
     {...props}
@@ -34,10 +35,7 @@ const CardTitle = React.forwardRef<
 >(({ className, ...props }, ref) => (
   <h3
     ref={ref}
-    className={cn(
-      "text-2xl font-semibold leading-none tracking-tight",
-      className
-    )}
+    className={cn("text-lg font-semibold leading-none tracking-tight", className)}
     {...props}
   />
 ))
@@ -58,28 +56,6 @@ CardDescription.displayName = "CardDescription"
 const CardContent = React.forwardRef<
   HTMLDivElement,
   React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
-))
-CardContent.displayName = "CardContent"
-
-const CardFooter = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
 >(({ className, ...props }, ref) => (
   <div
-    ref={ref}
-    className={cn("flex items-center p-6 pt-0", className)}
-    {...props}
-  />
-))
-CardFooter.displayName = "CardFooter"
-
-export {
-  Card,
-  CardHeader,
-  CardFooter,
-  CardTitle,
-  CardDescription,
-  CardContent,
-}
+    ref={

commit 2f681a93fcc87986e557930dc913e68b18dceef1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:22:38 2025 +0200

    Update dropdown-menu.tsx

diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx
index a5e4bae..7bb8363 100644
--- a/src/components/ui/dropdown-menu.tsx
+++ b/src/components/ui/dropdown-menu.tsx
@@ -2,77 +2,48 @@
 
 import * as React from "react"
 import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
+import { Check, ChevronRight, Circle } from "lucide-react"
+
 import { cn } from "@/lib/utils"
 
 const DropdownMenu = DropdownMenuPrimitive.Root
 
 const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
 
+const DropdownMenuGroup = DropdownMenuPrimitive.Group
+
 const DropdownMenuPortal = DropdownMenuPrimitive.Portal
 
-const DropdownMenuContent = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
->(({ className, sideOffset = 4, ...props }, ref) => (
-  <DropdownMenuPortal>
-    <DropdownMenuPrimitive.Content
-      ref={ref}
-      sideOffset={sideOffset}
-      className={cn(
-        "z-50 min-w-[8rem] rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80",
-        className
-      )}
-      {...props}
-    />
-  </DropdownMenuPortal>
-))
-DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
+const DropdownMenuSub = DropdownMenuPrimitive.Sub
+
+const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
 
-const DropdownMenuItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item>
->(({ className, disabled, ...props }, ref) => (
-  <DropdownMenuPrimitive.Item
+const DropdownMenuSubTrigger = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
+    inset?: boolean
+  }
+>(({ className, inset, children, ...props }, ref) => (
+  <DropdownMenuPrimitive.SubTrigger
     ref={ref}
     className={cn(
-      "relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
+      inset && "pl-8",
       className
     )}
-    disabled={disabled}
     {...props}
-  />
+  >
+    {children}
+    <ChevronRight className="ml-auto h-4 w-4" />
+  </DropdownMenuPrimitive.SubTrigger>
 ))
-DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
+DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName
 
-const DropdownMenuLabel = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label>
+const DropdownMenuSubContent = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
 >(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.Label
+  <DropdownMenuPrimitive.SubContent
     ref={ref}
-    className={cn("px-2 py-1.5 text-sm font-semibold text-muted-foreground", className)}
-    {...props}
-  />
-))
-DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
-
-const DropdownMenuSeparator = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
->(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.Separator
-    ref={ref}
-    className={cn("-mx-1 my-1 h-px bg-border", className)}
-    {...props}
-  />
-))
-DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
-
-export {
-  DropdownMenu,
-  DropdownMenuTrigger,
-  DropdownMenuContent,
-  DropdownMenuItem,
-  DropdownMenuLabel,
-  DropdownMenuSeparator,
-}
+    className={cn(
+      "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p

commit e3599328a652477f40bb952c151043167a4cacec
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:24:12 2025 +0200

    Update dropdown-menu.tsx

diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx
index 7bb8363..f59016e 100644
--- a/src/components/ui/dropdown-menu.tsx
+++ b/src/components/ui/dropdown-menu.tsx
@@ -46,4 +46,145 @@ const DropdownMenuSubContent = React.forwardRef<
   <DropdownMenuPrimitive.SubContent
     ref={ref}
     className={cn(
-      "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p
+      "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in slide-in-from-left-1",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName
+
+const DropdownMenuContent = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
+>(({ className, sideOffset = 4, ...props }, ref) => (
+  <DropdownMenuPrimitive.Portal>
+    <DropdownMenuPrimitive.Content
+      ref={ref}
+      sideOffset={sideOffset}
+      className={cn(
+        "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95",
+        className
+      )}
+      {...props}
+    />
+  </DropdownMenuPrimitive.Portal>
+))
+DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
+
+const DropdownMenuItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <DropdownMenuPrimitive.Item
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
+
+const DropdownMenuCheckboxItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
+>(({ className, children, checked, ...props }, ref) => (
+  <DropdownMenuPrimitive.CheckboxItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    checked={checked}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <Check className="h-4 w-4" />
+    </span>
+    {children}
+  </DropdownMenuPrimitive.CheckboxItem>
+))
+DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName
+
+const DropdownMenuRadioItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
+>(({ className, children, ...props }, ref) => (
+  <DropdownMenuPrimitive.RadioItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <Circle className="h-2 w-2 fill-current" />
+    </span>
+    {children}
+  </DropdownMenuPrimitive.RadioItem>
+))
+DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
+
+const DropdownMenuLabel = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <DropdownMenuPrimitive.Label
+    ref={ref}
+    className={cn(
+      "px-2 py-1.5 text-sm font-semibold text-foreground",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
+
+const DropdownMenuSeparator = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+  <DropdownMenuPrimitive.Separator
+    ref={ref}
+    className={cn("my-1 h-px bg-muted", className)}
+    {...props}
+  />
+))
+DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
+
+const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
+  return (
+    <span
+      className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)}
+      {...props}
+    />
+  )
+}
+DropdownMenuShortcut.displayName = "DropdownMenuShortcut"
+
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+}

commit 1687cb88bc452e2dbf582cd53824875853071f45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:25:01 2025 +0200

    Update stat-card.tsx

diff --git a/src/components/ui/stat-card.tsx b/src/components/ui/stat-card.tsx
index 811e944..f12b700 100644
--- a/src/components/ui/stat-card.tsx
+++ b/src/components/ui/stat-card.tsx
@@ -1,20 +1,24 @@
-import React from "react";
+import React from "react"
+import { Card, CardContent } from "@/components/ui/card"
 
 interface StatCardProps {
-  title: string;
-  value: string | number;
-  icon?: React.ReactNode;
-  className?: string;
+  title: string
+  value: string
+  icon?: React.ReactNode
+  description?: string
 }
 
-export function StatCard({ title, value, icon, className }: StatCardProps) {
+export default function StatCard({ title, value, icon, description }: StatCardProps) {
   return (
-    <div className={`bg-gray-800 p-4 rounded-md shadow-md flex items-center space-x-4 ${className}`}>
-      {icon && <div className="text-pink-500">{icon}</div>}
-      <div>
-        <p className="text-sm text-gray-400">{title}</p>
-        <p className="text-2xl font-bold text-white">{value}</p>
-      </div>
-    </div>
-  );
+    <Card className="w-full">
+      <CardContent className="flex items-center justify-between p-4">
+        <div>
+          <div className="text-sm text-muted-foreground">{title}</div>
+          <div className="text-2xl font-bold">{value}</div>
+          {description && <p className="text-xs text-muted-foreground mt-1">{description}</p>}
+        </div>
+        {icon && <div className="text-3xl text-muted-foreground">{icon}</div>}
+      </CardContent>
+    </Card>
+  )
 }

commit d4d62495e0e5b288dca6131bc049af5834391824
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:25:53 2025 +0200

    Update status-badge.tsx

diff --git a/src/components/ui/status-badge.tsx b/src/components/ui/status-badge.tsx
index ef10263..a7c5083 100644
--- a/src/components/ui/status-badge.tsx
+++ b/src/components/ui/status-badge.tsx
@@ -1,34 +1,26 @@
-import React from "react";
-import { Badge } from "./badge";
-
-type Status = "pending" | "approved" | "rejected" | "draft";
+import React from "react"
+import { cn } from "@/lib/utils"
 
 interface StatusBadgeProps {
-  status: Status;
+  status: "actif" | "en attente" | "suspendu" | "supprimé"
 }
 
-export function StatusBadge({ status }: StatusBadgeProps) {
-  let variant: Parameters<typeof Badge>[0]["variant"] = "default";
-  let text = "";
-
-  switch (status) {
-    case "pending":
-      variant = "pink";
-      text = "En attente";
-      break;
-    case "approved":
-      variant = "default";
-      text = "Approuvé";
-      break;
-    case "rejected":
-      variant = "destructive";
-      text = "Rejeté";
-      break;
-    case "draft":
-      variant = "outline";
-      text = "Brouillon";
-      break;
-  }
+const statusColors: Record<StatusBadgeProps["status"], string> = {
+  actif: "bg-green-500 text-white",
+  "en attente": "bg-yellow-400 text-black",
+  suspendu: "bg-red-500 text-white",
+  supprimé: "bg-gray-500 text-white",
+}
 
-  return <Badge variant={variant}>{text}</Badge>;
+export default function StatusBadge({ status }: StatusBadgeProps) {
+  return (
+    <span
+      className={cn(
+        "px-3 py-1 text-xs font-semibold rounded-full",
+        statusColors[status]
+      )}
+    >
+      {status}
+    </span>
+  )
 }

commit ec6dc3bd8241ebf3801a3ce7271d53175d2d6358
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:26:55 2025 +0200

    Update textarea.tsx

diff --git a/src/components/ui/textarea.tsx b/src/components/ui/textarea.tsx
index 80cc930..72d8cc3 100644
--- a/src/components/ui/textarea.tsx
+++ b/src/components/ui/textarea.tsx
@@ -1,23 +1,23 @@
-"use client"
-
 import * as React from "react"
 import { cn } from "@/lib/utils"
 
-const Textarea = React.forwardRef<
-  HTMLTextAreaElement,
-  React.TextareaHTMLAttributes<HTMLTextAreaElement>
->(({ className, ...props }, ref) => {
-  return (
-    <textarea
-      ref={ref}
-      className={cn(
-        "flex min-h-[80px] w-full rounded-md border border-border bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
-        className
-      )}
-      {...props}
-    />
-  )
-})
+export interface TextareaProps
+  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}
+
+const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <textarea
+        className={cn(
+          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
+          className
+        )}
+        ref={ref}
+        {...props}
+      />
+    )
+  }
+)
 Textarea.displayName = "Textarea"
 
 export { Textarea }

commit f33c3cdcf74181abf55a4e6cece8a78517bead62
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:28:21 2025 +0200

    Create tooltip.tsx

diff --git a/src/components/ui/tooltip.tsx b/src/components/ui/tooltip.tsx
new file mode 100644
index 0000000..d1d625e
--- /dev/null
+++ b/src/components/ui/tooltip.tsx
@@ -0,0 +1,33 @@
+"use client"
+
+import * as React from "react"
+import {
+  Tooltip as TooltipPrimitive,
+  TooltipContent,
+  TooltipProvider,
+  TooltipTrigger,
+} from "@/components/ui/tooltip-primitive"
+
+interface TooltipProps {
+  children: React.ReactNode
+  content: React.ReactNode
+  delayDuration?: number
+}
+
+function Tooltip({
+  children,
+  content,
+  delayDuration = 300,
+  ...props
+}: TooltipProps) {
+  return (
+    <TooltipProvider delayDuration={delayDuration}>
+      <TooltipPrimitive>
+        <TooltipTrigger asChild>{children}</TooltipTrigger>
+        <TooltipContent {...props}>{content}</TooltipContent>
+      </TooltipPrimitive>
+    </TooltipProvider>
+  )
+}
+
+export { Tooltip }

commit af1c13156bbd3edf8c006c01bc026e193df82fa9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:30:44 2025 +0200

    Create index.ts

diff --git a/src/components/ui/index.ts b/src/components/ui/index.ts
new file mode 100644
index 0000000..5067a03
--- /dev/null
+++ b/src/components/ui/index.ts
@@ -0,0 +1,28 @@
+export { Accordion } from "./Accordion"
+export { ActionMenu } from "./ActionMenu"
+export { Badge } from "./Badge"
+export { Button } from "./Button"
+export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from "./Card"
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+} from "./DropdownMenu"
+export { Input } from "./Input"
+export { Label } from "./Label"
+export { StatCard } from "./statcard"
+export { StatusBadge } from "./status-badge"
+export { Textarea } from "./textarea"
+export { Tooltip } from "./tooltip"

commit fa605f38cb9f1ee5b8736974aa131e1f4c97bd6c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:31:55 2025 +0200

    Update README.md

diff --git a/src/components/ui/README.md b/src/components/ui/README.md
index 9c9ec52..d5ded0e 100644
--- a/src/components/ui/README.md
+++ b/src/components/ui/README.md
@@ -1,26 +1,25 @@
-# Composants UI de BeatsMarket
+# Bibliothèque de composants UI - BeatsMarket
 
-Voici la liste des composants UI disponibles dans ce dossier, avec leur usage.
+Ce dossier contient tous les composants UI réutilisables pour BeatsMarket.
 
-- **Accordion** : Affiche des sections repliables.
+## Liste des composants
+
+- **Accordion** : Section repliable (accordéon).
 - **ActionMenu** : Menu d’actions déroulant.
-- **Badge** : Petit badge pour afficher un statut.
-- **Bouton** : Bouton avec variantes.
-- **Card** : Carte visuelle contenant des infos.
-- **DropDownMenu** : Menu déroulant multi-options.
-- **Input** : Champ texte de formulaire.
+- **Badge** : Petit badge coloré pour statuts ou labels.
+- **Button** : Bouton avec variantes (default, destructive, ghost...).
+- **Card** : Carte d’affichage avec header, content, footer.
+- **DropdownMenu** : Menu déroulant complexe avec sous-menus.
+- **Input** : Champ de saisie simple.
 - **Label** : Étiquette pour champ formulaire.
-- **StadCard** : Carte statistique (KPI).
-- **StatutBadge** : Badge pour statuts dynamiques.
-- **Textarea** : Zone de texte multi-lignes.
+- **StatCard** : Carte de statistiques (KPI).
+- **StatusBadge** : Badge indiquant un statut (actif, suspendu...).
+- **Textarea** : Zone de texte multilignes.
+- **Tooltip** : Info-bulle affichée au survol.
 
----
+## Importer les composants
 
-## Exemple d’utilisation
+Grâce au fichier `index.ts`, tu peux importer les composants ainsi :
 
 ```tsx
-import { Button } from "./button"
-
-export function Exemple() {
-  return <Button variant="default">Cliquez-moi</Button>
-}
+import { Button, Card, Tooltip } from "@/components/ui"

commit 6996d1f76521ad7bde216c954038a8371d4f8004
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:34:31 2025 +0200

    Create generate-ui-index.js

diff --git a/generate-ui-index.js b/generate-ui-index.js
new file mode 100644
index 0000000..c69d0a6
--- /dev/null
+++ b/generate-ui-index.js
@@ -0,0 +1,55 @@
+const fs = require("fs")
+const path = require("path")
+
+const uiDir = path.resolve(__dirname, "src/components/ui")
+const indexFile = path.join(uiDir, "index.ts")
+
+fs.readdir(uiDir, (err, files) => {
+  if (err) {
+    console.error("Erreur lecture dossier UI :", err)
+    return
+  }
+
+  // Filtrer les fichiers .tsx (sauf index.tsx ou index.ts)
+  const tsxFiles = files.filter(
+    (f) => f.endsWith(".tsx") && !f.startsWith("index")
+  )
+
+  const exports = tsxFiles
+    .map((file) => {
+      const name = path.basename(file, ".tsx")
+      if (name.toLowerCase() === "card") {
+        // Cas particulier pour Card qui exporte plusieurs composants
+        return `export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from "./${name}"`
+      }
+      if (name.toLowerCase() === "dropdownmenu") {
+        return `export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+} from "./${name}"`
+      }
+      // Export simple
+      return `export { ${name.charAt(0).toUpperCase() + name.slice(1)} } from "./${name}"`
+    })
+    .join("\n")
+
+  const content = `// AUTO-GENERATED INDEX FILE\n\n${exports}\n`
+
+  fs.writeFile(indexFile, content, (err) => {
+    if (err) console.error("Erreur écriture index.ts :", err)
+    else console.log("index.ts généré avec succès !")
+  })
+})

commit 974086ae88108b61ccdaf604f047c320989f1571
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:35:43 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 8d124f1..4afe278 100644
--- a/package.json
+++ b/package.json
@@ -1,26 +1,18 @@
 {
   "name": "beatsmarket",
   "version": "1.0.0",
-  "private": true,
+  "description": "Projet BeatsMarket",
+  "main": "index.js",
   "scripts": {
-    "dev": "next dev",
-    "build": "next build",
+    "generate-ui-index": "node generate-ui-index.js",
     "start": "next start",
-    "lint": "next lint"
+    "dev": "next dev",
+    "build": "next build"
   },
   "dependencies": {
-    "autoprefixer": "^10.4.19",
-    "lucide-react": "^0.339.0",
-    "next": "14.2.3",
-    "postcss": "^8.4.38",
-    "react": "18.2.0",
-    "react-dom": "18.2.0",
-    "shadcn/ui": "^1.0.0",
-    "tailwindcss": "^3.4.1"
+    "react": "^18.2.0",
+    "react-dom": "^18.2.0",
+    "next": "^13.4.7"
   },
-  "devDependencies": {
-    "eslint": "8.56.0",
-    "eslint-config-next": "14.2.3",
-    "typescript": "^5.4.5"
-  }
+  "devDependencies": {}
 }

commit 8ed21606f72bf5251c43d6c94262b58591673e66
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:38:02 2025 +0200

    Create generate-ui-index.js

diff --git a/hub/generate-ui-index.js b/hub/generate-ui-index.js
new file mode 100644
index 0000000..1723366
--- /dev/null
+++ b/hub/generate-ui-index.js
@@ -0,0 +1,52 @@
+const fs = require("fs")
+const path = require("path")
+
+const uiDir = path.resolve(__dirname, "../src/components/ui")
+const indexFile = path.join(uiDir, "index.ts")
+
+fs.readdir(uiDir, (err, files) => {
+  if (err) {
+    console.error("Erreur lecture dossier UI :", err)
+    return
+  }
+
+  const tsxFiles = files.filter(
+    (f) => f.endsWith(".tsx") && !f.startsWith("index")
+  )
+
+  const exports = tsxFiles
+    .map((file) => {
+      const name = path.basename(file, ".tsx")
+      if (name.toLowerCase() === "card") {
+        return `export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from "./${name}"`
+      }
+      if (name.toLowerCase() === "dropdownmenu") {
+        return `export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+} from "./${name}"`
+      }
+      return `export { ${name.charAt(0).toUpperCase() + name.slice(1)} } from "./${name}"`
+    })
+    .join("\n")
+
+  const content = `// AUTO-GENERATED INDEX FILE\n\n${exports}\n`
+
+  fs.writeFile(indexFile, content, (err) => {
+    if (err) console.error("Erreur écriture index.ts :", err)
+    else console.log("index.ts généré avec succès !")
+  })
+})

commit 9032e9c516030a3a6dfef85dd06f14278a52a1c6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:38:51 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 4afe278..7e76eb9 100644
--- a/package.json
+++ b/package.json
@@ -4,7 +4,8 @@
   "description": "Projet BeatsMarket",
   "main": "index.js",
   "scripts": {
-    "generate-ui-index": "node generate-ui-index.js",
+    "generate-ui-index": "node hub/generate-ui-index.js",
+    "watch-ui-index": "nodemon --watch src/components/ui --ext tsx --exec \"npm run generate-ui-index\"",
     "start": "next start",
     "dev": "next dev",
     "build": "next build"
@@ -14,5 +15,7 @@
     "react-dom": "^18.2.0",
     "next": "^13.4.7"
   },
-  "devDependencies": {}
+  "devDependencies": {
+    "nodemon": "^3.0.1"
+  }
 }

commit f5b027c2c6dcd9f621e82f7100e38eec131c3a4f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:40:38 2025 +0200

    Create ci.yml

diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
new file mode 100644
index 0000000..7cf19bb
--- /dev/null
+++ b/.github/workflows/ci.yml
@@ -0,0 +1,40 @@
+name: CI
+
+on:
+  push:
+    branches: [main]
+  pull_request:
+    branches: [main]
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v3
+
+      - name: Setup Node.js
+        uses: actions/setup-node@v3
+        with:
+          node-version: 18
+
+      - name: Install dependencies
+        run: npm ci
+
+      - name: Generate UI index
+        run: npm run generate-ui-index
+
+      - name: Build Next.js project
+        run: npm run build
+
+      # Si tu as des tests, décommente cette étape et adapte la commande
+      # - name: Run tests
+      #   run: npm test
+
+      - name: Upload build artifacts (optional)
+        if: success()
+        uses: actions/upload-artifact@v3
+        with:
+          name: nextjs-build
+          path: .next

commit 486ddd8a067cc3de8aac446e321da6dee4c859ed
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 14:41:52 2025 +0200

    Create deploy-vercel.yml

diff --git a/.github/workflows/deploy-vercel.yml b/.github/workflows/deploy-vercel.yml
new file mode 100644
index 0000000..72a7a2a
--- /dev/null
+++ b/.github/workflows/deploy-vercel.yml
@@ -0,0 +1,39 @@
+name: Deploy to Vercel
+
+on:
+  push:
+    branches:
+      - main
+
+jobs:
+  build-and-deploy:
+    runs-on: ubuntu-latest
+
+    steps:
+      - name: Checkout repo
+        uses: actions/checkout@v3
+
+      - name: Setup Node.js
+        uses: actions/setup-node@v3
+        with:
+          node-version: 18
+
+      - name: Install dependencies
+        run: npm ci
+
+      - name: Generate UI index
+        run: npm run generate-ui-index
+
+      - name: Build Next.js
+        run: npm run build
+
+      - name: Install Vercel CLI
+        run: npm install -g vercel
+
+      - name: Deploy to Vercel
+        env:
+          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
+          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
+          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
+        run: |
+          vercel --prod --confirm --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID

commit be0eaa49bd353d9c1c447d949533ab557ba93b6d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:07:14 2025 +0200

    Update deploy-vercel.yml

commit 01b512b399ca7aed9f68aa08ea70f91d9a27c49e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:09:28 2025 +0200

    Update README.md

diff --git a/README.md b/README.md
index c95e614..3b3e077 100644
--- a/README.md
+++ b/README.md
@@ -1,29 +1,36 @@
-# BeatsMarket
+## Déploiement automatique avec GitHub Actions et Vercel
 
-Plateforme de vente de beats musicaux et services associés.
+Ce projet utilise un workflow GitHub Actions pour construire et déployer automatiquement l’application sur Vercel à chaque push sur la branche `main`.
 
-## Installation
+### Configuration requise
 
-1. Cloner le dépôt  
-2. Installer les dépendances avec `npm install` ou `yarn`  
-3. Lancer le serveur de développement avec `npm run dev`
+Avant de pouvoir déployer, il faut configurer les **secrets GitHub** dans les paramètres du dépôt (`Settings > Secrets and variables > Actions`) :
 
-## Technologies utilisées
+- `VERCEL_ORG_ID` : L’ID de l’organisation Vercel
+- `VERCEL_PROJECT_ID` : L’ID du projet Vercel
+- `VERCEL_TOKEN` : Le token d’accès personnel Vercel (à générer dans [https://vercel.com/account/tokens](https://vercel.com/account/tokens))
 
-- Next.js 13 (app directory)  
-- TypeScript  
-- Tailwind CSS  
-- React  
-- Stripe (paiement)  
-- ...
+### Workflow CI/CD
 
-## Structure
+Le fichier de workflow `.github/workflows/deploy-vercel.yml` contient les étapes suivantes :
 
-- `app/` : pages et composants  
-- `components/` : composants réutilisables  
-- `public/` : images et ressources statiques  
-- ...
+1. Checkout du code source
+2. Installation de Node.js
+3. Installation des dépendances (`npm ci`)
+4. Génération automatique de l’index des composants UI (`npm run generate-ui-index`)
+5. Build du projet Next.js (`npm run build`)
+6. Installation du CLI Vercel
+7. Déploiement sur Vercel en production
 
-## Développement
+### Déclenchement
 
-N’hésite pas à consulter la documentation officielle Next.js et Tailwind CSS.
+Le workflow se lance automatiquement à chaque push sur la branche `main`.
+
+---
+
+**Astuce** : Pour tester le déploiement, faites une modification et poussez-la sur `main`.  
+Les logs sont visibles dans l’onglet **Actions** de GitHub.
+
+---
+
+*Merci de garder les tokens secrets et de ne pas les exposer publiquement.*

commit b245a497749e20316a505cc459a67886bff1f1fa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:35:06 2025 +0200

    Create page.tsx

diff --git a/src/app/(admin)/superadmin/page.tsx b/src/app/(admin)/superadmin/page.tsx
new file mode 100644
index 0000000..4bab812
--- /dev/null
+++ b/src/app/(admin)/superadmin/page.tsx
@@ -0,0 +1,65 @@
+import React from "react"
+import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
+import { Button } from "@/components/ui/button"
+import { Bot, Settings, FileText, Users, Store } from "lucide-react"
+
+export default function SuperAdminPage() {
+  return (
+    <div className="min-h-screen bg-background p-6 text-foreground">
+      <h1 className="text-3xl font-bold mb-6">Panneau SuperAdmin BeatsMarket</h1>
+
+      <Tabs defaultValue="site" className="w-full">
+        <TabsList className="grid w-full grid-cols-5 mb-4">
+          <TabsTrigger value="site">
+            <Settings className="mr-2 h-4 w-4" /> Paramètres site
+          </TabsTrigger>
+          <TabsTrigger value="contenu">
+            <FileText className="mr-2 h-4 w-4" /> Pages & textes
+          </TabsTrigger>
+          <TabsTrigger value="comptes">
+            <Users className="mr-2 h-4 w-4" /> Comptes
+          </TabsTrigger>
+          <TabsTrigger value="services">
+            <Store className="mr-2 h-4 w-4" /> Services IA & Offres
+          </TabsTrigger>
+          <TabsTrigger value="assistant">
+            <Bot className="mr-2 h-4 w-4" /> Assistant IA
+          </TabsTrigger>
+        </TabsList>
+
+        <TabsContent value="site">
+          <p className="text-muted-foreground mb-4">Contrôle global du site : dark mode, langues, sécurité, backups, etc.</p>
+          {/* ⏳ Ici viendront les composants de configuration globale */}
+        </TabsContent>
+
+        <TabsContent value="contenu">
+          <p className="text-muted-foreground mb-4">Modifier les textes, sections, titres, etc. (avec éditeur visuel).</p>
+          {/* ⏳ Ici viendront les éditeurs WYSIWYG ou markdown pour toutes les pages publiques */}
+        </TabsContent>
+
+        <TabsContent value="comptes">
+          <p className="text-muted-foreground mb-4">Gérer les administrateurs, beatmakers et artistes.</p>
+          {/* ⏳ Tables dynamiques pour tous les utilisateurs, avec filtres et actions */}
+        </TabsContent>
+
+        <TabsContent value="services">
+          <p className="text-muted-foreground mb-4">Activer/désactiver les services IA, plans d’abonnement, promotions, etc.</p>
+          {/* ⏳ Cases à cocher, tableaux de prix, sliders de mise en avant */}
+        </TabsContent>
+
+        <TabsContent value="assistant">
+          <p className="text-muted-foreground mb-4">Assistant IA intégré pour t’aider à coder, modifier ou créer.</p>
+          <div className="border p-4 rounded-xl bg-muted">
+            <p className="mb-2 font-medium">Tu veux créer quelque chose ? Parle à ton assistant 👇</p>
+            <input
+              type="text"
+              placeholder="Ex: Ajoute un composant de galerie responsive"
+              className="w-full p-2 rounded-md border bg-background"
+            />
+            <Button className="mt-2">Envoyer</Button>
+          </div>
+        </TabsContent>
+      </Tabs>
+    </div>
+  )
+}

commit 62e6afdcd83e3e2b83c9c64ef9b54e33c7320653
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:36:10 2025 +0200

    Create page.tsx

diff --git a/app/admin/page.tsx b/app/admin/page.tsx
new file mode 100644
index 0000000..4ea6e97
--- /dev/null
+++ b/app/admin/page.tsx
@@ -0,0 +1,110 @@
+"use client"
+
+import React from "react"
+import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
+import { Card, CardContent } from "@/components/ui/card"
+import { Button } from "@/components/ui/button"
+import { Toggle } from "@/components/ui/toggle"
+import { Separator } from "@/components/ui/separator"
+import { Input } from "@/components/ui/input"
+import { Textarea } from "@/components/ui/textarea"
+import { BotIcon, Settings2Icon, LayoutDashboardIcon, WrenchIcon } from "lucide-react"
+
+export default function AdminPage() {
+  return (
+    <main className="p-6 space-y-8">
+      <h1 className="text-3xl font-bold">SuperAdmin – Configuration du Site</h1>
+
+      <Tabs defaultValue="contenu" className="space-y-4">
+        <TabsList className="w-full grid grid-cols-4 gap-2">
+          <TabsTrigger value="contenu">
+            <LayoutDashboardIcon className="mr-2 h-4 w-4" /> Contenu du site
+          </TabsTrigger>
+          <TabsTrigger value="services">
+            <WrenchIcon className="mr-2 h-4 w-4" /> Services IA
+          </TabsTrigger>
+          <TabsTrigger value="assistant">
+            <BotIcon className="mr-2 h-4 w-4" /> Assistant IA
+          </TabsTrigger>
+          <TabsTrigger value="systeme">
+            <Settings2Icon className="mr-2 h-4 w-4" /> Paramètres
+          </TabsTrigger>
+        </TabsList>
+
+        {/* Contenu du site */}
+        <TabsContent value="contenu">
+          <Card>
+            <CardContent className="space-y-6 p-6">
+              <h2 className="text-xl font-semibold">Textes et sections</h2>
+
+              <div className="space-y-2">
+                <label className="font-medium">Titre de la page d'accueil</label>
+                <Input defaultValue="Bienvenue sur BeatsMarket" />
+              </div>
+
+              <div className="space-y-2">
+                <label className="font-medium">Description “Pourquoi nous ?”</label>
+                <Textarea defaultValue="La plateforme numéro 1 pour acheter et vendre des beats dans le monde." />
+              </div>
+
+              <Button className="mt-4">Enregistrer</Button>
+            </CardContent>
+          </Card>
+        </TabsContent>
+
+        {/* Services IA */}
+        <TabsContent value="services">
+          <Card>
+            <CardContent className="space-y-6 p-6">
+              <h2 className="text-xl font-semibold">Activer/Désactiver les services IA</h2>
+              <div className="space-y-2">
+                <Toggle defaultPressed>Mastering IA</Toggle>
+                <Toggle defaultPressed>Cover Art IA</Toggle>
+                <Toggle defaultPressed>Recherche IA</Toggle>
+              </div>
+              <Button className="mt-4">Sauvegarder les services</Button>
+            </CardContent>
+          </Card>
+        </TabsContent>
+
+        {/* Assistant IA */}
+        <TabsContent value="assistant">
+          <Card>
+            <CardContent className="space-y-6 p-6">
+              <h2 className="text-xl font-semibold">Assistant intégré</h2>
+              <p className="text-muted-foreground">
+                Cet assistant peut vous aider à coder, générer du texte, corriger du contenu ou proposer des
+                améliorations.
+              </p>
+              <Textarea placeholder="Posez une question (ex: modifie la section footer en anglais)..." />
+              <Button className="mt-2">Lancer l'assistant</Button>
+            </CardContent>
+          </Card>
+        </TabsContent>
+
+        {/* Paramètres système */}
+        <TabsContent value="systeme">
+          <Card>
+            <CardContent className="space-y-6 p-6">
+              <h2 className="text-xl font-semibold">Paramètres du système</h2>
+
+              <div className="space-y-2">
+                <label className="font-medium">Email support</label>
+                <Input defaultValue="support@beatsmarket.fr" />
+              </div>
+
+              <div className="space-y-2">
+                <label className="font-medium">Nom du site</label>
+                <Input defaultValue="BeatsMarket" />
+              </div>
+
+              <Separator />
+
+              <Button>Mettre à jour</Button>
+            </CardContent>
+          </Card>
+        </TabsContent>
+      </Tabs>
+    </main>
+  )
+}

commit f23e4a4bc4576462aa06ec2dcef9f6f324f7f409
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:37:57 2025 +0200

    Update page.tsx

commit 39df848ab7ded2ec943079493e18c267d8f68cd7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:39:29 2025 +0200

    Create TextEditor.tsx

diff --git a/src/components/admin/TextEditor.tsx b/src/components/admin/TextEditor.tsx
new file mode 100644
index 0000000..877a1cf
--- /dev/null
+++ b/src/components/admin/TextEditor.tsx
@@ -0,0 +1,29 @@
+"use client"
+
+import React, { useState } from "react"
+import dynamic from "next/dynamic"
+
+// Chargement dynamique pour éviter les problèmes côté serveur
+const ReactQuill = dynamic(() => import("react-quill"), { ssr: false })
+import "react-quill/dist/quill.snow.css"
+
+interface TextEditorProps {
+  initialContent?: string
+  onSave: (content: string) => void
+}
+
+export default function TextEditor({ initialContent = "", onSave }: TextEditorProps) {
+  const [content, setContent] = useState(initialContent)
+
+  return (
+    <div>
+      <ReactQuill theme="snow" value={content} onChange={setContent} />
+      <button
+        onClick={() => onSave(content)}
+        className="mt-3 rounded bg-pink-600 px-4 py-2 text-white hover:bg-pink-700"
+      >
+        Sauvegarder
+      </button>
+    </div>
+  )
+}

commit e141bf7d82003fcbe19de2769b9a447e60fe4e90
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:40:27 2025 +0200

    Create AssistantIA.tsx

diff --git a/src/components/admin/AssistantIA.tsx b/src/components/admin/AssistantIA.tsx
new file mode 100644
index 0000000..cc377de
--- /dev/null
+++ b/src/components/admin/AssistantIA.tsx
@@ -0,0 +1,53 @@
+"use client"
+
+import React, { useState } from "react"
+
+export default function AssistantIA() {
+  const [input, setInput] = useState("")
+  const [response, setResponse] = useState<string | null>(null)
+  const [loading, setLoading] = useState(false)
+
+  async function handleSubmit() {
+    if (!input.trim()) return
+    setLoading(true)
+    setResponse(null)
+    try {
+      // Exemple : appel API fictif vers backend IA
+      const res = await fetch("/api/assistant-ia", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ prompt: input }),
+      })
+      const data = await res.json()
+      setResponse(data.reply)
+    } catch (err) {
+      setResponse("Erreur lors de la requête IA.")
+    } finally {
+      setLoading(false)
+    }
+  }
+
+  return (
+    <div>
+      <textarea
+        value={input}
+        onChange={e => setInput(e.target.value)}
+        placeholder="Demande à l'assistant IA..."
+        rows={4}
+        className="w-full rounded border p-2"
+      />
+      <button
+        onClick={handleSubmit}
+        disabled={loading}
+        className="mt-2 rounded bg-purple-600 px-4 py-2 text-white hover:bg-purple-700 disabled:opacity-50"
+      >
+        {loading ? "Chargement..." : "Envoyer"}
+      </button>
+      {response && (
+        <div className="mt-4 rounded border bg-gray-900 p-4 text-white whitespace-pre-wrap">
+          {response}
+        </div>
+      )}
+    </div>
+  )
+}

commit 7335107f08e1583b10bd514144a41b6b5582c201
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:42:37 2025 +0200

    Create page.tsx

diff --git a/src/app/admin/page.tsx b/src/app/admin/page.tsx
new file mode 100644
index 0000000..b0ccf36
--- /dev/null
+++ b/src/app/admin/page.tsx
@@ -0,0 +1,49 @@
+"use client"
+
+import React from "react"
+import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
+import TextEditor from "@/components/admin/TextEditor"
+import AssistantIA from "@/components/admin/AssistantIA"
+
+export default function AdminPage() {
+  return (
+    <main className="p-6 space-y-8">
+      <h1 className="text-3xl font-bold">SuperAdmin – Configuration du Site</h1>
+
+      <Tabs defaultValue="contenu" className="space-y-4">
+        <TabsList className="w-full grid grid-cols-4 gap-2">
+          <TabsTrigger value="contenu">Contenu du site</TabsTrigger>
+          <TabsTrigger value="services">Services IA</TabsTrigger>
+          <TabsTrigger value="assistant">Assistant IA</TabsTrigger>
+          <TabsTrigger value="systeme">Paramètres</TabsTrigger>
+        </TabsList>
+
+        {/* Contenu du site */}
+        <TabsContent value="contenu">
+          <TextEditor
+            initialContent="<h2>Bienvenue sur BeatsMarket</h2><p>Le meilleur site pour les beats.</p>"
+            onSave={(html) => {
+              // Sauvegarde côté backend ou state global
+              console.log("Contenu sauvegardé :", html)
+            }}
+          />
+        </TabsContent>
+
+        {/* Services IA */}
+        <TabsContent value="services">
+          <p>Gestion des services IA à venir...</p>
+        </TabsContent>
+
+        {/* Assistant IA */}
+        <TabsContent value="assistant">
+          <AssistantIA />
+        </TabsContent>
+
+        {/* Paramètres système */}
+        <TabsContent value="systeme">
+          <p>Paramètres du système à venir...</p>
+        </TabsContent>
+      </Tabs>
+    </main>
+  )
+}

commit 50d39064fdf1ae0fef28e003eb9e3bc7aa5704ac
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:43:53 2025 +0200

    Update TextEditor.tsx

commit 6d38e66ae29a08af27846c5bea6f6b7367ad99f6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:44:31 2025 +0200

    Update AssistantIA.tsx

commit 19199c644d2b4986e5fd275b38fab917bfc66bf1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:45:52 2025 +0200

    Create assistant-ia.ts

diff --git a/src/pages/api/assistant-ia.ts b/src/pages/api/assistant-ia.ts
new file mode 100644
index 0000000..386bb1f
--- /dev/null
+++ b/src/pages/api/assistant-ia.ts
@@ -0,0 +1,34 @@
+import type { NextApiRequest, NextApiResponse } from "next"
+import OpenAI from "openai"
+
+const openai = new OpenAI({
+  apiKey: process.env.OPENAI_API_KEY,
+})
+
+export default async function handler(req: NextApiRequest, res: NextApiResponse) {
+  if (req.method !== "POST") {
+    return res.status(405).json({ error: "Method not allowed" })
+  }
+
+  const { prompt } = req.body
+  if (!prompt || typeof prompt !== "string") {
+    return res.status(400).json({ error: "Invalid prompt" })
+  }
+
+  try {
+    const completion = await openai.chat.completions.create({
+      model: "gpt-4o-mini",
+      messages: [
+        { role: "system", content: "Tu es un assistant SuperAdmin BeatsMarket." },
+        { role: "user", content: prompt },
+      ],
+    })
+
+    const reply = completion.choices[0]?.message?.content ?? "Pas de réponse."
+
+    res.status(200).json({ reply })
+  } catch (error) {
+    console.error("OpenAI error:", error)
+    res.status(500).json({ error: "Erreur serveur OpenAI" })
+  }
+}

commit 2195b2b8a4605af882bd063c507a7ef64de219e0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 15:49:56 2025 +0200

    Create .env.local

diff --git a/.env.local b/.env.local
new file mode 100644
index 0000000..8b13789
--- /dev/null
+++ b/.env.local
@@ -0,0 +1 @@
+

commit 1d2504923494ae5af784962102c48618a712f6ee
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:07:24 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 8b13789..b41227f 100644
--- a/.env.local
+++ b/.env.local
@@ -1 +1,2 @@
 
+OPENAI_API_KEY=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

commit 5a9a1d88e13260e447eb07eb951961cfa5796c91
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:20:14 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index b41227f..139597f 100644
--- a/.env.local
+++ b/.env.local
@@ -1,2 +1,2 @@
 
-OPENAI_API_KEY=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
+

commit ff7b62a763512e11b61e08cf6ccf1e1700a608a6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:22:19 2025 +0200

    Create .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..34606bd
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,17 @@
+# Node modules
+node_modules/
+
+# Fichier d'environnement local (clé API)
+.env.local
+
+# Next.js build output
+.next/
+
+# Logs
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+
+# Fichiers système
+.DS_Store
+Thumbs.db

commit 9ea4bd34ecd836d04929a2aec07a492cf853b4f4
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:31:27 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 139597f..8b13789 100644
--- a/.env.local
+++ b/.env.local
@@ -1,2 +1 @@
 
-

commit 03cfe0e38bf80a012ffbc1a6760bb2c9da6cd5da
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:51:05 2025 +0200

    Create openai.js

diff --git a/pages/api/openai.js b/pages/api/openai.js
new file mode 100644
index 0000000..6a0d7f7
--- /dev/null
+++ b/pages/api/openai.js
@@ -0,0 +1,24 @@
+export default async function handler(req, res) {
+  const apiKey = process.env.OPENAI_API_KEY;
+
+  if (!apiKey) {
+    return res.status(500).json({ error: 'API key not configured' });
+  }
+
+  try {
+    const response = await fetch('https://api.openai.com/v1/models', {
+      headers: {
+        'Authorization': `Bearer ${apiKey}`
+      }
+    });
+
+    if (!response.ok) {
+      throw new Error(`OpenAI API error: ${response.statusText}`);
+    }
+
+    const data = await response.json();
+    res.status(200).json(data);
+  } catch (error) {
+    res.status(500).json({ error: error.message || 'Unknown error' });
+  }
+}

commit f344cab4930ce65f7f6ffb72880de38a6271bb59
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 16:53:22 2025 +0200

    Update openai.js

commit f9708e4ab3021169e5170c19ef3db2d5daf81a35
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:00:38 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 7e76eb9..0d3196c 100644
--- a/package.json
+++ b/package.json
@@ -1,21 +1,16 @@
 {
   "name": "beatsmarket",
   "version": "1.0.0",
-  "description": "Projet BeatsMarket",
-  "main": "index.js",
+  "private": true,
   "scripts": {
-    "generate-ui-index": "node hub/generate-ui-index.js",
-    "watch-ui-index": "nodemon --watch src/components/ui --ext tsx --exec \"npm run generate-ui-index\"",
-    "start": "next start",
     "dev": "next dev",
-    "build": "next build"
+    "build": "next build",
+    "start": "next start"
   },
   "dependencies": {
-    "react": "^18.2.0",
-    "react-dom": "^18.2.0",
-    "next": "^13.4.7"
-  },
-  "devDependencies": {
-    "nodemon": "^3.0.1"
+    "@shadcn/ui": "^1.0.0",
+    "next": "13.4.4",
+    "react": "18.2.0",
+    "react-dom": "18.2.0"
   }
 }

commit bd4030a13ef29a29c616c9135120e1664c506e6a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:33:40 2025 +0200

    Create superadmin.tsx

diff --git a/src/pages/admin/superadmin.tsx b/src/pages/admin/superadmin.tsx
new file mode 100644
index 0000000..985f0f5
--- /dev/null
+++ b/src/pages/admin/superadmin.tsx
@@ -0,0 +1,70 @@
+import React, { useState } from "react";
+
+export default function SuperAdminPage() {
+  const [sidebarOpen, setSidebarOpen] = useState(true);
+
+  return (
+    <div className="flex h-screen bg-gray-900 text-gray-100">
+      {/* Sidebar */}
+      <aside
+        className={`${
+          sidebarOpen ? "w-64" : "w-16"
+        } bg-gray-800 transition-width duration-300 flex flex-col`}
+      >
+        <div className="flex items-center justify-between px-4 py-3 border-b border-gray-700">
+          <h1 className="text-xl font-bold">SuperAdmin</h1>
+          <button
+            onClick={() => setSidebarOpen(!sidebarOpen)}
+            aria-label="Toggle sidebar"
+            className="text-gray-400 hover:text-gray-200 focus:outline-none"
+          >
+            {sidebarOpen ? "«" : "»"}
+          </button>
+        </div>
+        <nav className="flex-1 px-2 py-4 space-y-2 overflow-y-auto">
+          <a
+            href="/admin/superadmin"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Dashboard
+          </a>
+          <a
+            href="/admin/beatmakers"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Beatmakers
+          </a>
+          <a
+            href="/admin/artists"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Artistes
+          </a>
+          <a
+            href="/admin/settings"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Paramètres
+          </a>
+        </nav>
+      </aside>
+
+      {/* Main Content */}
+      <main className="flex-1 flex flex-col">
+        {/* Header */}
+        <header className="flex items-center justify-between bg-gray-800 px-6 py-4 border-b border-gray-700">
+          <h2 className="text-2xl font-semibold">Tableau de bord SuperAdmin</h2>
+          <button className="bg-pink-600 px-4 py-2 rounded hover:bg-pink-700">
+            Déconnexion
+          </button>
+        </header>
+
+        {/* Content */}
+        <section className="flex-1 p-6 overflow-auto">
+          <p>Bienvenue dans l’interface SuperAdmin de BeatsMarket.</p>
+          {/* Ici on intégrera plus tard l’assistant IA et les widgets */}
+        </section>
+      </main>
+    </div>
+  );
+}

commit 007f754aa8cf7280b90991a91be485b92b98e52f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:34:26 2025 +0200

    Update superadmin.tsx

diff --git a/src/pages/admin/superadmin.tsx b/src/pages/admin/superadmin.tsx
index 985f0f5..fbfe3fb 100644
--- a/src/pages/admin/superadmin.tsx
+++ b/src/pages/admin/superadmin.tsx
@@ -1,7 +1,53 @@
-import React, { useState } from "react";
+import React, { useState, useEffect, useRef } from "react";
+
+type Message = {
+  id: number;
+  sender: "admin" | "assistant";
+  text: string;
+};
 
 export default function SuperAdminPage() {
   const [sidebarOpen, setSidebarOpen] = useState(true);
+  const [messages, setMessages] = useState<Message[]>([]);
+  const [input, setInput] = useState("");
+  const messagesEndRef = useRef<HTMLDivElement>(null);
+
+  // Scroll automatique vers le bas quand un nouveau message arrive
+  useEffect(() => {
+    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
+  }, [messages]);
+
+  // Fonction pour envoyer un message
+  const sendMessage = async () => {
+    if (!input.trim()) return;
+
+    // Ajoute le message de l’admin
+    const newMessage: Message = {
+      id: Date.now(),
+      sender: "admin",
+      text: input.trim(),
+    };
+    setMessages((prev) => [...prev, newMessage]);
+    setInput("");
+
+    // Simuler une réponse IA (à remplacer par appel API OpenAI)
+    setTimeout(() => {
+      const responseMessage: Message = {
+        id: Date.now() + 1,
+        sender: "assistant",
+        text: `Réponse IA simulée pour : "${newMessage.text}"`,
+      };
+      setMessages((prev) => [...prev, responseMessage]);
+    }, 1000);
+  };
+
+  // Gestion Enter dans textarea
+  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
+    if (e.key === "Enter" && !e.shiftKey) {
+      e.preventDefault();
+      sendMessage();
+    }
+  };
 
   return (
     <div className="flex h-screen bg-gray-900 text-gray-100">
@@ -11,60 +57,4 @@ export default function SuperAdminPage() {
           sidebarOpen ? "w-64" : "w-16"
         } bg-gray-800 transition-width duration-300 flex flex-col`}
       >
-        <div className="flex items-center justify-between px-4 py-3 border-b border-gray-700">
-          <h1 className="text-xl font-bold">SuperAdmin</h1>
-          <button
-            onClick={() => setSidebarOpen(!sidebarOpen)}
-            aria-label="Toggle sidebar"
-            className="text-gray-400 hover:text-gray-200 focus:outline-none"
-          >
-            {sidebarOpen ? "«" : "»"}
-          </button>
-        </div>
-        <nav className="flex-1 px-2 py-4 space-y-2 overflow-y-auto">
-          <a
-            href="/admin/superadmin"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Dashboard
-          </a>
-          <a
-            href="/admin/beatmakers"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Beatmakers
-          </a>
-          <a
-            href="/admin/artists"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Artistes
-          </a>
-          <a
-            href="/admin/settings"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Paramètres
-          </a>
-        </nav>
-      </aside>
-
-      {/* Main Content */}
-      <main className="flex-1 flex flex-col">
-        {/* Header */}
-        <header className="flex items-center justify-between bg-gray-800 px-6 py-4 border-b border-gray-700">
-          <h2 className="text-2xl font-semibold">Tableau de bord SuperAdmin</h2>
-          <button className="bg-pink-600 px-4 py-2 rounded hover:bg-pink-700">
-            Déconnexion
-          </button>
-        </header>
-
-        {/* Content */}
-        <section className="flex-1 p-6 overflow-auto">
-          <p>Bienvenue dans l’interface SuperAdmin de BeatsMarket.</p>
-          {/* Ici on intégrera plus tard l’assistant IA et les widgets */}
-        </section>
-      </main>
-    </div>
-  );
-}
+        <div className="flex items-center justify-between px-4 py

commit 8a2b23db0f01de5b486e369f6ebe42ebba04e180
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:36:26 2025 +0200

    Update superadmin.tsx

diff --git a/src/pages/admin/superadmin.tsx b/src/pages/admin/superadmin.tsx
index fbfe3fb..dcaa1a0 100644
--- a/src/pages/admin/superadmin.tsx
+++ b/src/pages/admin/superadmin.tsx
@@ -12,36 +12,52 @@ export default function SuperAdminPage() {
   const [input, setInput] = useState("");
   const messagesEndRef = useRef<HTMLDivElement>(null);
 
-  // Scroll automatique vers le bas quand un nouveau message arrive
   useEffect(() => {
     messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
   }, [messages]);
 
-  // Fonction pour envoyer un message
   const sendMessage = async () => {
     if (!input.trim()) return;
 
-    // Ajoute le message de l’admin
-    const newMessage: Message = {
+    const userMessage: Message = {
       id: Date.now(),
       sender: "admin",
       text: input.trim(),
     };
-    setMessages((prev) => [...prev, newMessage]);
+
+    setMessages((prev) => [...prev, userMessage]);
     setInput("");
 
-    // Simuler une réponse IA (à remplacer par appel API OpenAI)
-    setTimeout(() => {
-      const responseMessage: Message = {
+    try {
+      const response = await fetch("/api/openai", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ prompt: userMessage.text }),
+      });
+
+      if (!response.ok) {
+        throw new Error(`Erreur API: ${response.statusText}`);
+      }
+
+      const data = await response.json();
+
+      const assistantMessage: Message = {
         id: Date.now() + 1,
         sender: "assistant",
-        text: `Réponse IA simulée pour : "${newMessage.text}"`,
+        text: data.response || "Pas de réponse reçue.",
       };
-      setMessages((prev) => [...prev, responseMessage]);
-    }, 1000);
+
+      setMessages((prev) => [...prev, assistantMessage]);
+    } catch (error) {
+      const errorMessage: Message = {
+        id: Date.now() + 2,
+        sender: "assistant",
+        text: `Erreur lors de la communication avec l'API: ${error.message}`,
+      };
+      setMessages((prev) => [...prev, errorMessage]);
+    }
   };
 
-  // Gestion Enter dans textarea
   const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
     if (e.key === "Enter" && !e.shiftKey) {
       e.preventDefault();
@@ -57,4 +73,94 @@ export default function SuperAdminPage() {
           sidebarOpen ? "w-64" : "w-16"
         } bg-gray-800 transition-width duration-300 flex flex-col`}
       >
-        <div className="flex items-center justify-between px-4 py
+        <div className="flex items-center justify-between px-4 py-3 border-b border-gray-700">
+          <h1 className="text-xl font-bold">SuperAdmin</h1>
+          <button
+            onClick={() => setSidebarOpen(!sidebarOpen)}
+            aria-label="Toggle sidebar"
+            className="text-gray-400 hover:text-gray-200 focus:outline-none"
+          >
+            {sidebarOpen ? "«" : "»"}
+          </button>
+        </div>
+        <nav className="flex-1 px-2 py-4 space-y-2 overflow-y-auto">
+          <a
+            href="/admin/superadmin"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Dashboard
+          </a>
+          <a
+            href="/admin/beatmakers"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Beatmakers
+          </a>
+          <a
+            href="/admin/artists"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Artistes
+          </a>
+          <a
+            href="/admin/settings"
+            className="block px-3 py-2 rounded hover:bg-gray-700"
+          >
+            Paramètres
+          </a>
+        </nav>
+      </aside>
+
+      {/* Main Content */}
+      <main className="flex-1 flex flex-col">
+        {/* Header */}
+        <header className="flex items-center justify-between bg-gray-800 px-6 py-4 border-b border-gray-700">
+          <h2 className="text-2xl font-semibold">Tableau de bord SuperAdmin</h2>
+          <button className="bg-pink-600 px-4 py-2 rounded hover:bg-pink-700">
+            Déconnexion
+          </button>
+        </header>
+
+        {/* Content */}
+        <section className="flex-1 p-6 overflow-auto flex flex-col">
+          <div className="flex-1 overflow-y-auto mb-4">
+            {messages.length === 0 && (
+              <p className="text-gray-400">Bienvenue dans l’assistant IA.</p>
+            )}
+            {messages.map((msg) => (
+              <div
+                key={msg.id}
+                className={`mb-2 max-w-xs px-3 py-2 rounded ${
+                  msg.sender === "admin"
+                    ? "bg-pink-600 self-end text-white"
+                    : "bg-gray-700 self-start text-gray-200"
+                }`}
+              >
+                {msg.text}
+              </div>
+            ))}
+            <div ref={messagesEndRef} />
+          </div>
+
+          <div className="flex">
+            <textarea
+              className="flex-1 resize-none rounded bg-gray-800 p-2 text-white focus:outline-none"
+              rows={2}
+              placeholder="Tapez un message, puis Entrée..."
+              value={input}
+              onChange={(e) => setInput(e.target.value)}
+              onKeyDown={handleKeyDown}
+            />
+            <button
+              onClick={sendMessage}
+              className="ml-2 bg-pink-600 px-4 py-2 rounded hover:bg-pink-700"
+              aria-label="Envoyer message"
+            >
+              Envoyer
+            </button>
+          </div>
+        </section>
+      </main>
+    </div>
+  );
+}

commit 34862352872beb7e038cdf0b8c467296b5b4dcd7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:38:08 2025 +0200

    Create openai.ts

diff --git a/src/pages/api/openai.ts b/src/pages/api/openai.ts
new file mode 100644
index 0000000..f062359
--- /dev/null
+++ b/src/pages/api/openai.ts
@@ -0,0 +1,47 @@
+import type { NextApiRequest, NextApiResponse } from "next";
+import { Configuration, OpenAIApi } from "openai";
+
+const configuration = new Configuration({
+  apiKey: process.env.OPENAI_API_KEY, // Ta clé stockée dans .env ou variables Vercel
+});
+
+const openai = new OpenAIApi(configuration);
+
+type Data = {
+  response?: string;
+  error?: string;
+};
+
+export default async function handler(
+  req: NextApiRequest,
+  res: NextApiResponse<Data>
+) {
+  if (req.method !== "POST") {
+    return res.status(405).json({ error: "Méthode non autorisée" });
+  }
+
+  const { prompt } = req.body;
+
+  if (!prompt || typeof prompt !== "string") {
+    return res.status(400).json({ error: "Le prompt est requis" });
+  }
+
+  try {
+    const completion = await openai.createChatCompletion({
+      model: "gpt-4o-mini", // Ou gpt-4o, gpt-3.5-turbo selon ce que tu as
+      messages: [{ role: "user", content: prompt }],
+      max_tokens: 500,
+    });
+
+    const aiResponse = completion.data.choices[0].message?.content || "";
+
+    res.status(200).json({ response: aiResponse });
+  } catch (error: any) {
+    res.status(500).json({
+      error:
+        error?.response?.data?.error?.message ||
+        error.message ||
+        "Erreur inconnue",
+    });
+  }
+}

commit 4e82441c6abb4158ab92e5afea37bcf89d553a70
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:41:04 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 0d3196c..cc014d4 100644
--- a/package.json
+++ b/package.json
@@ -8,9 +8,15 @@
     "start": "next start"
   },
   "dependencies": {
-    "@shadcn/ui": "^1.0.0",
-    "next": "13.4.4",
+    "next": "13.4.10",
     "react": "18.2.0",
-    "react-dom": "18.2.0"
+    "react-dom": "18.2.0",
+    "openai": "^4.12.0",
+    "tailwindcss": "^3.3.2",
+    "typescript": "^5.1.3"
+  },
+  "devDependencies": {
+    "@types/react": "^18.2.6",
+    "@types/node": "^20.2.5"
   }
 }

commit 29d19cdd6c014493d6e38a4affd6b5a3591fbac2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:43:49 2025 +0200

    Update openai.ts

diff --git a/src/pages/api/openai.ts b/src/pages/api/openai.ts
index f062359..80be8ca 100644
--- a/src/pages/api/openai.ts
+++ b/src/pages/api/openai.ts
@@ -2,7 +2,7 @@ import type { NextApiRequest, NextApiResponse } from "next";
 import { Configuration, OpenAIApi } from "openai";
 
 const configuration = new Configuration({
-  apiKey: process.env.OPENAI_API_KEY, // Ta clé stockée dans .env ou variables Vercel
+  apiKey: process.env.OPENAI_API_KEY,
 });
 
 const openai = new OpenAIApi(configuration);
@@ -28,7 +28,7 @@ export default async function handler(
 
   try {
     const completion = await openai.createChatCompletion({
-      model: "gpt-4o-mini", // Ou gpt-4o, gpt-3.5-turbo selon ce que tu as
+      model: "gpt-4o-mini",
       messages: [{ role: "user", content: prompt }],
       max_tokens: 500,
     });

commit e98ded25d08d848f7de28515fb7eb4eb9dc7d9e3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:44:59 2025 +0200

    Update superadmin.tsx

diff --git a/src/pages/admin/superadmin.tsx b/src/pages/admin/superadmin.tsx
index dcaa1a0..f0db0bb 100644
--- a/src/pages/admin/superadmin.tsx
+++ b/src/pages/admin/superadmin.tsx
@@ -67,7 +67,6 @@ export default function SuperAdminPage() {
 
   return (
     <div className="flex h-screen bg-gray-900 text-gray-100">
-      {/* Sidebar */}
       <aside
         className={`${
           sidebarOpen ? "w-64" : "w-16"
@@ -81,86 +80,4 @@ export default function SuperAdminPage() {
             className="text-gray-400 hover:text-gray-200 focus:outline-none"
           >
             {sidebarOpen ? "«" : "»"}
-          </button>
-        </div>
-        <nav className="flex-1 px-2 py-4 space-y-2 overflow-y-auto">
-          <a
-            href="/admin/superadmin"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Dashboard
-          </a>
-          <a
-            href="/admin/beatmakers"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Beatmakers
-          </a>
-          <a
-            href="/admin/artists"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Artistes
-          </a>
-          <a
-            href="/admin/settings"
-            className="block px-3 py-2 rounded hover:bg-gray-700"
-          >
-            Paramètres
-          </a>
-        </nav>
-      </aside>
-
-      {/* Main Content */}
-      <main className="flex-1 flex flex-col">
-        {/* Header */}
-        <header className="flex items-center justify-between bg-gray-800 px-6 py-4 border-b border-gray-700">
-          <h2 className="text-2xl font-semibold">Tableau de bord SuperAdmin</h2>
-          <button className="bg-pink-600 px-4 py-2 rounded hover:bg-pink-700">
-            Déconnexion
-          </button>
-        </header>
-
-        {/* Content */}
-        <section className="flex-1 p-6 overflow-auto flex flex-col">
-          <div className="flex-1 overflow-y-auto mb-4">
-            {messages.length === 0 && (
-              <p className="text-gray-400">Bienvenue dans l’assistant IA.</p>
-            )}
-            {messages.map((msg) => (
-              <div
-                key={msg.id}
-                className={`mb-2 max-w-xs px-3 py-2 rounded ${
-                  msg.sender === "admin"
-                    ? "bg-pink-600 self-end text-white"
-                    : "bg-gray-700 self-start text-gray-200"
-                }`}
-              >
-                {msg.text}
-              </div>
-            ))}
-            <div ref={messagesEndRef} />
-          </div>
-
-          <div className="flex">
-            <textarea
-              className="flex-1 resize-none rounded bg-gray-800 p-2 text-white focus:outline-none"
-              rows={2}
-              placeholder="Tapez un message, puis Entrée..."
-              value={input}
-              onChange={(e) => setInput(e.target.value)}
-              onKeyDown={handleKeyDown}
-            />
-            <button
-              onClick={sendMessage}
-              className="ml-2 bg-pink-600 px-4 py-2 rounded hover:bg-pink-700"
-              aria-label="Envoyer message"
-            >
-              Envoyer
-            </button>
-          </div>
-        </section>
-      </main>
-    </div>
-  );
-}
+          </button

commit 023207ac6b7860870bb1116ea733ce06d24c3ac3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:52:01 2025 +0200

    Create dashboard.tsx

diff --git a/src/pages/admin/superadmin/dashboard.tsx b/src/pages/admin/superadmin/dashboard.tsx
new file mode 100644
index 0000000..9d041e0
--- /dev/null
+++ b/src/pages/admin/superadmin/dashboard.tsx
@@ -0,0 +1,91 @@
+import React, { useEffect, useState } from "react";
+import { Line } from "react-chartjs-2";
+import {
+  Chart as ChartJS,
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend,
+} from "chart.js";
+
+ChartJS.register(
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend
+);
+
+type KPI = {
+  label: string;
+  value: number | string;
+  icon?: React.ReactNode;
+};
+
+export default function SuperAdminDashboard() {
+  const [kpis, setKpis] = useState<KPI[]>([]);
+  const [monthlyRevenue, setMonthlyRevenue] = useState<number[]>([]);
+
+  useEffect(() => {
+    // Simuler fetch des données, remplacer par API réelle
+    setKpis([
+      { label: "Chiffre d'affaires total", value: "45 000 €" },
+      { label: "Utilisateurs actifs", value: 1245 },
+      { label: "Ventes récentes", value: 38 },
+    ]);
+
+    setMonthlyRevenue([3000, 2500, 3200, 4000, 4200, 4800, 4700, 5000, 5200, 5800, 6000, 6500]);
+  }, []);
+
+  const data = {
+    labels: [
+      "Jan", "Fév", "Mar", "Avr", "Mai", "Juin",
+      "Juil", "Août", "Sep", "Oct", "Nov", "Déc"
+    ],
+    datasets: [
+      {
+        label: "CA mensuel (€)",
+        data: monthlyRevenue,
+        borderColor: "rgba(236, 72, 153, 1)", // rose vif
+        backgroundColor: "rgba(236, 72, 153, 0.3)",
+        fill: true,
+        tension: 0.3,
+      },
+    ],
+  };
+
+  const options = {
+    responsive: true,
+    plugins: {
+      legend: { display: true, position: "top" as const },
+      title: { display: true, text: "Évolution du CA sur 12 mois" },
+    },
+  };
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 h-full">
+      <h1 className="text-3xl font-bold mb-6">Dashboard SuperAdmin</h1>
+
+      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
+        {kpis.map((kpi) => (
+          <div
+            key={kpi.label}
+            className="bg-gray-800 p-4 rounded shadow flex flex-col items-center"
+          >
+            <div className="text-xl font-semibold">{kpi.value}</div>
+            <div className="text-gray-400 mt-1">{kpi.label}</div>
+          </div>
+        ))}
+      </div>
+
+      <div className="bg-gray-800 p-4 rounded shadow">
+        <Line data={data} options={options} />
+      </div>
+    </div>
+  );
+}

commit be389ac8e4bef71a48ab2a0dfbc96abd95f42ba7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:53:00 2025 +0200

    Create finance.tsx

diff --git a/src/pages/admin/superadmin/finance.tsx b/src/pages/admin/superadmin/finance.tsx
new file mode 100644
index 0000000..43cfa6e
--- /dev/null
+++ b/src/pages/admin/superadmin/finance.tsx
@@ -0,0 +1,131 @@
+import React, { useEffect, useState } from "react";
+
+type FinanceRecord = {
+  month: string;
+  tva: number;           // en euros
+  commissions: number;   // en euros
+  reversements: number;  // en euros
+};
+
+type Invoice = {
+  id: string;
+  date: string;
+  user: string;
+  amount: number;
+  pdfUrl: string; // url ou chemin fichier PDF
+};
+
+export default function SuperAdminFinance() {
+  const [financeData, setFinanceData] = useState<FinanceRecord[]>([]);
+  const [invoices, setInvoices] = useState<Invoice[]>([]);
+  const [selectedMonth, setSelectedMonth] = useState<string>("");
+
+  useEffect(() => {
+    // Simuler fetch des données finance
+    setFinanceData([
+      { month: "Janvier 2025", tva: 4000, commissions: 9000, reversements: 35000 },
+      { month: "Février 2025", tva: 3500, commissions: 8500, reversements: 32000 },
+      { month: "Mars 2025", tva: 4200, commissions: 9200, reversements: 38000 },
+    ]);
+
+    // Simuler fetch factures
+    setInvoices([
+      { id: "F001", date: "2025-03-05", user: "Beatmaker1", amount: 120, pdfUrl: "/factures/F001.pdf" },
+      { id: "F002", date: "2025-03-07", user: "Beatmaker2", amount: 300, pdfUrl: "/factures/F002.pdf" },
+      { id: "F003", date: "2025-03-10", user: "Beatmaker3", amount: 180, pdfUrl: "/factures/F003.pdf" },
+    ]);
+  }, []);
+
+  // Filtrer factures par mois sélectionné
+  const filteredInvoices = selectedMonth
+    ? invoices.filter(inv => inv.date.startsWith(selectedMonth.split(" ")[0].slice(0, 3)))
+    : invoices;
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 min-h-screen">
+      <h1 className="text-3xl font-bold mb-6">Finance & Factures</h1>
+
+      <h2 className="text-xl mb-4">Résumé mensuel</h2>
+      <table className="w-full mb-8 text-left border-collapse border border-gray-700">
+        <thead>
+          <tr className="bg-gray-800">
+            <th className="p-3 border border-gray-700">Mois</th>
+            <th className="p-3 border border-gray-700">TVA collectée (€)</th>
+            <th className="p-3 border border-gray-700">Commissions (€)</th>
+            <th className="p-3 border border-gray-700">Reversements (€)</th>
+          </tr>
+        </thead>
+        <tbody>
+          {financeData.map(({ month, tva, commissions, reversements }) => (
+            <tr
+              key={month}
+              className={`cursor-pointer hover:bg-gray-800 ${
+                selectedMonth === month ? "bg-gray-700" : ""
+              }`}
+              onClick={() => setSelectedMonth(month === selectedMonth ? "" : month)}
+            >
+              <td className="p-3 border border-gray-700">{month}</td>
+              <td className="p-3 border border-gray-700">{tva.toLocaleString()}</td>
+              <td className="p-3 border border-gray-700">{commissions.toLocaleString()}</td>
+              <td className="p-3 border border-gray-700">{reversements.toLocaleString()}</td>
+            </tr>
+          ))}
+        </tbody>
+      </table>
+
+      {selectedMonth && (
+        <>
+          <h2 className="text-xl mb-4">Factures pour {selectedMonth}</h2>
+          <table className="w-full mb-6 text-left border-collapse border border-gray-700">
+            <thead>
+              <tr className="bg-gray-800">
+                <th className="p-3 border border-gray-700">ID</th>
+                <th className="p-3 border border-gray-700">Date</th>
+                <th className="p-3 border border-gray-700">Utilisateur</th>
+                <th className="p-3 border border-gray-700">Montant (€)</th>
+                <th className="p-3 border border-gray-700">Télécharger</th>
+              </tr>
+            </thead>
+            <tbody>
+              {filteredInvoices.length ? (
+                filteredInvoices.map(({ id, date, user, amount, pdfUrl }) => (
+                  <tr key={id} className="hover:bg-gray-800">
+                    <td className="p-3 border border-gray-700">{id}</td>
+                    <td className="p-3 border border-gray-700">{date}</td>
+                    <td className="p-3 border border-gray-700">{user}</td>
+                    <td className="p-3 border border-gray-700">{amount.toLocaleString()}</td>
+                    <td className="p-3 border border-gray-700">
+                      <a
+                        href={pdfUrl}
+                        target="_blank"
+                        rel="noopener noreferrer"
+                        className="text-pink-500 hover:underline"
+                        download
+                      >
+                        PDF
+                      </a>
+                    </td>
+                  </tr>
+                ))
+              ) : (
+                <tr>
+                  <td colSpan={5} className="p-3 text-center">
+                    Aucune facture pour ce mois.
+                  </td>
+                </tr>
+              )}
+            </tbody>
+          </table>
+
+          {/* Bouton pour télécharger un ZIP global : à implémenter côté backend */}
+          <button
+            className="bg-pink-600 hover:bg-pink-700 text-white px-4 py-2 rounded"
+            onClick={() => alert("Fonction ZIP global à implémenter")}
+          >
+            Télécharger toutes les factures (ZIP)
+          </button>
+        </>
+      )}
+    </div>
+  );
+}

commit 14922a0816d905c35e52ab611e3cc5dd7c6d92b0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:54:03 2025 +0200

    Create content-manager.tsx

diff --git a/src/pages/admin/superadmin/content-manager.tsx b/src/pages/admin/superadmin/content-manager.tsx
new file mode 100644
index 0000000..20aef91
--- /dev/null
+++ b/src/pages/admin/superadmin/content-manager.tsx
@@ -0,0 +1,83 @@
+import React, { useEffect, useState } from "react";
+
+type PageContent = {
+  id: string;
+  page: string;
+  section: string;
+  content: string; // Markdown ou HTML simple
+};
+
+export default function ContentManager() {
+  const [contents, setContents] = useState<PageContent[]>([]);
+  const [editingId, setEditingId] = useState<string | null>(null);
+  const [editContent, setEditContent] = useState<string>("");
+
+  useEffect(() => {
+    // Simuler fetch contenu pages
+    setContents([
+      { id: "1", page: "Accueil", section: "Titre principal", content: "Bienvenue sur BeatsMarket" },
+      { id: "2", page: "Accueil", section: "Sous-titre", content: "Le meilleur marché de beats" },
+      { id: "3", page: "À propos", section: "Présentation", content: "Notre mission est de ..." },
+    ]);
+  }, []);
+
+  const startEdit = (id: string, currentContent: string) => {
+    setEditingId(id);
+    setEditContent(currentContent);
+  };
+
+  const saveEdit = () => {
+    if (!editingId) return;
+    setContents((prev) =>
+      prev.map((item) =>
+        item.id === editingId ? { ...item, content: editContent } : item
+      )
+    );
+    setEditingId(null);
+  };
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 min-h-screen">
+      <h1 className="text-3xl font-bold mb-6">Gestionnaire de contenu</h1>
+
+      {contents.map(({ id, page, section, content }) => (
+        <div key={id} className="mb-6 p-4 bg-gray-800 rounded shadow">
+          <h2 className="text-xl font-semibold mb-2">{page} — {section}</h2>
+          {editingId === id ? (
+            <>
+              <textarea
+                className="w-full h-24 p-2 rounded bg-gray-700 text-gray-100"
+                value={editContent}
+                onChange={(e) => setEditContent(e.target.value)}
+              />
+              <div className="mt-2">
+                <button
+                  onClick={saveEdit}
+                  className="bg-pink-600 hover:bg-pink-700 text-white px-3 py-1 rounded mr-2"
+                >
+                  Sauvegarder
+                </button>
+                <button
+                  onClick={() => setEditingId(null)}
+                  className="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded"
+                >
+                  Annuler
+                </button>
+              </div>
+            </>
+          ) : (
+            <>
+              <div className="mb-2 whitespace-pre-wrap">{content}</div>
+              <button
+                onClick={() => startEdit(id, content)}
+                className="bg-pink-600 hover:bg-pink-700 text-white px-3 py-1 rounded"
+              >
+                Modifier
+              </button>
+            </>
+          )}
+        </div>
+      ))}
+    </div>
+  );
+}

commit e2f50c5639b4e1d0bdfbd356ef212c9607e9de95
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:55:21 2025 +0200

    Create index.tsx

diff --git a/src/pages/admin/beatmakers/index.tsx b/src/pages/admin/beatmakers/index.tsx
new file mode 100644
index 0000000..0ad9628
--- /dev/null
+++ b/src/pages/admin/beatmakers/index.tsx
@@ -0,0 +1,77 @@
+import React, { useEffect, useState } from "react";
+
+type Beatmaker = {
+  id: string;
+  pseudo: string;
+  email: string;
+  statut: "Actif" | "Suspendu" | "En attente";
+};
+
+export default function AdminBeatmakers() {
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>([]);
+
+  useEffect(() => {
+    // Simuler fetch des beatmakers
+    setBeatmakers([
+      { id: "1", pseudo: "BeatMaster", email: "beatmaster@example.com", statut: "Actif" },
+      { id: "2", pseudo: "SoundKing", email: "soundking@example.com", statut: "En attente" },
+      { id: "3", pseudo: "RhythmQueen", email: "rhythmqueen@example.com", statut: "Suspendu" },
+    ]);
+  }, []);
+
+  const changeStatus = (id: string, newStatus: Beatmaker["statut"]) => {
+    setBeatmakers((prev) =>
+      prev.map((bm) => (bm.id === id ? { ...bm, statut: newStatus } : bm))
+    );
+  };
+
+  const deleteBeatmaker = (id: string) => {
+    if (window.confirm("Voulez-vous vraiment supprimer ce beatmaker ? Cette action est irréversible.")) {
+      setBeatmakers((prev) => prev.filter((bm) => bm.id !== id));
+    }
+  };
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 min-h-screen">
+      <h1 className="text-3xl font-bold mb-6">Gestion des Beatmakers</h1>
+
+      <table className="w-full border-collapse border border-gray-700">
+        <thead>
+          <tr className="bg-gray-800">
+            <th className="p-3 border border-gray-700">Pseudo</th>
+            <th className="p-3 border border-gray-700">Email</th>
+            <th className="p-3 border border-gray-700">Statut</th>
+            <th className="p-3 border border-gray-700">Actions</th>
+          </tr>
+        </thead>
+        <tbody>
+          {beatmakers.map(({ id, pseudo, email, statut }) => (
+            <tr key={id} className="hover:bg-gray-800">
+              <td className="p-3 border border-gray-700">{pseudo}</td>
+              <td className="p-3 border border-gray-700">{email}</td>
+              <td className="p-3 border border-gray-700">
+                <select
+                  value={statut}
+                  onChange={(e) => changeStatus(id, e.target.value as Beatmaker["statut"])}
+                  className="bg-gray-700 text-gray-100 p-1 rounded"
+                >
+                  <option>Actif</option>
+                  <option>Suspendu</option>
+                  <option>En attente</option>
+                </select>
+              </td>
+              <td className="p-3 border border-gray-700">
+                <button
+                  onClick={() => deleteBeatmaker(id)}
+                  className="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded"
+                >
+                  Supprimer
+                </button>
+              </td>
+            </tr>
+          ))}
+        </tbody>
+      </table>
+    </div>
+  );
+}

commit efe93031f03151449479271ee8fe4cce11770079
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:57:24 2025 +0200

    Create [id].tsx

diff --git a/src/pages/admin/beatmakers/[id].tsx b/src/pages/admin/beatmakers/[id].tsx
new file mode 100644
index 0000000..6a6494a
--- /dev/null
+++ b/src/pages/admin/beatmakers/[id].tsx
@@ -0,0 +1,133 @@
+import React, { useEffect, useState } from "react";
+import { useRouter } from "next/router";
+
+type Beat = {
+  id: string;
+  title: string;
+  statut: "Publié" | "En attente" | "Refusé";
+  misesEnAvant: number;
+  ventes: number;
+};
+
+type BeatmakerDetail = {
+  id: string;
+  pseudo: string;
+  email: string;
+  abonnement: string;
+  servicesIA: {
+    mastering: boolean;
+    cover: boolean;
+  };
+  stats: {
+    vues: number;
+    ventesTotales: number;
+    gains: number;
+  };
+  beats: Beat[];
+};
+
+export default function BeatmakerDetailAdmin() {
+  const router = useRouter();
+  const { id } = router.query;
+
+  const [beatmaker, setBeatmaker] = useState<BeatmakerDetail | null>(null);
+
+  useEffect(() => {
+    if (!id) return;
+
+    // Simuler fetch données beatmaker
+    setBeatmaker({
+      id: id as string,
+      pseudo: "BeatMaster",
+      email: "beatmaster@example.com",
+      abonnement: "Or",
+      servicesIA: { mastering: true, cover: false },
+      stats: { vues: 12000, ventesTotales: 320, gains: 4500 },
+      beats: [
+        { id: "b1", title: "Flow Supreme", statut: "Publié", misesEnAvant: 3, ventes: 25 },
+        { id: "b2", title: "Chill Vibes", statut: "En attente", misesEnAvant: 0, ventes: 0 },
+      ],
+    });
+  }, [id]);
+
+  if (!beatmaker) return <div>Chargement...</div>;
+
+  const toggleService = (service: "mastering" | "cover") => {
+    setBeatmaker((prev) =>
+      prev
+        ? {
+            ...prev,
+            servicesIA: {
+              ...prev.servicesIA,
+              [service]: !prev.servicesIA[service],
+            },
+          }
+        : null
+    );
+  };
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 min-h-screen">
+      <h1 className="text-3xl font-bold mb-6">Détail Beatmaker : {beatmaker.pseudo}</h1>
+
+      <section className="mb-8">
+        <h2 className="text-xl font-semibold mb-4">Infos générales</h2>
+        <p>Email : {beatmaker.email}</p>
+        <p>Abonnement : {beatmaker.abonnement}</p>
+      </section>
+
+      <section className="mb-8">
+        <h2 className="text-xl font-semibold mb-4">Services IA</h2>
+        <label className="inline-flex items-center mr-6">
+          <input
+            type="checkbox"
+            checked={beatmaker.servicesIA.mastering}
+            onChange={() => toggleService("mastering")}
+            className="mr-2"
+          />
+          Mastering IA
+        </label>
+        <label className="inline-flex items-center">
+          <input
+            type="checkbox"
+            checked={beatmaker.servicesIA.cover}
+            onChange={() => toggleService("cover")}
+            className="mr-2"
+          />
+          Cover IA
+        </label>
+      </section>
+
+      <section className="mb-8">
+        <h2 className="text-xl font-semibold mb-4">Statistiques</h2>
+        <p>Vues : {beatmaker.stats.vues}</p>
+        <p>Ventes totales : {beatmaker.stats.ventesTotales}</p>
+        <p>Gains : {beatmaker.stats.gains} €</p>
+      </section>
+
+      <section>
+        <h2 className="text-xl font-semibold mb-4">Beats</h2>
+        <table className="w-full border-collapse border border-gray-700">
+          <thead>
+            <tr className="bg-gray-800">
+              <th className="p-3 border border-gray-700">Titre</th>
+              <th className="p-3 border border-gray-700">Statut</th>
+              <th className="p-3 border border-gray-700">Mises en avant</th>
+              <th className="p-3 border border-gray-700">Ventes</th>
+            </tr>
+          </thead>
+          <tbody>
+            {beatmaker.beats.map(({ id, title, statut, misesEnAvant, ventes }) => (
+              <tr key={id} className="hover:bg-gray-800">
+                <td className="p-3 border border-gray-700">{title}</td>
+                <td className="p-3 border border-gray-700">{statut}</td>
+                <td className="p-3 border border-gray-700">{misesEnAvant}</td>
+                <td className="p-3 border border-gray-700">{ventes}</td>
+              </tr>
+            ))}
+          </tbody>
+        </table>
+      </section>
+    </div>
+  );
+}

commit ed4c4b10afcb4347ef2518eebc634e00365e6a9d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 17:59:45 2025 +0200

    Create [beatId].tsx

diff --git a/src/pages/admin/beatmakers/edit-beat/[beatId].tsx b/src/pages/admin/beatmakers/edit-beat/[beatId].tsx
new file mode 100644
index 0000000..2ca518b
--- /dev/null
+++ b/src/pages/admin/beatmakers/edit-beat/[beatId].tsx
@@ -0,0 +1,130 @@
+import React, { useState, useEffect } from "react";
+import { useRouter } from "next/router";
+
+type License = {
+  id: string;
+  name: string;
+  description: string;
+  basePrice: number; // prix conseillé ou par défaut
+};
+
+type LicenseWithPrice = License & {
+  price: number | "";
+  netGain: number;
+};
+
+const LICENSES: License[] = [
+  {
+    id: "basique_mp3",
+    name: "Licence Basique MP3",
+    description: "Licence non exclusive, fichiers MP3 inclus",
+    basePrice: 20,
+  },
+  {
+    id: "premium_wav",
+    name: "Licence Premium WAV",
+    description: "Licence non exclusive, fichiers WAV inclus",
+    basePrice: 50,
+  },
+  {
+    id: "exclusive",
+    name: "Licence Exclusive",
+    description: "Licence exclusive, droits totaux cédés",
+    basePrice: 200,
+  },
+  {
+    id: "exclusive_stems",
+    name: "Licence Exclusive + Stems",
+    description: "Licence exclusive avec pistes multipistes (stems)",
+    basePrice: 300,
+  },
+];
+
+const COMMISSION_RATE = 0.15; // 15%
+const TVA_RATE = 0.20; // 20%
+
+export default function EditBeat() {
+  const router = useRouter();
+  const { beatId } = router.query;
+
+  const [licenses, setLicenses] = useState<LicenseWithPrice[]>([]);
+
+  useEffect(() => {
+    // Initialiser avec basePrice, prix vide, netGain 0
+    const initLicenses = LICENSES.map((lic) => ({
+      ...lic,
+      price: "",
+      netGain: 0,
+    }));
+    setLicenses(initLicenses);
+  }, []);
+
+  const handlePriceChange = (id: string, value: string) => {
+    const priceNum = parseFloat(value);
+    setLicenses((prev) =>
+      prev.map((lic) => {
+        if (lic.id === id) {
+          const validPrice = !isNaN(priceNum) && priceNum >= 0 ? priceNum : "";
+          const netGain =
+            typeof validPrice === "number"
+              ? validPrice * (1 - COMMISSION_RATE) / (1 + TVA_RATE)
+              : 0;
+          return { ...lic, price: validPrice, netGain };
+        }
+        return lic;
+      })
+    );
+  };
+
+  const handleSave = () => {
+    // Ici tu peux appeler API pour sauvegarder les prix des licences
+    alert("Prix des licences sauvegardés (simulation) !");
+  };
+
+  return (
+    <div className="p-6 bg-gray-900 text-gray-100 min-h-screen max-w-4xl mx-auto">
+      <h1 className="text-3xl font-bold mb-6">Édition du Beat {beatId}</h1>
+
+      <table className="w-full border-collapse border border-gray-700">
+        <thead>
+          <tr className="bg-gray-800">
+            <th className="p-3 border border-gray-700">Licence</th>
+            <th className="p-3 border border-gray-700">Description</th>
+            <th className="p-3 border border-gray-700">Prix (€)</th>
+            <th className="p-3 border border-gray-700">Gains nets estimés (€)</th>
+          </tr>
+        </thead>
+        <tbody>
+          {licenses.map(({ id, name, description, price, netGain }) => (
+            <tr key={id} className="hover:bg-gray-800">
+              <td className="p-3 border border-gray-700 font-semibold">{name}</td>
+              <td className="p-3 border border-gray-700">{description}</td>
+              <td className="p-3 border border-gray-700">
+                <input
+                  type="number"
+                  min="0"
+                  step="0.01"
+                  value={price === "" ? "" : price}
+                  onChange={(e) => handlePriceChange(id, e.target.value)}
+                  className="bg-gray-700 text-gray-100 rounded px-2 py-1 w-24"
+                />
+              </td>
+              <td className="p-3 border border-gray-700 text-right">
+                {netGain > 0 ? netGain.toFixed(2) : "-"}
+              </td>
+            </tr>
+          ))}
+        </tbody>
+      </table>
+
+      <div className="mt-6">
+        <button
+          onClick={handleSave}
+          className="bg-pink-600 hover:bg-pink-700 px-6 py-2 rounded text-white font-bold"
+        >
+          Sauvegarder les prix
+        </button>
+      </div>
+    </div>
+  );
+}

commit 7c2ac5f8e27ff0093a21c41ecb299d7fbe8f84e2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:01:44 2025 +0200

    Create EditBeatForm.tsx

diff --git a/components/dashboard/beatmaker/EditBeatForm.tsx b/components/dashboard/beatmaker/EditBeatForm.tsx
new file mode 100644
index 0000000..4069b01
--- /dev/null
+++ b/components/dashboard/beatmaker/EditBeatForm.tsx
@@ -0,0 +1,70 @@
+import React, { useState, useEffect } from "react"
+import { Card, CardContent } from "@/components/ui/card"
+import { Input } from "@/components/ui/input"
+import { Label } from "@/components/ui/label"
+import { Badge } from "@/components/ui/badge"
+import { Separator } from "@/components/ui/separator"
+import { calculateEarnings } from "@/lib/utils"
+import type { BeatLicense } from "@/types"
+
+interface EditBeatFormProps {
+  licenses: BeatLicense[]
+  defaultPrices: { [key: string]: number }
+  onPriceChange: (updated: { [key: string]: number }) => void
+}
+
+export default function EditBeatForm({
+  licenses,
+  defaultPrices,
+  onPriceChange,
+}: EditBeatFormProps) {
+  const [prices, setPrices] = useState(defaultPrices)
+  const [earnings, setEarnings] = useState<{ [key: string]: number }>({})
+
+  useEffect(() => {
+    const updatedEarnings: { [key: string]: number } = {}
+    licenses.forEach((license) => {
+      const price = prices[license.id] || 0
+      updatedEarnings[license.id] = calculateEarnings(price)
+    })
+    setEarnings(updatedEarnings)
+    onPriceChange(prices)
+  }, [prices])
+
+  const handleChange = (licenseId: string, value: string) => {
+    const price = parseFloat(value)
+    if (!isNaN(price)) {
+      setPrices((prev) => ({
+        ...prev,
+        [licenseId]: price,
+      }))
+    }
+  }
+
+  return (
+    <Card className="w-full">
+      <CardContent className="grid gap-4 p-4">
+        {licenses.map((license) => (
+          <div key={license.id} className="grid gap-2">
+            <Label htmlFor={`price-${license.id}`}>
+              {license.name}
+            </Label>
+            <Input
+              id={`price-${license.id}`}
+              type="number"
+              value={prices[license.id] ?? ""}
+              placeholder="Prix en €"
+              onChange={(e) => handleChange(license.id, e.target.value)}
+            />
+            <div className="text-sm text-muted-foreground">
+              <Badge variant="outline">
+                Gain estimé : {earnings[license.id]?.toFixed(2)} €
+              </Badge>
+            </div>
+            <Separator />
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}

commit d608a2a9692e27994890774ff8c35eccf02c45da
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:04:55 2025 +0200

    Create calculateEarnings.ts

diff --git a/lib/utils/calculateEarnings.ts b/lib/utils/calculateEarnings.ts
new file mode 100644
index 0000000..964d917
--- /dev/null
+++ b/lib/utils/calculateEarnings.ts
@@ -0,0 +1,24 @@
+interface CalculateEarningsOptions {
+  priceTTC: number
+  promoPercentage?: number // entre 0 et 100, ex: 20 pour -20%
+}
+
+export function calculateEarnings({
+  priceTTC,
+  promoPercentage = 0,
+}: CalculateEarningsOptions): number {
+  const tvaRate = 0.2 // TVA 20%
+  const commissionRate = 0.15 // Commission BeatsMarket 15%
+  const stripeFixedFee = 0.25 // Stripe fixe
+  const stripePercentFee = 0.017 // Stripe 1.7%
+
+  // Application de la promo éventuelle
+  const discountedPrice = priceTTC * (1 - promoPercentage / 100)
+
+  const priceHT = discountedPrice / (1 + tvaRate)
+  const commission = priceHT * commissionRate
+  const stripeFees = stripeFixedFee + discountedPrice * stripePercentFee
+  const earnings = priceHT - commission - stripeFees
+
+  return Math.max(0, Math.round(earnings * 100) / 100)
+}

commit f24cf83751165d52d578b30081725fcc79592be1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:10:10 2025 +0200

    Create EditLicensesTable.tsx

diff --git a/src/app/beatmaker/beats/[beatId]/components/EditLicensesTable.tsx b/src/app/beatmaker/beats/[beatId]/components/EditLicensesTable.tsx
new file mode 100644
index 0000000..070bab0
--- /dev/null
+++ b/src/app/beatmaker/beats/[beatId]/components/EditLicensesTable.tsx
@@ -0,0 +1,103 @@
+"use client"
+
+import { useEffect, useState } from "react"
+import { Input } from "@/components/ui/input"
+import { Label } from "@/components/ui/label"
+import { Card, CardContent } from "@/components/ui/card"
+import { calculateNetRevenue } from "@/lib/revenueCalculator"
+import { BeatmakerPlan } from "@/lib/constants"
+
+interface LicensePrice {
+  name: string
+  price: number | ""
+}
+
+interface EditLicensesTableProps {
+  defaultPrices?: Record<string, number>
+  beatmakerPlan: BeatmakerPlan
+  promoPercent: number // entre 0 et 100 (ex : 20 pour -20%)
+}
+
+export default function EditLicensesTable({
+  defaultPrices = {},
+  beatmakerPlan,
+  promoPercent = 0,
+}: EditLicensesTableProps) {
+  const [licenses, setLicenses] = useState<LicensePrice[]>([
+    { name: "MP3", price: defaultPrices["MP3"] ?? "" },
+    { name: "WAV", price: defaultPrices["WAV"] ?? "" },
+    { name: "Exclusive", price: defaultPrices["Exclusive"] ?? "" },
+    { name: "Stems", price: defaultPrices["Stems"] ?? "" },
+  ])
+
+  const [estimates, setEstimates] = useState<Record<string, string>>({})
+
+  useEffect(() => {
+    const newEstimates: Record<string, string> = {}
+
+    licenses.forEach((license) => {
+      if (license.price !== "") {
+        const net = calculateNetRevenue({
+          price: Number(license.price),
+          plan: beatmakerPlan,
+          promoPercent,
+        })
+
+        newEstimates[license.name] = net.toFixed(2) + " €"
+      } else {
+        newEstimates[license.name] = "-"
+      }
+    })
+
+    setEstimates(newEstimates)
+  }, [licenses, beatmakerPlan, promoPercent])
+
+  const handleChange = (index: number, value: string) => {
+    const newLicenses = [...licenses]
+    const price = parseFloat(value)
+    newLicenses[index].price = isNaN(price) ? "" : price
+    setLicenses(newLicenses)
+  }
+
+  return (
+    <Card className="p-4">
+      <CardContent className="grid gap-4">
+        <div className="grid grid-cols-4 font-semibold text-sm text-muted-foreground">
+          <div>Licence</div>
+          <div>Prix (TTC)</div>
+          <div>Promo {promoPercent}%</div>
+          <div>Gain estimé</div>
+        </div>
+
+        {licenses.map((license, index) => (
+          <div
+            key={license.name}
+            className="grid grid-cols-4 items-center gap-2"
+          >
+            <Label>{license.name}</Label>
+
+            <Input
+              type="number"
+              step="0.01"
+              value={license.price}
+              onChange={(e) => handleChange(index, e.target.value)}
+              placeholder="ex: 29.99"
+            />
+
+            <div className="text-sm text-muted-foreground">
+              {promoPercent > 0 && license.price !== ""
+                ? "-" +
+                  (
+                    (Number(license.price) * promoPercent) /
+                    100
+                  ).toFixed(2) + " €"
+                : "-"}
+            </div>
+
+            <div className="text-sm font-medium">{estimates[license.name]}</div>
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}

commit 11c1ff9b2db8728a36bf3c9e089c8a2dac265f85
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:11:36 2025 +0200

    Create revenueCalculator.ts

diff --git a/src/lib/revenueCalculator.ts b/src/lib/revenueCalculator.ts
new file mode 100644
index 0000000..04fd2e6
--- /dev/null
+++ b/src/lib/revenueCalculator.ts
@@ -0,0 +1,28 @@
+import { BeatmakerPlan } from "./constants"
+
+const commissionRates: Record<BeatmakerPlan, number> = {
+  FREE: 0.4,
+  BRONZE: 0.35,
+  GOLD: 0.3,
+  DIAMOND: 0.2,
+  DIAMOND_PLUS: 0.1,
+}
+
+export function calculateNetRevenue({
+  price,
+  plan,
+  promoPercent,
+}: {
+  price: number
+  plan: BeatmakerPlan
+  promoPercent: number
+}) {
+  const priceAfterPromo = price * (1 - promoPercent / 100)
+  const priceExclVAT = priceAfterPromo / 1.2 // TVA = 20%
+
+  const stripeFee = priceExclVAT * 0.025 + 0.25
+  const beatsmarketFee = priceExclVAT * commissionRates[plan]
+
+  const net = priceExclVAT - stripeFee - beatsmarketFee
+  return Math.max(0, net)
+}

commit 2179387d884c8815057eec0bc64b43414d88e1eb
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:18:17 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/admin/page.tsx b/src/app/beatmaker/admin/page.tsx
new file mode 100644
index 0000000..601148c
--- /dev/null
+++ b/src/app/beatmaker/admin/page.tsx
@@ -0,0 +1,253 @@
+"use client"
+
+import { useState } from "react"
+import { Input } from "@/components/ui/input"
+import { Textarea } from "@/components/ui/textarea"
+import { Button } from "@/components/ui/button"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+type SocialLinks = {
+  facebook?: string
+  instagram?: string
+  twitter?: string
+  youtube?: string
+}
+
+type Beat = {
+  id: string
+  title: string
+  price: number
+  published: boolean
+}
+
+type Message = {
+  id: string
+  from: string
+  content: string
+  replied: boolean
+  reply?: string
+}
+
+export default function AdminBeatmakerPage() {
+  const [activeTab, setActiveTab] = useState<"boutique" | "beats" | "messages">("boutique")
+
+  // Boutique state
+  const [miniatureUrl, setMiniatureUrl] = useState("")
+  const [bannerUrl, setBannerUrl] = useState("")
+  const [socialLinks, setSocialLinks] = useState<SocialLinks>({})
+
+  // Beats state (exemple statique)
+  const [beats, setBeats] = useState<Beat[]>([
+    { id: "1", title: "Beat 1", price: 29.99, published: true },
+    { id: "2", title: "Beat 2", price: 19.99, published: false },
+  ])
+
+  // Messages state (exemple statique)
+  const [messages, setMessages] = useState<Message[]>([
+    { id: "m1", from: "ArtisteX", content: "Salut, peux-tu me faire un prix ?", replied: false },
+    { id: "m2", from: "ArtisteY", content: "Quand sortira ton prochain beat ?", replied: true, reply: "Bientôt, stay tuned !" },
+  ])
+
+  // Handlers Boutique
+  function handleSocialChange(key: keyof SocialLinks, value: string) {
+    setSocialLinks((prev) => ({ ...prev, [key]: value }))
+  }
+
+  function handleSaveBoutique() {
+    // TODO: Appeler API sauvegarde boutique (miniature, bannière, réseaux)
+    alert("Boutique sauvegardée !")
+  }
+
+  // Handlers Messages
+  function handleReplyChange(id: string, value: string) {
+    setMessages((prev) =>
+      prev.map((msg) =>
+        msg.id === id ? { ...msg, reply: value } : msg
+      )
+    )
+  }
+  function handleSendReply(id: string) {
+    // TODO: API envoi réponse message
+    setMessages((prev) =>
+      prev.map((msg) =>
+        msg.id === id ? { ...msg, replied: true } : msg
+      )
+    )
+    alert("Réponse envoyée !")
+  }
+
+  return (
+    <div className="max-w-5xl mx-auto p-4">
+      <h1 className="text-3xl font-bold mb-6">Admin Beatmaker</h1>
+
+      <nav className="flex gap-4 mb-8">
+        {["boutique", "beats", "messages"].map((tab) => (
+          <button
+            key={tab}
+            onClick={() => setActiveTab(tab as any)}
+            className={`px-4 py-2 rounded-md font-semibold ${
+              activeTab === tab
+                ? "bg-pink-600 text-white"
+                : "bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300"
+            }`}
+          >
+            {tab.charAt(0).toUpperCase() + tab.slice(1)}
+          </button>
+        ))}
+      </nav>
+
+      {activeTab === "boutique" && (
+        <Card>
+          <CardHeader>
+            <CardTitle>Paramètres Boutique</CardTitle>
+          </CardHeader>
+          <CardContent className="space-y-4">
+            <div>
+              <label className="block mb-1 font-medium">Miniature (URL)</label>
+              <Input
+                type="url"
+                value={miniatureUrl}
+                onChange={(e) => setMiniatureUrl(e.target.value)}
+                placeholder="https://example.com/miniature.jpg"
+              />
+            </div>
+            <div>
+              <label className="block mb-1 font-medium">Bannière (URL)</label>
+              <Input
+                type="url"
+                value={bannerUrl}
+                onChange={(e) => setBannerUrl(e.target.value)}
+                placeholder="https://example.com/banner.jpg"
+              />
+            </div>
+
+            <div>
+              <label className="block mb-1 font-medium">Facebook</label>
+              <Input
+                type="url"
+                value={socialLinks.facebook || ""}
+                onChange={(e) => handleSocialChange("facebook", e.target.value)}
+                placeholder="https://facebook.com/yourpage"
+              />
+            </div>
+            <div>
+              <label className="block mb-1 font-medium">Instagram</label>
+              <Input
+                type="url"
+                value={socialLinks.instagram || ""}
+                onChange={(e) => handleSocialChange("instagram", e.target.value)}
+                placeholder="https://instagram.com/yourprofile"
+              />
+            </div>
+            <div>
+              <label className="block mb-1 font-medium">Twitter</label>
+              <Input
+                type="url"
+                value={socialLinks.twitter || ""}
+                onChange={(e) => handleSocialChange("twitter", e.target.value)}
+                placeholder="https://twitter.com/yourhandle"
+              />
+            </div>
+            <div>
+              <label className="block mb-1 font-medium">YouTube</label>
+              <Input
+                type="url"
+                value={socialLinks.youtube || ""}
+                onChange={(e) => handleSocialChange("youtube", e.target.value)}
+                placeholder="https://youtube.com/channel/yourchannel"
+              />
+            </div>
+
+            <Button onClick={handleSaveBoutique} className="mt-4">
+              Sauvegarder
+            </Button>
+          </CardContent>
+        </Card>
+      )}
+
+      {activeTab === "beats" && (
+        <Card>
+          <CardHeader>
+            <CardTitle>Mes Beats</CardTitle>
+          </CardHeader>
+          <CardContent>
+            {beats.length === 0 && <p>Aucun beat trouvé.</p>}
+            {beats.map((beat) => (
+              <div
+                key={beat.id}
+                className="flex justify-between items-center border-b py-2"
+              >
+                <div>
+                  <strong>{beat.title}</strong>{" "}
+                  {beat.published ? (
+                    <span className="text-green-600 font-semibold">Publié</span>
+                  ) : (
+                    <span className="text-red-600 font-semibold">Non publié</span>
+                  )}
+                </div>
+                <div>{beat.price.toFixed(2)} €</div>
+                <div>
+                  {/* TODO: Boutons édition, suppression, publication */}
+                  <Button
+                    variant="outline"
+                    size="sm"
+                    onClick={() => alert("Edition non implémentée")}
+                  >
+                    Éditer
+                  </Button>{" "}
+                  <Button
+                    variant="destructive"
+                    size="sm"
+                    onClick={() => alert("Suppression non implémentée")}
+                  >
+                    Supprimer
+                  </Button>
+                </div>
+              </div>
+            ))}
+          </CardContent>
+        </Card>
+      )}
+
+      {activeTab === "messages" && (
+        <Card>
+          <CardHeader>
+            <CardTitle>Messages clients</CardTitle>
+          </CardHeader>
+          <CardContent>
+            {messages.length === 0 && <p>Aucun message.</p>}
+            {messages.map((msg) => (
+              <div
+                key={msg.id}
+                className="border-b py-3 space-y-2"
+              >
+                <p>
+                  <strong>{msg.from}</strong> : {msg.content}
+                </p>
+                {msg.replied ? (
+                  <p className="text-green-600 font-semibold">
+                    Répondu : {msg.reply}
+                  </p>
+                ) : (
+                  <>
+                    <Textarea
+                      placeholder="Votre réponse..."
+                      value={msg.reply || ""}
+                      onChange={(e) => handleReplyChange(msg.id, e.target.value)}
+                    />
+                    <Button
+                      size="sm"
+                      onClick={() => handleSendReply(msg.id)}
+                    >
+                      Envoyer
+                    </Button>
+                  </>
+                )}
+              </div>
+            ))}
+          </CardContent>
+        </Card>
+      )}
+    </div>
+  )
+}

commit e7058d3c993ae07b8ddb278de278cb0c3933747e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:21:28 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/page.tsx b/src/app/beatmaker/admin/beat-edit/page.tsx
new file mode 100644
index 0000000..accfcfb
--- /dev/null
+++ b/src/app/beatmaker/admin/beat-edit/page.tsx
@@ -0,0 +1,141 @@
+"use client"
+
+import { useState, useEffect } from "react"
+import { Input } from "@/components/ui/input"
+import { Textarea } from "@/components/ui/textarea"
+import { Button } from "@/components/ui/button"
+import { Label } from "@/components/ui/label"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+type LicenseType = "basique" | "premium" | "exclusive" | "exclusive_plus"
+
+type Prices = {
+  [key in LicenseType]: number
+}
+
+export default function BeatEditPage() {
+  const [title, setTitle] = useState("")
+  const [description, setDescription] = useState("")
+  const [prices, setPrices] = useState<Prices>({
+    basique: 0,
+    premium: 0,
+    exclusive: 0,
+    exclusive_plus: 0,
+  })
+  const [miniatureUrl, setMiniatureUrl] = useState("")
+  const [showInfoImage, setShowInfoImage] = useState(true)
+
+  // Exemple commission, TVA, promo (à récupérer dynamiquement dans l'idéal)
+  const COMMISSION_RATE = 0.15 // 15% commission site
+  const TVA_RATE = 0.20 // 20% TVA
+  const PROMO_RATE = 0 // 0 si aucune promo
+
+  // Calcul dynamique du gain net estimé (prix - commission - tva - promo)
+  function calcNetGain(price: number) {
+    if (price <= 0) return 0
+    const afterPromo = price * (1 - PROMO_RATE)
+    const commission = afterPromo * COMMISSION_RATE
+    const tva = afterPromo * TVA_RATE
+    return afterPromo - commission - tva
+  }
+
+  // Handler changement prix licence
+  function handlePriceChange(license: LicenseType, value: string) {
+    const val = parseFloat(value)
+    if (isNaN(val) || val < 0) return
+    setPrices((prev) => ({ ...prev, [license]: val }))
+  }
+
+  function handleSave() {
+    // Validation minimale
+    if (!title.trim()) {
+      alert("Le titre est obligatoire.")
+      return
+    }
+    // Sauvegarde API à implémenter ici
+    alert("Beat sauvegardé (simulation).")
+  }
+
+  return (
+    <div className="max-w-3xl mx-auto p-4">
+      <h1 className="text-2xl font-bold mb-6">Édition Beat</h1>
+
+      <Card className="mb-6">
+        <CardHeader>
+          <CardTitle>Informations générales</CardTitle>
+        </CardHeader>
+        <CardContent className="space-y-4">
+          <div>
+            <Label htmlFor="title">Titre *</Label>
+            <Input
+              id="title"
+              type="text"
+              value={title}
+              onChange={(e) => setTitle(e.target.value)}
+              placeholder="Nom du beat"
+            />
+          </div>
+          <div>
+            <Label htmlFor="description">Description</Label>
+            <Textarea
+              id="description"
+              value={description}
+              onChange={(e) => setDescription(e.target.value)}
+              placeholder="Description du beat"
+              rows={4}
+            />
+          </div>
+
+          <div>
+            <Label htmlFor="miniature">Miniature (URL)</Label>
+            <Input
+              id="miniature"
+              type="url"
+              value={miniatureUrl}
+              onChange={(e) => setMiniatureUrl(e.target.value)}
+              placeholder="https://exemple.com/image.jpg"
+            />
+            {showInfoImage && (
+              <p className="text-sm text-gray-500 mt-1">
+                Il est conseillé d'ajouter une miniature pour mieux attirer les clients.
+              </p>
+            )}
+          </div>
+        </CardContent>
+      </Card>
+
+      <Card className="mb-6">
+        <CardHeader>
+          <CardTitle>Prix par licence</CardTitle>
+        </CardHeader>
+        <CardContent className="space-y-4">
+          {(["basique", "premium", "exclusive", "exclusive_plus"] as LicenseType[]).map((license) => (
+            <div key={license} className="flex items-center gap-4">
+              <Label className="w-32 capitalize" htmlFor={`price-${license}`}>
+                {license.replace("_", " ")}
+              </Label>
+              <Input
+                id={`price-${license}`}
+                type="number"
+                min={0}
+                step={0.01}
+                value={prices[license]}
+                onChange={(e) => handlePriceChange(license, e.target.value)}
+              />
+              <div className="ml-auto text-right w-40">
+                Gain net estimé:{" "}
+                <span className="font-semibold">
+                  {calcNetGain(prices[license]).toFixed(2)} €
+                </span>
+              </div>
+            </div>
+          ))}
+        </CardContent>
+      </Card>
+
+      <Button onClick={handleSave} className="w-full">
+        Sauvegarder le beat
+      </Button>
+    </div>
+  )
+}

commit 8b22ba106c0fc0452c8971d67a2ad49287557bbc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:22:43 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
new file mode 100644
index 0000000..7a6615d
--- /dev/null
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -0,0 +1,93 @@
+"use client"
+
+import { useState, useEffect } from "react"
+import Link from "next/link"
+import { Button } from "@/components/ui/button"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+type Beat = {
+  id: string
+  title: string
+  miniatureUrl?: string
+  prices: {
+    basique: number
+    premium: number
+    exclusive: number
+    exclusive_plus: number
+  }
+}
+
+export default function BeatListPage() {
+  const [beats, setBeats] = useState<Beat[]>([])
+
+  // Simuler fetch depuis API/backend
+  useEffect(() => {
+    // Ici, fetch les beats depuis API
+    // Exemple statique pour test :
+    setBeats([
+      {
+        id: "1",
+        title: "Beat 1",
+        miniatureUrl: "https://via.placeholder.com/80",
+        prices: { basique: 20, premium: 40, exclusive: 70, exclusive_plus: 100 },
+      },
+      {
+        id: "2",
+        title: "Beat 2",
+        miniatureUrl: "",
+        prices: { basique: 15, premium: 30, exclusive: 50, exclusive_plus: 80 },
+      },
+    ])
+  }, [])
+
+  function handleDelete(id: string) {
+    if (confirm("Voulez-vous vraiment supprimer ce beat ? Cette action est irréversible.")) {
+      // Appeler API pour supprimer beat par id
+      setBeats((prev) => prev.filter((b) => b.id !== id))
+      alert("Beat supprimé (simulation).")
+    }
+  }
+
+  // Trouver prix minimum parmi les licences
+  function getMinPrice(prices: Beat["prices"]) {
+    return Math.min(...Object.values(prices))
+  }
+
+  return (
+    <div className="max-w-4xl mx-auto p-4">
+      <h1 className="text-2xl font-bold mb-6">Mes Beats</h1>
+
+      {beats.length === 0 && <p>Aucun beat disponible.</p>}
+
+      <div className="space-y-4">
+        {beats.map((beat) => (
+          <Card key={beat.id} className="flex items-center gap-4 p-4">
+            <img
+              src={beat.miniatureUrl || "/images/placeholder-beat.png"}
+              alt={`Miniature de ${beat.title}`}
+              className="w-20 h-20 object-cover rounded"
+            />
+            <div className="flex-1">
+              <h2 className="text-lg font-semibold">{beat.title}</h2>
+              <p>Prix minimum : {getMinPrice(beat.prices).toFixed(2)} €</p>
+            </div>
+            <div className="flex gap-2">
+              <Link href={`/beatmaker/admin/beat-edit/${beat.id}`}>
+                <Button variant="outline" size="sm">
+                  Éditer
+                </Button>
+              </Link>
+              <Button
+                variant="destructive"
+                size="sm"
+                onClick={() => handleDelete(beat.id)}
+              >
+                Supprimer
+              </Button>
+            </div>
+          </Card>
+        ))}
+      </div>
+    </div>
+  )
+}

commit 3e976eb69f315a9e220c333ff61dbf3e6c5ffbd5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:24:41 2025 +0200

    Create beats.ts

diff --git a/src/lib/api/beats.ts b/src/lib/api/beats.ts
new file mode 100644
index 0000000..17ed3fc
--- /dev/null
+++ b/src/lib/api/beats.ts
@@ -0,0 +1,40 @@
+// API simplifiée pour gestion beats
+
+export type Beat = {
+  id: string
+  title: string
+  description?: string
+  miniatureUrl?: string
+  prices: {
+    basique: number
+    premium: number
+    exclusive: number
+    exclusive_plus: number
+  }
+}
+
+// Simulation fetch beats
+export async function fetchBeats(): Promise<Beat[]> {
+  const res = await fetch("/api/beats")
+  if (!res.ok) throw new Error("Erreur récupération beats")
+  return res.json()
+}
+
+// Simulation save beat (create or update)
+export async function saveBeat(beat: Partial<Beat>): Promise<Beat> {
+  const method = beat.id ? "PUT" : "POST"
+  const url = beat.id ? `/api/beats/${beat.id}` : "/api/beats"
+  const res = await fetch(url, {
+    method,
+    headers: { "Content-Type": "application/json" },
+    body: JSON.stringify(beat),
+  })
+  if (!res.ok) throw new Error("Erreur sauvegarde beat")
+  return res.json()
+}
+
+// Simulation delete beat
+export async function deleteBeat(id: string): Promise<void> {
+  const res = await fetch(`/api/beats/${id}`, { method: "DELETE" })
+  if (!res.ok) throw new Error("Erreur suppression beat")
+}

commit 19c041c8e2f689e84863418a7e9543b8a9a01d09
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:27:43 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index 7a6615d..1534725 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -3,62 +3,49 @@
 import { useState, useEffect } from "react"
 import Link from "next/link"
 import { Button } from "@/components/ui/button"
-import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
-
-type Beat = {
-  id: string
-  title: string
-  miniatureUrl?: string
-  prices: {
-    basique: number
-    premium: number
-    exclusive: number
-    exclusive_plus: number
-  }
-}
+import { Card } from "@/components/ui/card"
+import { fetchBeats, deleteBeat, type Beat } from "@/lib/api/beats"
 
 export default function BeatListPage() {
   const [beats, setBeats] = useState<Beat[]>([])
+  const [loading, setLoading] = useState(true)
+  const [error, setError] = useState<string | null>(null)
 
-  // Simuler fetch depuis API/backend
   useEffect(() => {
-    // Ici, fetch les beats depuis API
-    // Exemple statique pour test :
-    setBeats([
-      {
-        id: "1",
-        title: "Beat 1",
-        miniatureUrl: "https://via.placeholder.com/80",
-        prices: { basique: 20, premium: 40, exclusive: 70, exclusive_plus: 100 },
-      },
-      {
-        id: "2",
-        title: "Beat 2",
-        miniatureUrl: "",
-        prices: { basique: 15, premium: 30, exclusive: 50, exclusive_plus: 80 },
-      },
-    ])
+    setLoading(true)
+    fetchBeats()
+      .then((data) => {
+        setBeats(data)
+        setError(null)
+      })
+      .catch((err) => setError(err.message))
+      .finally(() => setLoading(false))
   }, [])
 
-  function handleDelete(id: string) {
+  async function handleDelete(id: string) {
     if (confirm("Voulez-vous vraiment supprimer ce beat ? Cette action est irréversible.")) {
-      // Appeler API pour supprimer beat par id
-      setBeats((prev) => prev.filter((b) => b.id !== id))
-      alert("Beat supprimé (simulation).")
+      try {
+        await deleteBeat(id)
+        setBeats((prev) => prev.filter((b) => b.id !== id))
+        alert("Beat supprimé avec succès.")
+      } catch (e) {
+        alert("Erreur lors de la suppression.")
+      }
     }
   }
 
-  // Trouver prix minimum parmi les licences
   function getMinPrice(prices: Beat["prices"]) {
     return Math.min(...Object.values(prices))
   }
 
+  if (loading) return <p>Chargement...</p>
+  if (error) return <p className="text-red-600">Erreur: {error}</p>
+  if (beats.length === 0) return <p>Aucun beat disponible.</p>
+
   return (
     <div className="max-w-4xl mx-auto p-4">
       <h1 className="text-2xl font-bold mb-6">Mes Beats</h1>
 
-      {beats.length === 0 && <p>Aucun beat disponible.</p>}
-
       <div className="space-y-4">
         {beats.map((beat) => (
           <Card key={beat.id} className="flex items-center gap-4 p-4">

commit ffed56c3e09919ff6c4d02e99812584cdb19d827
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:28:43 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/page.tsx b/src/app/beatmaker/admin/beat-edit/page.tsx
index accfcfb..faebdda 100644
--- a/src/app/beatmaker/admin/beat-edit/page.tsx
+++ b/src/app/beatmaker/admin/beat-edit/page.tsx
@@ -1,36 +1,58 @@
 "use client"
 
 import { useState, useEffect } from "react"
+import { useRouter, useSearchParams } from "next/navigation"
 import { Input } from "@/components/ui/input"
 import { Textarea } from "@/components/ui/textarea"
 import { Button } from "@/components/ui/button"
 import { Label } from "@/components/ui/label"
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { fetchBeats, saveBeat, type Beat } from "@/lib/api/beats"
 
 type LicenseType = "basique" | "premium" | "exclusive" | "exclusive_plus"
 
-type Prices = {
-  [key in LicenseType]: number
-}
-
 export default function BeatEditPage() {
+  const router = useRouter()
+  const searchParams = useSearchParams()
+  const beatId = searchParams.get("id") || ""
+
   const [title, setTitle] = useState("")
   const [description, setDescription] = useState("")
-  const [prices, setPrices] = useState<Prices>({
+  const [prices, setPrices] = useState<Record<LicenseType, number>>({
     basique: 0,
     premium: 0,
     exclusive: 0,
     exclusive_plus: 0,
   })
   const [miniatureUrl, setMiniatureUrl] = useState("")
-  const [showInfoImage, setShowInfoImage] = useState(true)
+  const [loading, setLoading] = useState(false)
+  const [error, setError] = useState<string | null>(null)
+
+  // Charger les données du beat si id présent
+  useEffect(() => {
+    if (!beatId) return
+    setLoading(true)
+    fetchBeats()
+      .then((beats) => {
+        const beat = beats.find((b) => b.id === beatId)
+        if (beat) {
+          setTitle(beat.title)
+          setDescription(beat.description || "")
+          setPrices(beat.prices)
+          setMiniatureUrl(beat.miniatureUrl || "")
+          setError(null)
+        } else {
+          setError("Beat introuvable")
+        }
+      })
+      .catch(() => setError("Erreur chargement beat"))
+      .finally(() => setLoading(false))
+  }, [beatId])
 
-  // Exemple commission, TVA, promo (à récupérer dynamiquement dans l'idéal)
-  const COMMISSION_RATE = 0.15 // 15% commission site
-  const TVA_RATE = 0.20 // 20% TVA
-  const PROMO_RATE = 0 // 0 si aucune promo
+  const COMMISSION_RATE = 0.15
+  const TVA_RATE = 0.20
+  const PROMO_RATE = 0 // À récupérer dynamiquement
 
-  // Calcul dynamique du gain net estimé (prix - commission - tva - promo)
   function calcNetGain(price: number) {
     if (price <= 0) return 0
     const afterPromo = price * (1 - PROMO_RATE)
@@ -39,26 +61,43 @@ export default function BeatEditPage() {
     return afterPromo - commission - tva
   }
 
-  // Handler changement prix licence
   function handlePriceChange(license: LicenseType, value: string) {
     const val = parseFloat(value)
     if (isNaN(val) || val < 0) return
     setPrices((prev) => ({ ...prev, [license]: val }))
   }
 
-  function handleSave() {
-    // Validation minimale
+  async function handleSave() {
     if (!title.trim()) {
       alert("Le titre est obligatoire.")
       return
     }
-    // Sauvegarde API à implémenter ici
-    alert("Beat sauvegardé (simulation).")
+    setLoading(true)
+    try {
+      await saveBeat({
+        id: beatId || undefined,
+        title,
+        description,
+        miniatureUrl,
+        prices,
+      })
+      alert("Beat sauvegardé avec succès.")
+      router.push("/beatmaker/admin/beat-list")
+    } catch {
+      alert("Erreur lors de la sauvegarde.")
+    } finally {
+      setLoading(false)
+    }
   }
 
+  if (loading) return <p>Chargement...</p>
+  if (error) return <p className="text-red-600">{error}</p>
+
   return (
     <div className="max-w-3xl mx-auto p-4">
-      <h1 className="text-2xl font-bold mb-6">Édition Beat</h1>
+      <h1 className="text-2xl font-bold mb-6">
+        {beatId ? "Édition Beat" : "Création Beat"}
+      </h1>
 
       <Card className="mb-6">
         <CardHeader>
@@ -85,7 +124,6 @@ export default function BeatEditPage() {
               rows={4}
             />
           </div>
-
           <div>
             <Label htmlFor="miniature">Miniature (URL)</Label>
             <Input
@@ -95,11 +133,10 @@ export default function BeatEditPage() {
               onChange={(e) => setMiniatureUrl(e.target.value)}
               placeholder="https://exemple.com/image.jpg"
             />
-            {showInfoImage && (
-              <p className="text-sm text-gray-500 mt-1">
-                Il est conseillé d'ajouter une miniature pour mieux attirer les clients.
-              </p>
-            )}
+            <p className="text-sm text-gray-500 mt-1">
+              Il est conseillé d&apos;ajouter une miniature pour mieux attirer
+              les clients.
+            </p>
           </div>
         </CardContent>
       </Card>
@@ -109,32 +146,34 @@ export default function BeatEditPage() {
           <CardTitle>Prix par licence</CardTitle>
         </CardHeader>
         <CardContent className="space-y-4">
-          {(["basique", "premium", "exclusive", "exclusive_plus"] as LicenseType[]).map((license) => (
-            <div key={license} className="flex items-center gap-4">
-              <Label className="w-32 capitalize" htmlFor={`price-${license}`}>
-                {license.replace("_", " ")}
-              </Label>
-              <Input
-                id={`price-${license}`}
-                type="number"
-                min={0}
-                step={0.01}
-                value={prices[license]}
-                onChange={(e) => handlePriceChange(license, e.target.value)}
-              />
-              <div className="ml-auto text-right w-40">
-                Gain net estimé:{" "}
-                <span className="font-semibold">
-                  {calcNetGain(prices[license]).toFixed(2)} €
-                </span>
+          {(["basique", "premium", "exclusive", "exclusive_plus"] as LicenseType[]).map(
+            (license) => (
+              <div key={license} className="flex items-center gap-4">
+                <Label className="w-32 capitalize" htmlFor={`price-${license}`}>
+                  {license.replace("_", " ")}
+                </Label>
+                <Input
+                  id={`price-${license}`}
+                  type="number"
+                  min={0}
+                  step={0.01}
+                  value={prices[license]}
+                  onChange={(e) => handlePriceChange(license, e.target.value)}
+                />
+                <div className="ml-auto text-right w-40">
+                  Gain net estimé:{" "}
+                  <span className="font-semibold">
+                    {calcNetGain(prices[license]).toFixed(2)} €
+                  </span>
+                </div>
               </div>
-            </div>
-          ))}
+            )
+          )}
         </CardContent>
       </Card>
 
-      <Button onClick={handleSave} className="w-full">
-        Sauvegarder le beat
+      <Button onClick={handleSave} className="w-full" disabled={loading}>
+        {loading ? "Sauvegarde..." : "Sauvegarder le beat"}
       </Button>
     </div>
   )

commit d01633c0d801e05593351b48e0e06c9c521116c8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:30:08 2025 +0200

    Create upload.ts

diff --git a/src/lib/api/upload.ts b/src/lib/api/upload.ts
new file mode 100644
index 0000000..8b912ff
--- /dev/null
+++ b/src/lib/api/upload.ts
@@ -0,0 +1,19 @@
+// Exemple simple de fonction upload fichier vers API
+
+export async function uploadFile(file: File): Promise<string> {
+  const formData = new FormData()
+  formData.append("file", file)
+
+  const res = await fetch("/api/upload", {
+    method: "POST",
+    body: formData,
+  })
+
+  if (!res.ok) {
+    throw new Error("Erreur lors de l'upload du fichier")
+  }
+
+  // Retourne l'URL du fichier uploadé
+  const data = await res.json()
+  return data.url
+}

commit 9b785e2b6f6560e8f290d429db9f30c2e8eec28c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:30:51 2025 +0200

    Create upload-image.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/upload-image.tsx b/src/app/beatmaker/admin/beat-edit/upload-image.tsx
new file mode 100644
index 0000000..a31383c
--- /dev/null
+++ b/src/app/beatmaker/admin/beat-edit/upload-image.tsx
@@ -0,0 +1,42 @@
+"use client"
+
+import { useState } from "react"
+import { Button } from "@/components/ui/button"
+import { uploadFile } from "@/lib/api/upload"
+
+interface UploadImageProps {
+  onUploadComplete: (url: string) => void
+}
+
+export function UploadImage({ onUploadComplete }: UploadImageProps) {
+  const [uploading, setUploading] = useState(false)
+
+  async function handleFileChange(e: React.ChangeEvent<HTMLInputElement>) {
+    if (!e.target.files?.length) return
+    const file = e.target.files[0]
+    setUploading(true)
+    try {
+      const url = await uploadFile(file)
+      onUploadComplete(url)
+    } catch {
+      alert("Erreur lors de l'upload de l'image.")
+    } finally {
+      setUploading(false)
+    }
+  }
+
+  return (
+    <div>
+      <input
+        type="file"
+        accept="image/*"
+        id="upload-image-input"
+        className="hidden"
+        onChange={handleFileChange}
+      />
+      <label htmlFor="upload-image-input">
+        <Button disabled={uploading}>{uploading ? "Upload..." : "Uploader une image"}</Button>
+      </label>
+    </div>
+  )
+}

commit ca0c0b7bb63e1d6854204a95f24653088deb64d3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:32:32 2025 +0200

    Create upload.ts

diff --git a/src/pages/api/upload.ts b/src/pages/api/upload.ts
new file mode 100644
index 0000000..e812194
--- /dev/null
+++ b/src/pages/api/upload.ts
@@ -0,0 +1,56 @@
+import type { NextApiRequest, NextApiResponse } from "next"
+import formidable from "formidable"
+import fs from "fs"
+import path from "path"
+
+// Désactive le body parser par défaut de Next.js pour gérer les fichiers
+export const config = {
+  api: {
+    bodyParser: false,
+  },
+}
+
+const uploadDir = path.join(process.cwd(), "/public/uploads")
+
+// Crée le dossier uploads s'il n'existe pas
+if (!fs.existsSync(uploadDir)) {
+  fs.mkdirSync(uploadDir, { recursive: true })
+}
+
+export default async function handler(
+  req: NextApiRequest,
+  res: NextApiResponse
+) {
+  if (req.method !== "POST") {
+    res.status(405).json({ error: "Méthode non autorisée" })
+    return
+  }
+
+  const form = new formidable.IncomingForm({
+    uploadDir,
+    keepExtensions: true,
+    maxFileSize: 60 * 1024 * 1024, // 60 Mo max par fichier
+  })
+
+  form.parse(req, (err, fields, files) => {
+    if (err) {
+      res.status(500).json({ error: "Erreur lors du traitement du fichier" })
+      return
+    }
+
+    const file = files.file
+    if (!file) {
+      res.status(400).json({ error: "Aucun fichier reçu" })
+      return
+    }
+
+    // Dans le cas où plusieurs fichiers, on prend le premier
+    const uploadedFile = Array.isArray(file) ? file[0] : file
+
+    // URL publique relative au fichier
+    const fileName = path.basename(uploadedFile.filepath)
+    const fileUrl = `/uploads/${fileName}`
+
+    res.status(200).json({ url: fileUrl })
+  })
+}

commit df45a45b4ef7a457e72492c254a669d58dd44132
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:41:20 2025 +0200

    Update upload.ts

diff --git a/src/pages/api/upload.ts b/src/pages/api/upload.ts
index e812194..7577470 100644
--- a/src/pages/api/upload.ts
+++ b/src/pages/api/upload.ts
@@ -3,7 +3,6 @@ import formidable from "formidable"
 import fs from "fs"
 import path from "path"
 
-// Désactive le body parser par défaut de Next.js pour gérer les fichiers
 export const config = {
   api: {
     bodyParser: false,
@@ -12,11 +11,24 @@ export const config = {
 
 const uploadDir = path.join(process.cwd(), "/public/uploads")
 
-// Crée le dossier uploads s'il n'existe pas
 if (!fs.existsSync(uploadDir)) {
   fs.mkdirSync(uploadDir, { recursive: true })
 }
 
+const allowedMimeTypesByLicense: Record<string, string[]> = {
+  mp3: ["audio/mpeg"],
+  wav: ["audio/wav", "audio/x-wav"],
+  stems: ["audio/wav", "audio/x-wav"],
+  image: ["image/png", "image/jpeg", "image/jpg", "image/gif"],
+}
+
+const maxFileSizeByLicense: Record<string, number> = {
+  mp3: 20 * 1024 * 1024,   // 20 Mo
+  wav: 60 * 1024 * 1024,   // 60 Mo
+  stems: 60 * 1024 * 1024, // 60 Mo par stem
+  image: 10 * 1024 * 1024, // 10 Mo max pour images
+}
+
 export default async function handler(
   req: NextApiRequest,
   res: NextApiResponse
@@ -26,10 +38,20 @@ export default async function handler(
     return
   }
 
+  // Les licences attendues doivent être envoyées en query param sous forme CSV, ex : ?licenses=mp3,wav,image
+  const licensesQuery = req.query.licenses
+  let licenses: string[] = []
+  if (typeof licensesQuery === "string") {
+    licenses = licensesQuery.split(",").map(l => l.trim().toLowerCase())
+  } else if (Array.isArray(licensesQuery)) {
+    licenses = licensesQuery.flatMap(l => l.split(",").map(s => s.trim().toLowerCase()))
+  }
+
   const form = new formidable.IncomingForm({
     uploadDir,
     keepExtensions: true,
-    maxFileSize: 60 * 1024 * 1024, // 60 Mo max par fichier
+    maxFileSize: Math.max(...Object.values(maxFileSizeByLicense)), // max taille la plus grande possible
+    multiples: true,
   })
 
   form.parse(req, (err, fields, files) => {
@@ -38,19 +60,46 @@ export default async function handler(
       return
     }
 
-    const file = files.file
-    if (!file) {
+    const uploadedFiles = files.file
+    if (!uploadedFiles) {
       res.status(400).json({ error: "Aucun fichier reçu" })
       return
     }
 
-    // Dans le cas où plusieurs fichiers, on prend le premier
-    const uploadedFile = Array.isArray(file) ? file[0] : file
+    const fileArray = Array.isArray(uploadedFiles) ? uploadedFiles : [uploadedFiles]
+    const savedFiles: { url: string; originalName: string }[] = []
+
+    for (const file of fileArray) {
+      // Validation mime type selon licences
+      const isValidType = licenses.some(lic => {
+        const allowedMimes = allowedMimeTypesByLicense[lic] || []
+        return allowedMimes.includes(file.mimetype || "")
+      })
+      if (!isValidType) {
+        // Supprime fichier temporaire
+        fs.unlinkSync(file.filepath)
+        return res.status(400).json({ error: `Type de fichier non autorisé: ${file.originalFilename}` })
+      }
+
+      // Validation taille selon licences (plus stricte)
+      let maxAllowedSize = 0
+      licenses.forEach(lic => {
+        const size = maxFileSizeByLicense[lic] || 0
+        if (size > maxAllowedSize) maxAllowedSize = size
+      })
+      if (file.size > maxAllowedSize) {
+        fs.unlinkSync(file.filepath)
+        return res.status(400).json({ error: `Fichier trop volumineux: ${file.originalFilename}` })
+      }
 
-    // URL publique relative au fichier
-    const fileName = path.basename(uploadedFile.filepath)
-    const fileUrl = `/uploads/${fileName}`
+      // Déplace le fichier vers /public/uploads
+      const newFileName = `${Date.now()}-${file.originalFilename}`
+      const newPath = path.join(uploadDir, newFileName)
+      fs.renameSync(file.filepath, newPath)
+
+      savedFiles.push({ url: `/uploads/${newFileName}`, originalName: file.originalFilename || "" })
+    }
 
-    res.status(200).json({ url: fileUrl })
+    return res.status(200).json({ files: savedFiles })
   })
 }

commit 65fdc215b7d8bbc0d64a55ec04cd89dbc363d634
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:42:44 2025 +0200

    Create BeatmakerUpload.tsx

diff --git a/src/components/BeatmakerUpload.tsx b/src/components/BeatmakerUpload.tsx
new file mode 100644
index 0000000..672602f
--- /dev/null
+++ b/src/components/BeatmakerUpload.tsx
@@ -0,0 +1,62 @@
+import React, { useState } from "react"
+
+const allowedMimeTypesByLicense: Record<string, string[]> = {
+  mp3: ["audio/mpeg"],
+  wav: ["audio/wav", "audio/x-wav"],
+  stems: ["audio/wav", "audio/x-wav"],
+  image: ["image/png", "image/jpeg", "image/jpg", "image/gif"],
+}
+
+interface Props {
+  licenses: string[] // ex: ['mp3', 'wav', 'image']
+  onUploadSuccess: (files: { url: string; originalName: string }[]) => void
+}
+
+export default function BeatmakerUpload({ licenses, onUploadSuccess }: Props) {
+  const [error, setError] = useState<string | null>(null)
+  const [loading, setLoading] = useState(false)
+
+  function checkFilesForLicenses(files: File[], licenses: string[]): boolean {
+    const allowedMimes = licenses.flatMap(lic => allowedMimeTypesByLicense[lic] || [])
+    return files.every(file => allowedMimes.includes(file.type))
+  }
+
+  async function handleFileChange(e: React.ChangeEvent<HTMLInputElement>) {
+    setError(null)
+    const files = e.target.files ? Array.from(e.target.files) : []
+    if (!checkFilesForLicenses(files, licenses)) {
+      setError("Le(s) fichier(s) ne correspondent pas aux licences choisies.")
+      return
+    }
+    setLoading(true)
+
+    try {
+      const formData = new FormData()
+      files.forEach(file => formData.append("file", file))
+
+      // Envoie avec query licenses pour validation backend
+      const res = await fetch(`/api/upload?licenses=${licenses.join(",")}`, {
+        method: "POST",
+        body: formData,
+      })
+      const data = await res.json()
+      if (!res.ok) {
+        setError(data.error || "Erreur lors de l'upload.")
+      } else {
+        onUploadSuccess(data.files)
+      }
+    } catch {
+      setError("Erreur réseau pendant l'upload.")
+    } finally {
+      setLoading(false)
+    }
+  }
+
+  return (
+    <div>
+      <input type="file" multiple onChange={handleFileChange} />
+      {loading && <p>Upload en cours...</p>}
+      {error && <p style={{ color: "red" }}>{error}</p>}
+    </div>
+  )
+}

commit 92ffa696410d2155f860ae70fab0dfbbac1e5ce1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:46:44 2025 +0200

    Create beatmaker.tsx

diff --git a/src/pages/admin/beatmaker.tsx b/src/pages/admin/beatmaker.tsx
new file mode 100644
index 0000000..e4d6246
--- /dev/null
+++ b/src/pages/admin/beatmaker.tsx
@@ -0,0 +1,60 @@
+import React, { useState } from "react"
+import BeatmakerUpload from "@/components/BeatmakerUpload"
+
+interface UploadedFile {
+  url: string
+  originalName: string
+}
+
+export default function AdminBeatmakerPage() {
+  // Exemple : licences que le beatmaker souhaite vendre
+  const [licenses, setLicenses] = useState<string[]>(["mp3", "wav", "image"])
+  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([])
+  const [message, setMessage] = useState<string | null>(null)
+
+  async function handleUploadSuccess(files: UploadedFile[]) {
+    setMessage(null)
+    setUploadedFiles(files)
+
+    try {
+      // Appeler une API pour sauvegarder les fichiers en base (exemple POST)
+      const res = await fetch("/api/beatmaker/saveFiles", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ files }),
+      })
+
+      if (!res.ok) {
+        const errorData = await res.json()
+        setMessage(`Erreur sauvegarde : ${errorData.error || "Erreur inconnue"}`)
+        return
+      }
+
+      setMessage("Fichiers sauvegardés avec succès.")
+    } catch (error) {
+      setMessage("Erreur réseau lors de la sauvegarde.")
+    }
+  }
+
+  return (
+    <div style={{ padding: 20 }}>
+      <h1>Administration Beatmaker - Gestion boutique</h1>
+      <p>Licences choisies : {licenses.join(", ")}</p>
+
+      <BeatmakerUpload licenses={licenses} onUploadSuccess={handleUploadSuccess} />
+
+      {message && <p>{message}</p>}
+
+      <h2>Fichiers uploadés :</h2>
+      <ul>
+        {uploadedFiles.map((file, idx) => (
+          <li key={idx}>
+            <a href={file.url} target="_blank" rel="noreferrer">
+              {file.originalName}
+            </a>
+          </li>
+        ))}
+      </ul>
+    </div>
+  )
+}

commit f52a3934ec790b88253dc79e86d550f5fa53a5f9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 18:47:39 2025 +0200

    Create saveFiles.ts

diff --git a/src/pages/api/beatmaker/saveFiles.ts b/src/pages/api/beatmaker/saveFiles.ts
new file mode 100644
index 0000000..bc2b0fe
--- /dev/null
+++ b/src/pages/api/beatmaker/saveFiles.ts
@@ -0,0 +1,36 @@
+import type { NextApiRequest, NextApiResponse } from "next"
+
+// Exemple simple de sauvegarde en "base de données" simulée
+// Dans un vrai projet, ici tu ferais l'insertion dans ta vraie base (MySQL, MongoDB, etc.)
+
+type Data = {
+  success: boolean
+  error?: string
+}
+
+export default async function handler(
+  req: NextApiRequest,
+  res: NextApiResponse<Data>
+) {
+  if (req.method !== "POST") {
+    return res.status(405).json({ success: false, error: "Méthode non autorisée" })
+  }
+
+  try {
+    const { files } = req.body
+
+    if (!Array.isArray(files) || files.length === 0) {
+      return res.status(400).json({ success: false, error: "Aucun fichier fourni" })
+    }
+
+    // TODO : ici tu insères les fichiers en base pour le beatmaker connecté
+    // Exemple fictif : console.log des fichiers reçus
+    console.log("Fichiers reçus à sauvegarder :", files)
+
+    // Simuler une sauvegarde réussie
+    return res.status(200).json({ success: true })
+  } catch (err) {
+    console.error(err)
+    return res.status(500).json({ success: false, error: "Erreur serveur" })
+  }
+}

commit e5f21e10bf45e2baa3f6de4f1100717e83093f6f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:19:39 2025 +0200

    Create AuthProfile.tsx

diff --git a/src/components/AuthProfile.tsx b/src/components/AuthProfile.tsx
new file mode 100644
index 0000000..5cbd750
--- /dev/null
+++ b/src/components/AuthProfile.tsx
@@ -0,0 +1,66 @@
+import React, { useState, useEffect } from 'react'
+import { supabase } from '../lib/supabaseClient'
+
+export default function AuthProfile() {
+  const [email, setEmail] = useState('')
+  const [password, setPassword] = useState('')
+  const [user, setUser] = useState<any>(null)
+  const [error, setError] = useState('')
+
+  useEffect(() => {
+    const sessionUser = supabase.auth.user()
+    if (sessionUser) setUser(sessionUser)
+  }, [])
+
+  async function handleSignIn() {
+    setError('')
+    const { user, error } = await supabase.auth.signIn({ email, password })
+    if (error) {
+      setError(error.message)
+    } else {
+      setUser(user)
+    }
+  }
+
+  async function handleSignOut() {
+    await supabase.auth.signOut()
+    setUser(null)
+    setEmail('')
+    setPassword('')
+  }
+
+  return (
+    <div style={{ maxWidth: 320, margin: 'auto', padding: 20 }}>
+      {!user ? (
+        <>
+          <h2>Connexion</h2>
+          <input
+            type="email"
+            placeholder="Email"
+            value={email}
+            onChange={e => setEmail(e.target.value)}
+            style={{ width: '100%', marginBottom: 8, padding: 8 }}
+          />
+          <input
+            type="password"
+            placeholder="Mot de passe"
+            value={password}
+            onChange={e => setPassword(e.target.value)}
+            style={{ width: '100%', marginBottom: 8, padding: 8 }}
+          />
+          <button onClick={handleSignIn} style={{ width: '100%', padding: 10 }}>
+            Se connecter
+          </button>
+          {error && <p style={{ color: 'red' }}>{error}</p>}
+        </>
+      ) : (
+        <>
+          <h2>Bienvenue {user.email}</h2>
+          <button onClick={handleSignOut} style={{ width: '100%', padding: 10 }}>
+            Se déconnecter
+          </button>
+        </>
+      )}
+    </div>
+  )
+}

commit 70a8d5315390289b0dede863d730fd891bfe188a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:22:24 2025 +0200

    Create supabaseClient.ts

diff --git a/src/lib/supabaseClient.ts b/src/lib/supabaseClient.ts
new file mode 100644
index 0000000..15a8e7e
--- /dev/null
+++ b/src/lib/supabaseClient.ts
@@ -0,0 +1,6 @@
+import { createClient } from '@supabase/supabase-js'
+
+const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
+const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
+
+export const supabase = createClient(supabaseUrl, supabaseAnonKey)

commit 57f2b5042f021f140bf1ba02c6862406e66e2c31
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:24:32 2025 +0200

    Update AuthProfile.tsx

commit 98185575bfb0274fd3b8b1ef83ed7342d9da472b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:31:42 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 8b13789..c80fcc4 100644
--- a/.env.local
+++ b/.env.local
@@ -1 +1,2 @@
-
+NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
+NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk

commit fbd58b69d11e4092d9d55b9851be8d392a685fff
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:44:29 2025 +0200

    Create supabase.ts

diff --git a/src/lib/supabase.ts b/src/lib/supabase.ts
new file mode 100644
index 0000000..76e6c1e
--- /dev/null
+++ b/src/lib/supabase.ts
@@ -0,0 +1,6 @@
+import { createClient } from "@supabase/supabase-js"
+
+const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
+const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
+
+export const supabase = createClient(supabaseUrl, supabaseAnonKey)

commit 995026738ca14adcfe73960954ec5f9d78fa7b41
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:48:20 2025 +0200

    Update supabase.ts

diff --git a/src/lib/supabase.ts b/src/lib/supabase.ts
index 76e6c1e..5bd177b 100644
--- a/src/lib/supabase.ts
+++ b/src/lib/supabase.ts
@@ -1,6 +1,6 @@
-import { createClient } from "@supabase/supabase-js"
+import { createClient } from '@supabase/supabase-js'
 
-const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
-const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
+const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string
+const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string
 
 export const supabase = createClient(supabaseUrl, supabaseAnonKey)

commit 2d4c5c441ea46362c47be398effeb8545003a550
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:49:32 2025 +0200

    Create api.ts

diff --git a/src/lib/api.ts b/src/lib/api.ts
new file mode 100644
index 0000000..d68ca81
--- /dev/null
+++ b/src/lib/api.ts
@@ -0,0 +1,7 @@
+import { supabase } from './supabase'
+
+export async function getUsers() {
+  const { data, error } = await supabase.from('users').select('*')
+  if (error) throw error
+  return data
+}

commit 938b0d7379350c2910174c3d9bbd9dacdf5fdcd9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:50:27 2025 +0200

    Create users.tsx

diff --git a/src/pages/users.tsx b/src/pages/users.tsx
new file mode 100644
index 0000000..b712b98
--- /dev/null
+++ b/src/pages/users.tsx
@@ -0,0 +1,29 @@
+import React, { useEffect, useState } from 'react'
+import { getUsers } from '@/lib/api'
+
+export default function UsersPage() {
+  const [users, setUsers] = useState<any[]>([])
+  const [loading, setLoading] = useState(true)
+  const [error, setError] = useState<string | null>(null)
+
+  useEffect(() => {
+    getUsers()
+      .then(data => setUsers(data))
+      .catch(err => setError(err.message))
+      .finally(() => setLoading(false))
+  }, [])
+
+  if (loading) return <p>Chargement...</p>
+  if (error) return <p>Erreur : {error}</p>
+
+  return (
+    <div>
+      <h1>Liste des utilisateurs</h1>
+      <ul>
+        {users.map(user => (
+          <li key={user.id}>{user.email} - {user.role}</li>
+        ))}
+      </ul>
+    </div>
+  )
+}

commit dd0e2e1cae09c27309fb2970ac2c73f13c52633f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:51:25 2025 +0200

    Create useAuth.ts

diff --git a/src/hooks/useAuth.ts b/src/hooks/useAuth.ts
new file mode 100644
index 0000000..093e662
--- /dev/null
+++ b/src/hooks/useAuth.ts
@@ -0,0 +1,45 @@
+import { useState, useEffect } from 'react'
+import { supabase } from '@/lib/supabase'
+
+export function useAuth() {
+  const [user, setUser] = useState(supabase.auth.getUser ? null : null)
+  const [loading, setLoading] = useState(true)
+
+  useEffect(() => {
+    // Vérifie l'utilisateur connecté au montage du hook
+    supabase.auth.getUser().then(({ data, error }) => {
+      if (!error && data.user) {
+        setUser(data.user)
+      } else {
+        setUser(null)
+      }
+      setLoading(false)
+    })
+
+    // Écoute les changements d'état d'authentification
+    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {
+      setUser(session?.user ?? null)
+    })
+
+    return () => {
+      listener?.subscription.unsubscribe()
+    }
+  }, [])
+
+  const signIn = async (email: string, password: string) => {
+    const { error } = await supabase.auth.signInWithPassword({ email, password })
+    if (error) throw error
+  }
+
+  const signUp = async (email: string, password: string) => {
+    const { error } = await supabase.auth.signUp({ email, password })
+    if (error) throw error
+  }
+
+  const signOut = async () => {
+    await supabase.auth.signOut()
+    setUser(null)
+  }
+
+  return { user, loading, signIn, signUp, signOut }
+}

commit 43fe5c5ddb4540ad1212f1f11104d2597867f80f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Sun Jul 20 23:53:22 2025 +0200

    Create AuthForm.tsx

diff --git a/src/components/AuthForm.tsx b/src/components/AuthForm.tsx
new file mode 100644
index 0000000..7d19217
--- /dev/null
+++ b/src/components/AuthForm.tsx
@@ -0,0 +1,62 @@
+import React, { useState } from 'react'
+import { useAuth } from '@/hooks/useAuth'
+
+export default function AuthForm() {
+  const { user, loading, signIn, signUp, signOut } = useAuth()
+  const [email, setEmail] = useState('')
+  const [password, setPassword] = useState('')
+  const [mode, setMode] = useState<'signin' | 'signup'>('signin')
+  const [error, setError] = useState<string | null>(null)
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault()
+    setError(null)
+    try {
+      if (mode === 'signin') {
+        await signIn(email, password)
+      } else {
+        await signUp(email, password)
+      }
+    } catch (err: any) {
+      setError(err.message)
+    }
+  }
+
+  if (loading) return <p>Chargement...</p>
+
+  if (user)
+    return (
+      <div>
+        <p>Connecté en tant que : {user.email}</p>
+        <button onClick={signOut}>Se déconnecter</button>
+      </div>
+    )
+
+  return (
+    <form onSubmit={handleSubmit}>
+      <h2>{mode === 'signin' ? 'Se connecter' : "S'inscrire"}</h2>
+      {error && <p style={{ color: 'red' }}>{error}</p>}
+      <input
+        type="email"
+        placeholder="Email"
+        value={email}
+        onChange={e => setEmail(e.target.value)}
+        required
+      />
+      <input
+        type="password"
+        placeholder="Mot de passe"
+        value={password}
+        onChange={e => setPassword(e.target.value)}
+        required
+      />
+      <button type="submit">{mode === 'signin' ? 'Connexion' : "S'inscrire"}</button>
+      <p>
+        {mode === 'signin' ? "Pas encore de compte ?" : 'Déjà un compte ?'}{' '}
+        <button type="button" onClick={() => setMode(mode === 'signin' ? 'signup' : 'signin')}>
+          {mode === 'signin' ? "Créer un compte" : 'Se connecter'}
+        </button>
+      </p>
+    </form>
+  )
+}

commit 3be9b32723652538f324adceabdffd7e96e75150
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 15:52:48 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index 1534725..7405bff 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -1,80 +1,54 @@
 "use client"
 
-import { useState, useEffect } from "react"
+import React, { useEffect, useState } from "react"
 import Link from "next/link"
+import { Card, CardContent } from "@/components/ui/card"
 import { Button } from "@/components/ui/button"
-import { Card } from "@/components/ui/card"
-import { fetchBeats, deleteBeat, type Beat } from "@/lib/api/beats"
+
+interface Beat {
+  id: string
+  title: string
+  status: "En ligne" | "Brouillon" | "En attente"
+}
 
 export default function BeatListPage() {
   const [beats, setBeats] = useState<Beat[]>([])
-  const [loading, setLoading] = useState(true)
-  const [error, setError] = useState<string | null>(null)
 
   useEffect(() => {
-    setLoading(true)
-    fetchBeats()
-      .then((data) => {
-        setBeats(data)
-        setError(null)
-      })
-      .catch((err) => setError(err.message))
-      .finally(() => setLoading(false))
-  }, [])
-
-  async function handleDelete(id: string) {
-    if (confirm("Voulez-vous vraiment supprimer ce beat ? Cette action est irréversible.")) {
-      try {
-        await deleteBeat(id)
-        setBeats((prev) => prev.filter((b) => b.id !== id))
-        alert("Beat supprimé avec succès.")
-      } catch (e) {
-        alert("Erreur lors de la suppression.")
-      }
+    // Exemple : tu devras remplacer par ton appel API réel
+    const fetchBeats = async () => {
+      const response = await fetch("/api/beatmaker/beats")
+      const data = await response.json()
+      setBeats(data)
     }
-  }
 
-  function getMinPrice(prices: Beat["prices"]) {
-    return Math.min(...Object.values(prices))
-  }
-
-  if (loading) return <p>Chargement...</p>
-  if (error) return <p className="text-red-600">Erreur: {error}</p>
-  if (beats.length === 0) return <p>Aucun beat disponible.</p>
+    fetchBeats()
+  }, [])
 
   return (
-    <div className="max-w-4xl mx-auto p-4">
-      <h1 className="text-2xl font-bold mb-6">Mes Beats</h1>
-
-      <div className="space-y-4">
-        {beats.map((beat) => (
-          <Card key={beat.id} className="flex items-center gap-4 p-4">
-            <img
-              src={beat.miniatureUrl || "/images/placeholder-beat.png"}
-              alt={`Miniature de ${beat.title}`}
-              className="w-20 h-20 object-cover rounded"
-            />
-            <div className="flex-1">
-              <h2 className="text-lg font-semibold">{beat.title}</h2>
-              <p>Prix minimum : {getMinPrice(beat.prices).toFixed(2)} €</p>
-            </div>
-            <div className="flex gap-2">
-              <Link href={`/beatmaker/admin/beat-edit/${beat.id}`}>
-                <Button variant="outline" size="sm">
-                  Éditer
-                </Button>
-              </Link>
-              <Button
-                variant="destructive"
-                size="sm"
-                onClick={() => handleDelete(beat.id)}
-              >
-                Supprimer
-              </Button>
-            </div>
-          </Card>
-        ))}
-      </div>
+    <div className="p-6 space-y-4">
+      <h1 className="text-2xl font-bold text-white">Mes Beats</h1>
+
+      {beats.length === 0 ? (
+        <p className="text-gray-400">Aucun beat trouvé.</p>
+      ) : (
+        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
+          {beats.map((beat) => (
+            <Card key={beat.id} className="bg-gray-900 text-white">
+              <CardContent className="p-4 space-y-2">
+                <h2 className="text-xl font-semibold">{beat.title}</h2>
+                <p className="text-sm text-gray-400">Statut : {beat.status}</p>
+                
+                {beat?.id && (
+                  <Link href={`/beatmaker/admin/beat-edit/${beat.id}`}>
+                    <Button className="mt-2">Modifier</Button>
+                  </Link>
+                )}
+              </CardContent>
+            </Card>
+          ))}
+        </div>
+      )}
     </div>
   )
 }

commit 4ce9f11a82cb4b8d61d0df3b7480f5c42e3fad31
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 15:56:51 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/[id]/page.tsx b/src/app/beatmaker/admin/beat-edit/[id]/page.tsx
new file mode 100644
index 0000000..a668447
--- /dev/null
+++ b/src/app/beatmaker/admin/beat-edit/[id]/page.tsx
@@ -0,0 +1,105 @@
+"use client"
+
+import { useRouter } from "next/navigation"
+import { useEffect, useState } from "react"
+import { useParams } from "next/navigation"
+import { Input } from "@/components/ui/input"
+import { Button } from "@/components/ui/button"
+import { Label } from "@/components/ui/label"
+import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select"
+import { toast } from "sonner"
+
+interface Beat {
+  id: string
+  title: string
+  status: "En ligne" | "Brouillon" | "En attente"
+}
+
+export default function BeatEditPage() {
+  const router = useRouter()
+  const params = useParams()
+  const { id } = params as { id?: string }
+
+  const [beat, setBeat] = useState<Beat | null>(null)
+  const [loading, setLoading] = useState(true)
+
+  useEffect(() => {
+    if (!id) return
+
+    const fetchBeat = async () => {
+      try {
+        const res = await fetch(`/api/beatmaker/beats/${id}`)
+        const data = await res.json()
+        setBeat(data)
+      } catch (error) {
+        toast.error("Erreur lors du chargement du beat.")
+      } finally {
+        setLoading(false)
+      }
+    }
+
+    fetchBeat()
+  }, [id])
+
+  const handleSave = async () => {
+    try {
+      const res = await fetch(`/api/beatmaker/beats/${id}`, {
+        method: "PUT",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify(beat),
+      })
+
+      if (!res.ok) throw new Error("Erreur")
+
+      toast.success("Modifications enregistrées !")
+      router.push("/beatmaker/admin/beat-list")
+    } catch {
+      toast.error("Erreur lors de l'enregistrement.")
+    }
+  }
+
+  if (!id) return <p className="text-red-500 p-4">ID invalide.</p>
+  if (loading) return <p className="p-4 text-gray-400">Chargement...</p>
+  if (!beat) return <p className="p-4 text-red-400">Beat introuvable.</p>
+
+  return (
+    <div className="max-w-xl mx-auto p-6 space-y-6">
+      <h1 className="text-2xl font-bold text-white">Modifier le beat</h1>
+
+      <div className="space-y-2">
+        <Label htmlFor="title">Titre</Label>
+        <Input
+          id="title"
+          value={beat.title}
+          onChange={(e) => setBeat({ ...beat, title: e.target.value })}
+        />
+      </div>
+
+      <div className="space-y-2">
+        <Label htmlFor="status">Statut</Label>
+        <Select
+          value={beat.status}
+          onValueChange={(value) =>
+            setBeat({ ...beat, status: value as Beat["status"] })
+          }
+        >
+          <SelectTrigger>
+            <SelectValue placeholder="Sélectionner un statut" />
+          </SelectTrigger>
+          <SelectContent>
+            <SelectItem value="En ligne">En ligne</SelectItem>
+            <SelectItem value="Brouillon">Brouillon</SelectItem>
+            <SelectItem value="En attente">En attente</SelectItem>
+          </SelectContent>
+        </Select>
+      </div>
+
+      <div className="flex gap-4">
+        <Button onClick={handleSave}>Enregistrer</Button>
+        <Button variant="ghost" onClick={() => router.back()}>
+          Annuler
+        </Button>
+      </div>
+    </div>
+  )
+}

commit 6bfc4f2fec50cf6ea9a9b42876f7f79327ca6634
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 15:59:09 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/admin/beat-add/page.tsx b/src/app/beatmaker/admin/beat-add/page.tsx
new file mode 100644
index 0000000..5ef4dd7
--- /dev/null
+++ b/src/app/beatmaker/admin/beat-add/page.tsx
@@ -0,0 +1,78 @@
+"use client"
+
+import { useRouter } from "next/navigation"
+import { useState } from "react"
+import { Input } from "@/components/ui/input"
+import { Button } from "@/components/ui/button"
+import { Label } from "@/components/ui/label"
+import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select"
+import { toast } from "sonner"
+
+export default function BeatAddPage() {
+  const router = useRouter()
+
+  const [title, setTitle] = useState("")
+  const [status, setStatus] = useState<"En ligne" | "Brouillon" | "En attente">("Brouillon")
+  const [loading, setLoading] = useState(false)
+
+  const handleCreate = async () => {
+    if (!title) {
+      toast.error("Le titre est requis.")
+      return
+    }
+
+    setLoading(true)
+
+    try {
+      const res = await fetch("/api/beatmaker/beats", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ title, status }),
+      })
+
+      if (!res.ok) throw new Error()
+
+      const data = await res.json()
+      toast.success("Beat créé avec succès.")
+      router.push(`/beatmaker/admin/beat-edit/${data.id}`)
+    } catch {
+      toast.error("Erreur lors de la création du beat.")
+    } finally {
+      setLoading(false)
+    }
+  }
+
+  return (
+    <div className="max-w-xl mx-auto p-6 space-y-6">
+      <h1 className="text-2xl font-bold text-white">Ajouter un beat</h1>
+
+      <div className="space-y-2">
+        <Label htmlFor="title">Titre du beat</Label>
+        <Input
+          id="title"
+          value={title}
+          onChange={(e) => setTitle(e.target.value)}
+          placeholder="Ex. : Trap Vibes Vol.2"
+        />
+      </div>
+
+      <div className="space-y-2">
+        <Label htmlFor="status">Statut initial</Label>
+        <Select value={status} onValueChange={(v) => setStatus(v as any)}>
+          <SelectTrigger>
+            <SelectValue placeholder="Choisir un statut" />
+          </SelectTrigger>
+          <SelectContent>
+            <SelectItem value="En ligne">En ligne</SelectItem>
+            <SelectItem value="Brouillon">Brouillon</SelectItem>
+            <SelectItem value="En attente">En attente</SelectItem>
+          </SelectContent>
+        </Select>
+      </div>
+
+      <Button disabled={loading} onClick={handleCreate}>
+        Créer le beat
+      </Button>
+    </div>
+  )
+}

commit e9c29a58c583bed77ed08ad408475ba3967d58f1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:01:07 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-add/page.tsx b/src/app/beatmaker/admin/beat-add/page.tsx
index 5ef4dd7..caa43e2 100644
--- a/src/app/beatmaker/admin/beat-add/page.tsx
+++ b/src/app/beatmaker/admin/beat-add/page.tsx
@@ -13,26 +13,46 @@ export default function BeatAddPage() {
 
   const [title, setTitle] = useState("")
   const [status, setStatus] = useState<"En ligne" | "Brouillon" | "En attente">("Brouillon")
+  const [mp3, setMp3] = useState<File | null>(null)
+  const [wav, setWav] = useState<File | null>(null)
+  const [stems, setStems] = useState<FileList | null>(null)
   const [loading, setLoading] = useState(false)
 
   const handleCreate = async () => {
-    if (!title) {
-      toast.error("Le titre est requis.")
-      return
+    if (!title) return toast.error("Le titre est requis.")
+    if (!mp3) return toast.error("Le fichier MP3 est requis.")
+    if (mp3.size > 15 * 1024 * 1024) return toast.error("MP3 trop lourd (max 15 Mo).")
+    if (wav && wav.size > 50 * 1024 * 1024) return toast.error("WAV trop lourd (max 50 Mo).")
+    if (stems) {
+      for (let i = 0; i < stems.length; i++) {
+        if (stems[i].size > 60 * 1024 * 1024) {
+          return toast.error(`Stem trop lourd (${stems[i].name}) (max 60 Mo).`)
+        }
+      }
     }
 
     setLoading(true)
 
     try {
+      const formData = new FormData()
+      formData.append("title", title)
+      formData.append("status", status)
+      formData.append("mp3", mp3)
+      if (wav) formData.append("wav", wav)
+      if (stems) {
+        Array.from(stems).forEach((file) => {
+          formData.append("stems", file)
+        })
+      }
+
       const res = await fetch("/api/beatmaker/beats", {
         method: "POST",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify({ title, status }),
+        body: formData,
       })
 
       if (!res.ok) throw new Error()
-
       const data = await res.json()
+
       toast.success("Beat créé avec succès.")
       router.push(`/beatmaker/admin/beat-edit/${data.id}`)
     } catch {
@@ -52,15 +72,15 @@ export default function BeatAddPage() {
           id="title"
           value={title}
           onChange={(e) => setTitle(e.target.value)}
-          placeholder="Ex. : Trap Vibes Vol.2"
+          placeholder="Ex. : Trap Soul"
         />
       </div>
 
       <div className="space-y-2">
-        <Label htmlFor="status">Statut initial</Label>
+        <Label htmlFor="status">Statut</Label>
         <Select value={status} onValueChange={(v) => setStatus(v as any)}>
           <SelectTrigger>
-            <SelectValue placeholder="Choisir un statut" />
+            <SelectValue placeholder="Statut" />
           </SelectTrigger>
           <SelectContent>
             <SelectItem value="En ligne">En ligne</SelectItem>
@@ -70,6 +90,37 @@ export default function BeatAddPage() {
         </Select>
       </div>
 
+      <div className="space-y-2">
+        <Label htmlFor="mp3">Fichier MP3 (max 15 Mo)</Label>
+        <Input
+          id="mp3"
+          type="file"
+          accept=".mp3"
+          onChange={(e) => setMp3(e.target.files?.[0] || null)}
+        />
+      </div>
+
+      <div className="space-y-2">
+        <Label htmlFor="wav">Fichier WAV (max 50 Mo, optionnel)</Label>
+        <Input
+          id="wav"
+          type="file"
+          accept=".wav"
+          onChange={(e) => setWav(e.target.files?.[0] || null)}
+        />
+      </div>
+
+      <div className="space-y-2">
+        <Label htmlFor="stems">Stems (multipiste, max 60 Mo chacun, optionnel)</Label>
+        <Input
+          id="stems"
+          type="file"
+          accept=".wav,.mp3"
+          multiple
+          onChange={(e) => setStems(e.target.files)}
+        />
+      </div>
+
       <Button disabled={loading} onClick={handleCreate}>
         Créer le beat
       </Button>

commit 47c2d4accfafb2242a49f4d9e73cd6eca90c1eaa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:10:22 2025 +0200

    Update Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
index d6f00ec..0927ddc 100644
--- a/src/components/Footer.tsx
+++ b/src/components/Footer.tsx
@@ -1,82 +1,22 @@
-import React from "react"
 import Link from "next/link"
 
-export default function Footer() {
+export function Footer() {
   return (
-    <footer className="bg-gray-900 text-gray-400 py-10 px-4">
-      <div className="max-w-4xl mx-auto flex flex-col items-center space-y-6">
-
-        {/* Logo - remplace cette div par ton image logo */}
-        <div>
-          <img
-            src="/images/logo-beatsmarket.png"
-            alt="Logo BeatsMarket"
-            className="h-16 w-auto mx-auto"
-          />
-        </div>
-
-        {/* Liens */}
-        <nav className="flex flex-wrap justify-center gap-6 text-lg font-medium">
-          <Link href="/help" className="hover:text-pink-500 transition">
-            Aide
-          </Link>
-          <Link href="/about" className="hover:text-pink-500 transition">
-            À propos
-          </Link>
-          <Link href="/terms" className="hover:text-pink-500 transition">
-            CGV
-          </Link>
-          <Link href="/pricing" className="hover:text-pink-500 transition">
-            Tarifs
-          </Link>
-        </nav>
-
-        {/* Nom du site */}
-        <div className="text-white text-xl font-bold text-center">BeatsMarket</div>
-
-        {/* Tous droits réservés */}
-        <div className="text-gray-400 text-center text-sm">
-          © {new Date().getFullYear()} BeatsMarket. Tous droits réservés.
-        </div>
-
-        {/* Propulsé par */}
-        <div className="text-gray-400 text-center text-sm">
-          Propulsé par <a href="https://pourmastreet.com" target="_blank" rel="noopener noreferrer" className="hover:text-pink-500">Pour Ma Street</a>
-        </div>
-
-        {/* Images depuis ton téléphone */}
-        <div className="flex space-x-4 justify-center">
-          {/* Remplace les src par le chemin correct vers tes images */}
-          <img
-            src="/images/photo1.jpg"
-            alt="Photo 1"
-            className="h-12 w-auto rounded-md"
-          />
-          <img
-            src="/images/photo2.jpg"
-            alt="Photo 2"
-            className="h-12 w-auto rounded-md"
-          />
-          <img
-            src="/images/photo3.jpg"
-            alt="Photo 3"
-            className="h-12 w-auto rounded-md"
-          />
-        </div>
-
-        {/* Sélecteur langue (optionnel) */}
-        <div>
-          <select
-            aria-label="Sélection de la langue"
-            className="bg-gray-800 text-gray-200 py-1 px-3 rounded border border-gray-700 focus:outline-none focus:ring-2 focus:ring-pink-500"
-            defaultValue="fr"
-          >
-            <option value="fr">Français</option>
-            <option value="en">English</option>
-          </select>
-        </div>
-
-      </div>
+    <footer className="bg-zinc-900 text-white p-6">
+      <nav className="flex space-x-6">
+        <Link href="/help" className="hover:text-pink-500 transition">
+          Aide
+        </Link>
+        <Link href="/about" className="hover:text-pink-500 transition">
+          À propos
+        </Link>
+        <Link href="/terms" className="hover:text-pink-500 transition">
+          Conditions générales
+        </Link>
+        <Link href="/pricing" className="hover:text-pink-500 transition">
+          Tarifs
+        </Link>
+      </nav>
     </footer>
   )
 }

commit a32555a1161d2ff462bcd35077f2fdb9b15ff08d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:12:04 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index 7405bff..4f5425f 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -1,54 +1,54 @@
 "use client"
 
-import React, { useEffect, useState } from "react"
 import Link from "next/link"
-import { Card, CardContent } from "@/components/ui/card"
-import { Button } from "@/components/ui/button"
-
-interface Beat {
-  id: string
-  title: string
-  status: "En ligne" | "Brouillon" | "En attente"
-}
+import { useEffect, useState } from "react"
+import { BeatStatusBadge } from "@/components/beat/BeatStatusBadge"
 
 export default function BeatListPage() {
-  const [beats, setBeats] = useState<Beat[]>([])
+  const [beats, setBeats] = useState([])
 
   useEffect(() => {
-    // Exemple : tu devras remplacer par ton appel API réel
-    const fetchBeats = async () => {
-      const response = await fetch("/api/beatmaker/beats")
-      const data = await response.json()
-      setBeats(data)
+    // Exemple de fetch des beats du beatmaker
+    async function fetchBeats() {
+      const res = await fetch("/api/beatmaker/beats")
+      if (res.ok) {
+        const data = await res.json()
+        setBeats(data)
+      }
     }
-
     fetchBeats()
   }, [])
 
   return (
-    <div className="p-6 space-y-4">
-      <h1 className="text-2xl font-bold text-white">Mes Beats</h1>
-
-      {beats.length === 0 ? (
-        <p className="text-gray-400">Aucun beat trouvé.</p>
-      ) : (
-        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
+    <div className="p-6 max-w-4xl mx-auto">
+      <h1 className="text-2xl font-bold text-white mb-4">Mes Beats</h1>
+      <table className="w-full table-auto border-collapse border border-zinc-700 text-white">
+        <thead>
+          <tr>
+            <th className="border border-zinc-700 px-4 py-2">Titre</th>
+            <th className="border border-zinc-700 px-4 py-2">Statut</th>
+            <th className="border border-zinc-700 px-4 py-2">Actions</th>
+          </tr>
+        </thead>
+        <tbody>
           {beats.map((beat) => (
-            <Card key={beat.id} className="bg-gray-900 text-white">
-              <CardContent className="p-4 space-y-2">
-                <h2 className="text-xl font-semibold">{beat.title}</h2>
-                <p className="text-sm text-gray-400">Statut : {beat.status}</p>
-                
-                {beat?.id && (
-                  <Link href={`/beatmaker/admin/beat-edit/${beat.id}`}>
-                    <Button className="mt-2">Modifier</Button>
-                  </Link>
-                )}
-              </CardContent>
-            </Card>
+            <tr key={beat.id} className="hover:bg-zinc-800">
+              <td className="border border-zinc-700 px-4 py-2">
+                <Link href={`/beatmaker/admin/beat-edit/${beat.id}`} className="text-pink-500 hover:underline">
+                  {beat.title}
+                </Link>
+              </td>
+              <td className="border border-zinc-700 px-4 py-2">
+                <BeatStatusBadge status={beat.status} />
+              </td>
+              <td className="border border-zinc-700 px-4 py-2">
+                {/* Actions : éditer, supprimer, etc. */}
+                {/* À implémenter */}
+              </td>
+            </tr>
           ))}
-        </div>
-      )}
+        </tbody>
+      </table>
     </div>
   )
 }

commit 6aa77ff1b3468ea2862074d1c608d7c95edde876
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:14:36 2025 +0200

    Create Link.tsx

diff --git a/src/components/ui/Link.tsx b/src/components/ui/Link.tsx
new file mode 100644
index 0000000..1613dc5
--- /dev/null
+++ b/src/components/ui/Link.tsx
@@ -0,0 +1,17 @@
+"use client"
+
+import NextLink, { LinkProps } from "next/link"
+import React from "react"
+
+interface Props extends LinkProps {
+  className?: string
+  children: React.ReactNode
+}
+
+export function Link({ className, children, ...props }: Props) {
+  return (
+    <NextLink {...props} className={className}>
+      {children}
+    </NextLink>
+  )
+}

commit 68fe0c677d087e1e19857b15799e889b1ad0db7b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:16:26 2025 +0200

    Create BeatStatusBadge.tsx

diff --git a/src/components/beat/BeatStatusBadge.tsx b/src/components/beat/BeatStatusBadge.tsx
new file mode 100644
index 0000000..a813df8
--- /dev/null
+++ b/src/components/beat/BeatStatusBadge.tsx
@@ -0,0 +1,14 @@
+import { Badge } from "@/components/ui/badge"
+
+export default function BeatStatusBadge({ status }: { status: string }) {
+  const map: Record<string, { label: string; variant: "secondary" | "success" | "warning" | "destructive" }> = {
+    draft: { label: "Brouillon", variant: "secondary" },
+    published: { label: "En ligne", variant: "success" },
+    disabled: { label: "Retiré", variant: "warning" },
+    blocked: { label: "Désactivé", variant: "destructive" },
+  }
+
+  const info = map[status] || { label: "Inconnu", variant: "secondary" }
+
+  return <Badge variant={info.variant}>{info.label}</Badge>
+}

commit 7436ea2db86206161de847ae7371c5ee25134482
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:18:29 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/page.tsx b/src/app/beatmaker/admin/beat-edit/page.tsx
index faebdda..6e89d3a 100644
--- a/src/app/beatmaker/admin/beat-edit/page.tsx
+++ b/src/app/beatmaker/admin/beat-edit/page.tsx
@@ -1,179 +1,92 @@
 "use client"
 
-import { useState, useEffect } from "react"
-import { useRouter, useSearchParams } from "next/navigation"
+import { useRouter } from "next/navigation"
+import { useEffect, useState } from "react"
+import { useParams } from "next/navigation"
 import { Input } from "@/components/ui/input"
-import { Textarea } from "@/components/ui/textarea"
 import { Button } from "@/components/ui/button"
 import { Label } from "@/components/ui/label"
-import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
-import { fetchBeats, saveBeat, type Beat } from "@/lib/api/beats"
-
-type LicenseType = "basique" | "premium" | "exclusive" | "exclusive_plus"
+import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select"
+import { toast } from "sonner"
+import BeatStatusBadge from "@/components/beat/BeatStatusBadge"
 
 export default function BeatEditPage() {
   const router = useRouter()
-  const searchParams = useSearchParams()
-  const beatId = searchParams.get("id") || ""
+  const params = useParams()
+  const beatId = params?.id
 
   const [title, setTitle] = useState("")
-  const [description, setDescription] = useState("")
-  const [prices, setPrices] = useState<Record<LicenseType, number>>({
-    basique: 0,
-    premium: 0,
-    exclusive: 0,
-    exclusive_plus: 0,
-  })
-  const [miniatureUrl, setMiniatureUrl] = useState("")
+  const [status, setStatus] = useState<"draft" | "published" | "disabled" | "blocked">("draft")
   const [loading, setLoading] = useState(false)
-  const [error, setError] = useState<string | null>(null)
 
-  // Charger les données du beat si id présent
   useEffect(() => {
     if (!beatId) return
-    setLoading(true)
-    fetchBeats()
-      .then((beats) => {
-        const beat = beats.find((b) => b.id === beatId)
-        if (beat) {
-          setTitle(beat.title)
-          setDescription(beat.description || "")
-          setPrices(beat.prices)
-          setMiniatureUrl(beat.miniatureUrl || "")
-          setError(null)
-        } else {
-          setError("Beat introuvable")
-        }
-      })
-      .catch(() => setError("Erreur chargement beat"))
-      .finally(() => setLoading(false))
+    async function fetchBeat() {
+      const res = await fetch(`/api/beatmaker/beats/${beatId}`)
+      if (res.ok) {
+        const data = await res.json()
+        setTitle(data.title)
+        setStatus(data.status)
+      } else {
+        toast.error("Beat introuvable.")
+        router.push("/beatmaker/admin/beat-list")
+      }
+    }
+    fetchBeat()
   }, [beatId])
 
-  const COMMISSION_RATE = 0.15
-  const TVA_RATE = 0.20
-  const PROMO_RATE = 0 // À récupérer dynamiquement
-
-  function calcNetGain(price: number) {
-    if (price <= 0) return 0
-    const afterPromo = price * (1 - PROMO_RATE)
-    const commission = afterPromo * COMMISSION_RATE
-    const tva = afterPromo * TVA_RATE
-    return afterPromo - commission - tva
-  }
-
-  function handlePriceChange(license: LicenseType, value: string) {
-    const val = parseFloat(value)
-    if (isNaN(val) || val < 0) return
-    setPrices((prev) => ({ ...prev, [license]: val }))
-  }
-
-  async function handleSave() {
-    if (!title.trim()) {
-      alert("Le titre est obligatoire.")
-      return
-    }
+  const handleSave = async () => {
     setLoading(true)
     try {
-      await saveBeat({
-        id: beatId || undefined,
-        title,
-        description,
-        miniatureUrl,
-        prices,
+      const res = await fetch(`/api/beatmaker/beats/${beatId}`, {
+        method: "PUT",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ title, status }),
       })
-      alert("Beat sauvegardé avec succès.")
-      router.push("/beatmaker/admin/beat-list")
+      if (!res.ok) throw new Error()
+      toast.success("Beat mis à jour.")
     } catch {
-      alert("Erreur lors de la sauvegarde.")
+      toast.error("Erreur lors de la mise à jour.")
     } finally {
       setLoading(false)
     }
   }
 
-  if (loading) return <p>Chargement...</p>
-  if (error) return <p className="text-red-600">{error}</p>
-
   return (
-    <div className="max-w-3xl mx-auto p-4">
-      <h1 className="text-2xl font-bold mb-6">
-        {beatId ? "Édition Beat" : "Création Beat"}
-      </h1>
+    <div className="max-w-xl mx-auto p-6 space-y-6">
+      <h1 className="text-2xl font-bold text-white">Modifier le beat</h1>
+
+      <div className="space-y-2">
+        <Label htmlFor="title">Titre du beat</Label>
+        <Input
+          id="title"
+          value={title}
+          onChange={(e) => setTitle(e.target.value)}
+          placeholder="Titre"
+        />
+      </div>
 
-      <Card className="mb-6">
-        <CardHeader>
-          <CardTitle>Informations générales</CardTitle>
-        </CardHeader>
-        <CardContent className="space-y-4">
-          <div>
-            <Label htmlFor="title">Titre *</Label>
-            <Input
-              id="title"
-              type="text"
-              value={title}
-              onChange={(e) => setTitle(e.target.value)}
-              placeholder="Nom du beat"
-            />
-          </div>
-          <div>
-            <Label htmlFor="description">Description</Label>
-            <Textarea
-              id="description"
-              value={description}
-              onChange={(e) => setDescription(e.target.value)}
-              placeholder="Description du beat"
-              rows={4}
-            />
-          </div>
-          <div>
-            <Label htmlFor="miniature">Miniature (URL)</Label>
-            <Input
-              id="miniature"
-              type="url"
-              value={miniatureUrl}
-              onChange={(e) => setMiniatureUrl(e.target.value)}
-              placeholder="https://exemple.com/image.jpg"
-            />
-            <p className="text-sm text-gray-500 mt-1">
-              Il est conseillé d&apos;ajouter une miniature pour mieux attirer
-              les clients.
-            </p>
-          </div>
-        </CardContent>
-      </Card>
+      <div className="space-y-2">
+        <Label htmlFor="status">Statut</Label>
+        <Select value={status} onValueChange={(v) => setStatus(v as any)}>
+          <SelectTrigger>
+            <SelectValue placeholder="Statut" />
+          </SelectTrigger>
+          <SelectContent>
+            <SelectItem value="draft">Brouillon</SelectItem>
+            <SelectItem value="published">En ligne</SelectItem>
+            <SelectItem value="disabled">Retiré</SelectItem>
+            {/* Le statut "blocked" est réservé au SuperAdmin, donc pas dans cette liste */}
+          </SelectContent>
+        </Select>
+      </div>
 
-      <Card className="mb-6">
-        <CardHeader>
-          <CardTitle>Prix par licence</CardTitle>
-        </CardHeader>
-        <CardContent className="space-y-4">
-          {(["basique", "premium", "exclusive", "exclusive_plus"] as LicenseType[]).map(
-            (license) => (
-              <div key={license} className="flex items-center gap-4">
-                <Label className="w-32 capitalize" htmlFor={`price-${license}`}>
-                  {license.replace("_", " ")}
-                </Label>
-                <Input
-                  id={`price-${license}`}
-                  type="number"
-                  min={0}
-                  step={0.01}
-                  value={prices[license]}
-                  onChange={(e) => handlePriceChange(license, e.target.value)}
-                />
-                <div className="ml-auto text-right w-40">
-                  Gain net estimé:{" "}
-                  <span className="font-semibold">
-                    {calcNetGain(prices[license]).toFixed(2)} €
-                  </span>
-                </div>
-              </div>
-            )
-          )}
-        </CardContent>
-      </Card>
+      <div>
+        <BeatStatusBadge status={status} />
+      </div>
 
-      <Button onClick={handleSave} className="w-full" disabled={loading}>
-        {loading ? "Sauvegarde..." : "Sauvegarder le beat"}
+      <Button disabled={loading} onClick={handleSave}>
+        Sauvegarder
       </Button>
     </div>
   )

commit 59fbb9f2390fd6bce653ab9f14bed84ef2225344
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:20:03 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index 4f5425f..8ac95d5 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -2,13 +2,13 @@
 
 import Link from "next/link"
 import { useEffect, useState } from "react"
-import { BeatStatusBadge } from "@/components/beat/BeatStatusBadge"
+import BeatStatusBadge from "@/components/beat/BeatStatusBadge"
 
 export default function BeatListPage() {
   const [beats, setBeats] = useState([])
+  const [filter, setFilter] = useState<"all" | "draft" | "published" | "disabled">("all")
 
   useEffect(() => {
-    // Exemple de fetch des beats du beatmaker
     async function fetchBeats() {
       const res = await fetch("/api/beatmaker/beats")
       if (res.ok) {
@@ -19,9 +19,39 @@ export default function BeatListPage() {
     fetchBeats()
   }, [])
 
+  const filteredBeats = beats.filter((beat) => filter === "all" || beat.status === filter)
+
   return (
     <div className="p-6 max-w-4xl mx-auto">
       <h1 className="text-2xl font-bold text-white mb-4">Mes Beats</h1>
+
+      <div className="mb-4 flex space-x-2">
+        <button
+          className={`px-4 py-2 rounded ${filter === "all" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
+          onClick={() => setFilter("all")}
+        >
+          Tous
+        </button>
+        <button
+          className={`px-4 py-2 rounded ${filter === "draft" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
+          onClick={() => setFilter("draft")}
+        >
+          Brouillons
+        </button>
+        <button
+          className={`px-4 py-2 rounded ${filter === "published" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
+          onClick={() => setFilter("published")}
+        >
+          En ligne
+        </button>
+        <button
+          className={`px-4 py-2 rounded ${filter === "disabled" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
+          onClick={() => setFilter("disabled")}
+        >
+          Retirés
+        </button>
+      </div>
+
       <table className="w-full table-auto border-collapse border border-zinc-700 text-white">
         <thead>
           <tr>
@@ -31,7 +61,7 @@ export default function BeatListPage() {
           </tr>
         </thead>
         <tbody>
-          {beats.map((beat) => (
+          {filteredBeats.map((beat) => (
             <tr key={beat.id} className="hover:bg-zinc-800">
               <td className="border border-zinc-700 px-4 py-2">
                 <Link href={`/beatmaker/admin/beat-edit/${beat.id}`} className="text-pink-500 hover:underline">
@@ -42,8 +72,7 @@ export default function BeatListPage() {
                 <BeatStatusBadge status={beat.status} />
               </td>
               <td className="border border-zinc-700 px-4 py-2">
-                {/* Actions : éditer, supprimer, etc. */}
-                {/* À implémenter */}
+                {/* Actions à implémenter */}
               </td>
             </tr>
           ))}

commit 7aa1dedcb4789299a61d7839effd60984ee22f14
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:22:32 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/[id]/page.tsx b/src/app/beatmaker/admin/beat-edit/[id]/page.tsx
index a668447..de8d951 100644
--- a/src/app/beatmaker/admin/beat-edit/[id]/page.tsx
+++ b/src/app/beatmaker/admin/beat-edit/[id]/page.tsx
@@ -1,105 +1,44 @@
 "use client"
 
-import { useRouter } from "next/navigation"
 import { useEffect, useState } from "react"
-import { useParams } from "next/navigation"
-import { Input } from "@/components/ui/input"
-import { Button } from "@/components/ui/button"
-import { Label } from "@/components/ui/label"
-import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select"
-import { toast } from "sonner"
-
-interface Beat {
-  id: string
-  title: string
-  status: "En ligne" | "Brouillon" | "En attente"
-}
+import { useParams, useRouter } from "next/navigation"
+import BeatForm from "@/components/beat/BeatForm"
 
 export default function BeatEditPage() {
+  const { id } = useParams()
   const router = useRouter()
-  const params = useParams()
-  const { id } = params as { id?: string }
-
-  const [beat, setBeat] = useState<Beat | null>(null)
+  const [beat, setBeat] = useState(null)
   const [loading, setLoading] = useState(true)
 
   useEffect(() => {
-    if (!id) return
-
-    const fetchBeat = async () => {
-      try {
-        const res = await fetch(`/api/beatmaker/beats/${id}`)
+    async function fetchBeat() {
+      const res = await fetch(`/api/beatmaker/beats/${id}`)
+      if (res.ok) {
         const data = await res.json()
         setBeat(data)
-      } catch (error) {
-        toast.error("Erreur lors du chargement du beat.")
-      } finally {
-        setLoading(false)
+      } else {
+        router.push("/beatmaker/admin/beat-list")
       }
+      setLoading(false)
     }
 
-    fetchBeat()
-  }, [id])
-
-  const handleSave = async () => {
-    try {
-      const res = await fetch(`/api/beatmaker/beats/${id}`, {
-        method: "PUT",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify(beat),
-      })
-
-      if (!res.ok) throw new Error("Erreur")
-
-      toast.success("Modifications enregistrées !")
-      router.push("/beatmaker/admin/beat-list")
-    } catch {
-      toast.error("Erreur lors de l'enregistrement.")
+    if (id) {
+      fetchBeat()
     }
+  }, [id, router])
+
+  if (loading) {
+    return <div className="p-6 text-white">Chargement...</div>
   }
 
-  if (!id) return <p className="text-red-500 p-4">ID invalide.</p>
-  if (loading) return <p className="p-4 text-gray-400">Chargement...</p>
-  if (!beat) return <p className="p-4 text-red-400">Beat introuvable.</p>
+  if (!beat) {
+    return <div className="p-6 text-red-500">Beat introuvable</div>
+  }
 
   return (
-    <div className="max-w-xl mx-auto p-6 space-y-6">
-      <h1 className="text-2xl font-bold text-white">Modifier le beat</h1>
-
-      <div className="space-y-2">
-        <Label htmlFor="title">Titre</Label>
-        <Input
-          id="title"
-          value={beat.title}
-          onChange={(e) => setBeat({ ...beat, title: e.target.value })}
-        />
-      </div>
-
-      <div className="space-y-2">
-        <Label htmlFor="status">Statut</Label>
-        <Select
-          value={beat.status}
-          onValueChange={(value) =>
-            setBeat({ ...beat, status: value as Beat["status"] })
-          }
-        >
-          <SelectTrigger>
-            <SelectValue placeholder="Sélectionner un statut" />
-          </SelectTrigger>
-          <SelectContent>
-            <SelectItem value="En ligne">En ligne</SelectItem>
-            <SelectItem value="Brouillon">Brouillon</SelectItem>
-            <SelectItem value="En attente">En attente</SelectItem>
-          </SelectContent>
-        </Select>
-      </div>
-
-      <div className="flex gap-4">
-        <Button onClick={handleSave}>Enregistrer</Button>
-        <Button variant="ghost" onClick={() => router.back()}>
-          Annuler
-        </Button>
-      </div>
+    <div className="p-6 max-w-4xl mx-auto">
+      <h1 className="text-2xl font-bold text-white mb-4">Modifier le beat</h1>
+      <BeatForm initialData={beat} />
     </div>
   )
 }

commit f9fcca91d585f5ce67ecb6f473766bdd822686b8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:24:33 2025 +0200

    Create BeatForm.tsx

diff --git a/src/components/beat/BeatForm.tsx b/src/components/beat/BeatForm.tsx
new file mode 100644
index 0000000..51ef9af
--- /dev/null
+++ b/src/components/beat/BeatForm.tsx
@@ -0,0 +1,119 @@
+"use client"
+
+import { useState } from "react"
+import { useRouter } from "next/navigation"
+import { Input } from "@/components/ui/input"
+import { Button } from "@/components/ui/button"
+import { Textarea } from "@/components/ui/textarea"
+import { Label } from "@/components/ui/label"
+
+interface BeatData {
+  id?: string
+  title: string
+  description: string
+  bpm: number
+  genre: string
+  price: number
+}
+
+interface BeatFormProps {
+  initialData?: BeatData
+}
+
+export default function BeatForm({ initialData }: BeatFormProps) {
+  const router = useRouter()
+  const [formData, setFormData] = useState<BeatData>(
+    initialData || {
+      title: "",
+      description: "",
+      bpm: 120,
+      genre: "",
+      price: 0,
+    }
+  )
+  const [loading, setLoading] = useState(false)
+
+  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
+    const { name, value } = e.target
+    setFormData(prev => ({
+      ...prev,
+      [name]: name === "bpm" || name === "price" ? Number(value) : value,
+    }))
+  }
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault()
+    setLoading(true)
+
+    const method = formData.id ? "PUT" : "POST"
+    const url = formData.id
+      ? `/api/beatmaker/beats/${formData.id}`
+      : "/api/beatmaker/beats"
+
+    const res = await fetch(url, {
+      method,
+      headers: { "Content-Type": "application/json" },
+      body: JSON.stringify(formData),
+    })
+
+    setLoading(false)
+
+    if (res.ok) {
+      router.push("/beatmaker/admin/beat-list")
+    } else {
+      alert("Erreur lors de la sauvegarde.")
+    }
+  }
+
+  return (
+    <form onSubmit={handleSubmit} className="space-y-4">
+      <div>
+        <Label htmlFor="title">Titre</Label>
+        <Input id="title" name="title" value={formData.title} onChange={handleChange} required />
+      </div>
+
+      <div>
+        <Label htmlFor="description">Description</Label>
+        <Textarea
+          id="description"
+          name="description"
+          value={formData.description}
+          onChange={handleChange}
+        />
+      </div>
+
+      <div>
+        <Label htmlFor="bpm">BPM</Label>
+        <Input
+          id="bpm"
+          name="bpm"
+          type="number"
+          value={formData.bpm}
+          onChange={handleChange}
+          required
+        />
+      </div>
+
+      <div>
+        <Label htmlFor="genre">Genre</Label>
+        <Input id="genre" name="genre" value={formData.genre} onChange={handleChange} required />
+      </div>
+
+      <div>
+        <Label htmlFor="price">Prix (€)</Label>
+        <Input
+          id="price"
+          name="price"
+          type="number"
+          value={formData.price}
+          onChange={handleChange}
+          required
+        />
+      </div>
+
+      <Button type="submit" disabled={loading}>
+        {loading ? "Enregistrement..." : "Enregistrer"}
+      </Button>
+    </form>
+  )
+}

commit 042bac8e46d848acbc71edef48efe0eba4f8f6b7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:26:47 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index 8ac95d5..e94825d 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -1,83 +1,32 @@
-"use client"
+import { cookies } from "next/headers"
+import { createServerSupabaseClient } from "@/lib/supabase/server"
+import { redirect } from "next/navigation"
+import BeatTable from "@/components/beat/BeatTable"
 
-import Link from "next/link"
-import { useEffect, useState } from "react"
-import BeatStatusBadge from "@/components/beat/BeatStatusBadge"
+export default async function BeatListPage() {
+  const supabase = createServerSupabaseClient(cookies)
+  const {
+    data: { user },
+  } = await supabase.auth.getUser()
 
-export default function BeatListPage() {
-  const [beats, setBeats] = useState([])
-  const [filter, setFilter] = useState<"all" | "draft" | "published" | "disabled">("all")
+  if (!user) {
+    return redirect("/login")
+  }
 
-  useEffect(() => {
-    async function fetchBeats() {
-      const res = await fetch("/api/beatmaker/beats")
-      if (res.ok) {
-        const data = await res.json()
-        setBeats(data)
-      }
-    }
-    fetchBeats()
-  }, [])
+  const { data: beats, error } = await supabase
+    .from("beats")
+    .select("*")
+    .eq("user_id", user.id)
+    .order("created_at", { ascending: false })
 
-  const filteredBeats = beats.filter((beat) => filter === "all" || beat.status === filter)
+  if (error) {
+    console.error("Erreur de récupération des beats :", error.message)
+  }
 
   return (
-    <div className="p-6 max-w-4xl mx-auto">
-      <h1 className="text-2xl font-bold text-white mb-4">Mes Beats</h1>
-
-      <div className="mb-4 flex space-x-2">
-        <button
-          className={`px-4 py-2 rounded ${filter === "all" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
-          onClick={() => setFilter("all")}
-        >
-          Tous
-        </button>
-        <button
-          className={`px-4 py-2 rounded ${filter === "draft" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
-          onClick={() => setFilter("draft")}
-        >
-          Brouillons
-        </button>
-        <button
-          className={`px-4 py-2 rounded ${filter === "published" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
-          onClick={() => setFilter("published")}
-        >
-          En ligne
-        </button>
-        <button
-          className={`px-4 py-2 rounded ${filter === "disabled" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
-          onClick={() => setFilter("disabled")}
-        >
-          Retirés
-        </button>
-      </div>
-
-      <table className="w-full table-auto border-collapse border border-zinc-700 text-white">
-        <thead>
-          <tr>
-            <th className="border border-zinc-700 px-4 py-2">Titre</th>
-            <th className="border border-zinc-700 px-4 py-2">Statut</th>
-            <th className="border border-zinc-700 px-4 py-2">Actions</th>
-          </tr>
-        </thead>
-        <tbody>
-          {filteredBeats.map((beat) => (
-            <tr key={beat.id} className="hover:bg-zinc-800">
-              <td className="border border-zinc-700 px-4 py-2">
-                <Link href={`/beatmaker/admin/beat-edit/${beat.id}`} className="text-pink-500 hover:underline">
-                  {beat.title}
-                </Link>
-              </td>
-              <td className="border border-zinc-700 px-4 py-2">
-                <BeatStatusBadge status={beat.status} />
-              </td>
-              <td className="border border-zinc-700 px-4 py-2">
-                {/* Actions à implémenter */}
-              </td>
-            </tr>
-          ))}
-        </tbody>
-      </table>
+    <div className="p-6 space-y-4">
+      <h1 className="text-2xl font-bold">Mes Beats</h1>
+      <BeatTable beats={beats || []} />
     </div>
   )
 }

commit b964b81c04907f41b47b4fbe8b749beb1b1d247f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:28:01 2025 +0200

    Create BeatTable.tsx

diff --git a/src/components/beat/BeatTable.tsx b/src/components/beat/BeatTable.tsx
new file mode 100644
index 0000000..3c98863
--- /dev/null
+++ b/src/components/beat/BeatTable.tsx
@@ -0,0 +1,68 @@
+"use client"
+
+import { useState } from "react"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
+import { MoreVertical } from "lucide-react"
+import { format } from "date-fns"
+
+interface Beat {
+  id: string
+  title: string
+  status: "en ligne" | "brouillon" | "supprimé"
+  price: number
+  created_at: string
+}
+
+interface BeatTableProps {
+  beats: Beat[]
+}
+
+export default function BeatTable({ beats }: BeatTableProps) {
+  const [selectedId, setSelectedId] = useState<string | null>(null)
+
+  return (
+    <div className="rounded-xl border bg-card p-4 shadow-sm">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Titre</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead>Prix (€)</TableHead>
+            <TableHead>Date</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {beats.map((beat) => (
+            <TableRow key={beat.id}>
+              <TableCell>{beat.title}</TableCell>
+              <TableCell>
+                <Badge
+                  variant={
+                    beat.status === "en ligne"
+                      ? "success"
+                      : beat.status === "brouillon"
+                      ? "secondary"
+                      : "destructive"
+                  }
+                >
+                  {beat.status}
+                </Badge>
+              </TableCell>
+              <TableCell>{beat.price.toFixed(2)}</TableCell>
+              <TableCell>{format(new Date(beat.created_at), "dd/MM/yyyy")}</TableCell>
+              <TableCell className="text-right">
+                <Button variant="ghost" size="icon" onClick={() => setSelectedId(beat.id)}>
+                  <MoreVertical className="h-4 w-4" />
+                </Button>
+                {/* Tu peux ajouter ici un menu déroulant d’actions */}
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}

commit e9300878ed4c01a88141c3d6760f8209c5e1a84a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:29:28 2025 +0200

    Create BeatActionsMenu.tsx

diff --git a/src/components/beat/BeatActionsMenu.tsx b/src/components/beat/BeatActionsMenu.tsx
new file mode 100644
index 0000000..6e1bf54
--- /dev/null
+++ b/src/components/beat/BeatActionsMenu.tsx
@@ -0,0 +1,63 @@
+"use client"
+
+import { useState } from "react"
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu"
+import { Button } from "@/components/ui/button"
+import {
+  MoreHorizontal,
+  Pencil,
+  Trash,
+  Copy,
+  Eye,
+} from "lucide-react"
+
+interface BeatActionsMenuProps {
+  beatId: string
+  onEdit: (id: string) => void
+  onDelete: (id: string) => void
+  onDuplicate: (id: string) => void
+  onPreview: (id: string) => void
+}
+
+export default function BeatActionsMenu({
+  beatId,
+  onEdit,
+  onDelete,
+  onDuplicate,
+  onPreview,
+}: BeatActionsMenuProps) {
+  const [open, setOpen] = useState(false)
+
+  return (
+    <DropdownMenu open={open} onOpenChange={setOpen}>
+      <DropdownMenuTrigger asChild>
+        <Button variant="ghost" size="icon">
+          <MoreHorizontal className="h-4 w-4" />
+        </Button>
+      </DropdownMenuTrigger>
+      <DropdownMenuContent align="end" className="w-44">
+        <DropdownMenuItem onClick={() => onPreview(beatId)}>
+          <Eye className="mr-2 h-4 w-4" />
+          Aperçu
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onEdit(beatId)}>
+          <Pencil className="mr-2 h-4 w-4" />
+          Modifier
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onDuplicate(beatId)}>
+          <Copy className="mr-2 h-4 w-4" />
+          Dupliquer
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onDelete(beatId)} className="text-red-600">
+          <Trash className="mr-2 h-4 w-4" />
+          Supprimer
+        </DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+}

commit 86c7926bdf03629d3b99229de24e016b65b8d023
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:31:04 2025 +0200

    Update BeatForm.tsx

diff --git a/src/components/beat/BeatForm.tsx b/src/components/beat/BeatForm.tsx
index 51ef9af..c178bcb 100644
--- a/src/components/beat/BeatForm.tsx
+++ b/src/components/beat/BeatForm.tsx
@@ -1,118 +1,163 @@
 "use client"
 
 import { useState } from "react"
-import { useRouter } from "next/navigation"
 import { Input } from "@/components/ui/input"
+import { Label } from "@/components/ui/label"
 import { Button } from "@/components/ui/button"
 import { Textarea } from "@/components/ui/textarea"
-import { Label } from "@/components/ui/label"
+import { Switch } from "@/components/ui/switch"
+import { cn } from "@/lib/utils"
+
+interface BeatFormProps {
+  onSubmit: (data: BeatFormValues) => void
+  initialData?: BeatFormValues
+  loading?: boolean
+}
 
-interface BeatData {
-  id?: string
+export interface BeatFormValues {
   title: string
   description: string
-  bpm: number
   genre: string
-  price: number
+  tags: string
+  priceMp3: number
+  priceWav: number
+  priceExclusive: number
+  isVisible: boolean
 }
 
-interface BeatFormProps {
-  initialData?: BeatData
-}
-
-export default function BeatForm({ initialData }: BeatFormProps) {
-  const router = useRouter()
-  const [formData, setFormData] = useState<BeatData>(
+export default function BeatForm({
+  onSubmit,
+  initialData,
+  loading = false,
+}: BeatFormProps) {
+  const [form, setForm] = useState<BeatFormValues>(
     initialData || {
       title: "",
       description: "",
-      bpm: 120,
       genre: "",
-      price: 0,
+      tags: "",
+      priceMp3: 0,
+      priceWav: 0,
+      priceExclusive: 0,
+      isVisible: true,
     }
   )
-  const [loading, setLoading] = useState(false)
 
-  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
+  const handleChange = (
+    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
+  ) => {
     const { name, value } = e.target
-    setFormData(prev => ({
-      ...prev,
-      [name]: name === "bpm" || name === "price" ? Number(value) : value,
-    }))
+    setForm((prev) => ({ ...prev, [name]: value }))
   }
 
-  const handleSubmit = async (e: React.FormEvent) => {
-    e.preventDefault()
-    setLoading(true)
-
-    const method = formData.id ? "PUT" : "POST"
-    const url = formData.id
-      ? `/api/beatmaker/beats/${formData.id}`
-      : "/api/beatmaker/beats"
-
-    const res = await fetch(url, {
-      method,
-      headers: { "Content-Type": "application/json" },
-      body: JSON.stringify(formData),
-    })
-
-    setLoading(false)
+  const handleSwitch = (value: boolean) => {
+    setForm((prev) => ({ ...prev, isVisible: value }))
+  }
 
-    if (res.ok) {
-      router.push("/beatmaker/admin/beat-list")
-    } else {
-      alert("Erreur lors de la sauvegarde.")
-    }
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    onSubmit(form)
   }
 
   return (
-    <form onSubmit={handleSubmit} className="space-y-4">
-      <div>
-        <Label htmlFor="title">Titre</Label>
-        <Input id="title" name="title" value={formData.title} onChange={handleChange} required />
-      </div>
-
-      <div>
-        <Label htmlFor="description">Description</Label>
-        <Textarea
-          id="description"
-          name="description"
-          value={formData.description}
-          onChange={handleChange}
-        />
-      </div>
-
-      <div>
-        <Label htmlFor="bpm">BPM</Label>
-        <Input
-          id="bpm"
-          name="bpm"
-          type="number"
-          value={formData.bpm}
-          onChange={handleChange}
-          required
-        />
+    <form onSubmit={handleSubmit} className="space-y-6">
+      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+        <div>
+          <Label htmlFor="title">Titre</Label>
+          <Input
+            id="title"
+            name="title"
+            value={form.title}
+            onChange={handleChange}
+            required
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="genre">Genre</Label>
+          <Input
+            id="genre"
+            name="genre"
+            value={form.genre}
+            onChange={handleChange}
+            required
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="tags">Tags (séparés par des virgules)</Label>
+          <Input
+            id="tags"
+            name="tags"
+            value={form.tags}
+            onChange={handleChange}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="description">Description</Label>
+          <Textarea
+            id="description"
+            name="description"
+            value={form.description}
+            onChange={handleChange}
+            rows={3}
+          />
+        </div>
       </div>
 
-      <div>
-        <Label htmlFor="genre">Genre</Label>
-        <Input id="genre" name="genre" value={formData.genre} onChange={handleChange} required />
+      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
+        <div>
+          <Label htmlFor="priceMp3">Prix MP3 (€)</Label>
+          <Input
+            type="number"
+            id="priceMp3"
+            name="priceMp3"
+            value={form.priceMp3}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="priceWav">Prix WAV (€)</Label>
+          <Input
+            type="number"
+            id="priceWav"
+            name="priceWav"
+            value={form.priceWav}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="priceExclusive">Prix Exclusif (€)</Label>
+          <Input
+            type="number"
+            id="priceExclusive"
+            name="priceExclusive"
+            value={form.priceExclusive}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
       </div>
 
-      <div>
-        <Label htmlFor="price">Prix (€)</Label>
-        <Input
-          id="price"
-          name="price"
-          type="number"
-          value={formData.price}
-          onChange={handleChange}
-          required
+      <div className="flex items-center justify-between">
+        <Label htmlFor="visibility">Visible dans la boutique</Label>
+        <Switch
+          id="visibility"
+          checked={form.isVisible}
+          onCheckedChange={handleSwitch}
         />
       </div>
 
-      <Button type="submit" disabled={loading}>
-        {loading ? "Enregistrement..." : "Enregistrer"}
+      <Button type="submit" disabled={loading} className={cn(loading && "opacity-50")}>
+        {loading ? "Enregistrement..." : "Enregistrer le beat"}
       </Button>
     </form>
   )

commit eb14f42cef3f394fd86f369e6deae677166dc392
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:36:07 2025 +0200

    Create footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
new file mode 100644
index 0000000..81f22d0
--- /dev/null
+++ b/src/components/ui/footer.tsx
@@ -0,0 +1,23 @@
+// src/components/ui/footer.tsx
+import Link from "next/link"
+
+export default function Footer() {
+  return (
+    <footer className="py-6 border-t mt-10 text-sm text-muted-foreground">
+      <div className="container flex flex-col sm:flex-row items-center justify-between">
+        <p>© 2025 BeatsMarket. Tous droits réservés.</p>
+        <div className="flex gap-4 mt-4 sm:mt-0">
+          <Link href="/terms" className="hover:underline">
+            Conditions
+          </Link>
+          <Link href="/about" className="hover:underline">
+            À propos
+          </Link>
+          <Link href="/pricing" className="hover:underline">
+            Tarifs
+          </Link>
+        </div>
+      </div>
+    </footer>
+  )
+}

commit 240227f34150987df7e1630d2b73d18bba0b437b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:37:22 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-list/page.tsx b/src/app/beatmaker/admin/beat-list/page.tsx
index e94825d..f4ad044 100644
--- a/src/app/beatmaker/admin/beat-list/page.tsx
+++ b/src/app/beatmaker/admin/beat-list/page.tsx
@@ -1,32 +1,36 @@
-import { cookies } from "next/headers"
-import { createServerSupabaseClient } from "@/lib/supabase/server"
-import { redirect } from "next/navigation"
-import BeatTable from "@/components/beat/BeatTable"
+"use client"
 
-export default async function BeatListPage() {
-  const supabase = createServerSupabaseClient(cookies)
-  const {
-    data: { user },
-  } = await supabase.auth.getUser()
+import Link from "next/link"
+import { useEffect, useState } from "react"
+import BeatStatusBadge from "@/components/beat/BeatStatusBadge"
 
-  if (!user) {
-    return redirect("/login")
-  }
+export default function BeatListPage() {
+  const [beats, setBeats] = useState([])
+  const [filter, setFilter] = useState<"all" | "draft" | "published" | "disabled">("all")
 
-  const { data: beats, error } = await supabase
-    .from("beats")
-    .select("*")
-    .eq("user_id", user.id)
-    .order("created_at", { ascending: false })
+  useEffect(() => {
+    async function fetchBeats() {
+      const res = await fetch("/api/beatmaker/beats")
+      if (res.ok) {
+        const data = await res.json()
+        setBeats(data)
+      }
+    }
+    fetchBeats()
+  }, [])
 
-  if (error) {
-    console.error("Erreur de récupération des beats :", error.message)
-  }
+  const filteredBeats = beats.filter((beat) => filter === "all" || beat.status === filter)
 
   return (
-    <div className="p-6 space-y-4">
-      <h1 className="text-2xl font-bold">Mes Beats</h1>
-      <BeatTable beats={beats || []} />
-    </div>
-  )
-}
+    <div className="p-6 max-w-4xl mx-auto">
+      <h1 className="text-2xl font-bold text-white mb-4">Mes Beats</h1>
+
+      <div className="mb-4 flex space-x-2">
+        <button
+          className={`px-4 py-2 rounded ${filter === "all" ? "bg-pink-500 text-white" : "bg-zinc-800 text-zinc-400"}`}
+          onClick={() => setFilter("all")}
+        >
+          Tous
+        </button>
+        <button
+          className={`px-4 py-2

commit 3690e9d2684a81e0447a21858c3ee9f3722d0004
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:38:27 2025 +0200

    Update Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
index 0927ddc..930e107 100644
--- a/src/components/Footer.tsx
+++ b/src/components/Footer.tsx
@@ -1,22 +1,25 @@
 import Link from "next/link"
 
-export function Footer() {
+export default function Footer() {
   return (
-    <footer className="bg-zinc-900 text-white p-6">
-      <nav className="flex space-x-6">
-        <Link href="/help" className="hover:text-pink-500 transition">
-          Aide
-        </Link>
-        <Link href="/about" className="hover:text-pink-500 transition">
-          À propos
-        </Link>
-        <Link href="/terms" className="hover:text-pink-500 transition">
-          Conditions générales
-        </Link>
-        <Link href="/pricing" className="hover:text-pink-500 transition">
-          Tarifs
-        </Link>
-      </nav>
+    <footer className="py-6 border-t mt-10 text-sm text-muted-foreground">
+      <div className="container flex flex-col sm:flex-row items-center justify-between">
+        <p>© 2025 BeatsMarket. Tous droits réservés.</p>
+        <div className="flex gap-4 mt-4 sm:mt-0">
+          <Link href="/help" className="hover:text-pink-500 transition">
+            Aide
+          </Link>
+          <Link href="/about" className="hover:text-pink-500 transition">
+            À propos
+          </Link>
+          <Link href="/terms" className="hover:text-pink-500 transition">
+            Conditions
+          </Link>
+          <Link href="/pricing" className="hover:text-pink-500 transition">
+            Tarifs
+          </Link>
+        </div>
+      </div>
     </footer>
   )
 }

commit ba23ba59b2b4f848f6481706a972d20e47d6a102
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:53:05 2025 +0200

    Create page.tsx

diff --git a/src/app/about/page.tsx b/src/app/about/page.tsx
new file mode 100644
index 0000000..d6d8aff
--- /dev/null
+++ b/src/app/about/page.tsx
@@ -0,0 +1,15 @@
+import Link from "next/link"
+
+export default function AboutPage() {
+  return (
+    <main className="p-6 max-w-4xl mx-auto text-white">
+      <h1 className="text-3xl font-bold mb-6">À propos de BeatsMarket</h1>
+      <p className="mb-4">
+        BeatsMarket est une plateforme dédiée aux beatmakers et artistes pour acheter et vendre des beats de qualité.
+      </p>
+      <Link href="/pricing" className="text-pink-500 hover:underline">
+        Voir nos tarifs
+      </Link>
+    </main>
+  )
+}

commit 2fcb266ec8119e31609f93330a7580373751fd8d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:56:01 2025 +0200

    Create page.tsx

diff --git a/src/app/(admin)/admin/beatmakers/page.tsx b/src/app/(admin)/admin/beatmakers/page.tsx
new file mode 100644
index 0000000..ea6da4c
--- /dev/null
+++ b/src/app/(admin)/admin/beatmakers/page.tsx
@@ -0,0 +1,85 @@
+"use client"
+
+import { ColumnDef } from "@tanstack/react-table"
+import { Badge } from "@/components/ui/badge"
+import { MoreHorizontal, ShieldAlert } from "lucide-react"
+import { Button } from "@/components/ui/button"
+import { DataTable } from "@/components/ui/data-table"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+type Beatmaker = {
+  id: string
+  name: string
+  email: string
+  status: "Actif" | "Inactif" | "Signalé" | "En attente"
+}
+
+const data: Beatmaker[] = [
+  { id: "1", name: "DRKBeatz", email: "drk@beat.com", status: "Actif" },
+  { id: "2", name: "LoopMasta", email: "loop@beat.com", status: "Signalé" },
+  { id: "3", name: "808God", email: "god@trap.fr", status: "En attente" },
+]
+
+const statusColor = {
+  Actif: "bg-green-600",
+  Inactif: "bg-gray-500",
+  Signalé: "bg-red-600",
+  "En attente": "bg-yellow-500",
+}
+
+const columns: ColumnDef<Beatmaker>[] = [
+  {
+    accessorKey: "name",
+    header: "Nom",
+  },
+  {
+    accessorKey: "email",
+    header: "Email",
+  },
+  {
+    accessorKey: "status",
+    header: "Statut",
+    cell: ({ row }) => {
+      const status = row.getValue("status") as Beatmaker["status"]
+      return <Badge className={statusColor[status]}>{status}</Badge>
+    },
+  },
+  {
+    id: "actions",
+    cell: ({ row }) => {
+      const beatmaker = row.original
+      return (
+        <DropdownMenu>
+          <DropdownMenuTrigger asChild>
+            <Button variant="ghost" className="h-8 w-8 p-0">
+              <MoreHorizontal className="h-4 w-4" />
+            </Button>
+          </DropdownMenuTrigger>
+          <DropdownMenuContent align="end">
+            <DropdownMenuLabel>Actions</DropdownMenuLabel>
+            <DropdownMenuItem onClick={() => alert(`Modifier ${beatmaker.name}`)}>
+              Modifier
+            </DropdownMenuItem>
+            <DropdownMenuItem onClick={() => alert(`Voir le profil de ${beatmaker.name}`)}>
+              Voir le profil
+            </DropdownMenuItem>
+            <DropdownMenuSeparator />
+            <DropdownMenuItem className="text-red-600" onClick={() => alert(`Signaler ${beatmaker.name}`)}>
+              <ShieldAlert className="mr-2 h-4 w-4" />
+              Signaler
+            </DropdownMenuItem>
+          </DropdownMenuContent>
+        </DropdownMenu>
+      )
+    },
+  },
+]
+
+export default function AdminBeatmakersPage() {
+  return (
+    <div className="p-6">
+      <h1 className="text-2xl font-bold mb-4">Gestion des Beatmakers</h1>
+      <DataTable columns={columns} data={data} />
+    </div>
+  )
+}

commit 58c19cf6662e8ce0a39d5509d385948ac5380228
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:57:13 2025 +0200

    Create page.tsx

diff --git a/src/app/(admin)/admin/artists/page.tsx b/src/app/(admin)/admin/artists/page.tsx
new file mode 100644
index 0000000..603c099
--- /dev/null
+++ b/src/app/(admin)/admin/artists/page.tsx
@@ -0,0 +1,85 @@
+"use client"
+
+import { ColumnDef } from "@tanstack/react-table"
+import { Badge } from "@/components/ui/badge"
+import { MoreHorizontal, Trash2 } from "lucide-react"
+import { Button } from "@/components/ui/button"
+import { DataTable } from "@/components/ui/data-table"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+type Artist = {
+  id: string
+  name: string
+  email: string
+  status: "Actif" | "Inactif" | "En attente" | "Supprimé"
+}
+
+const data: Artist[] = [
+  { id: "1", name: "Luna Rossa", email: "luna@music.fr", status: "Actif" },
+  { id: "2", name: "Xario", email: "xario@trap.com", status: "En attente" },
+  { id: "3", name: "Nova", email: "nova@rnb.com", status: "Inactif" },
+]
+
+const statusColor = {
+  Actif: "bg-green-600",
+  Inactif: "bg-gray-500",
+  "En attente": "bg-yellow-500",
+  Supprimé: "bg-red-600",
+}
+
+const columns: ColumnDef<Artist>[] = [
+  {
+    accessorKey: "name",
+    header: "Nom",
+  },
+  {
+    accessorKey: "email",
+    header: "Email",
+  },
+  {
+    accessorKey: "status",
+    header: "Statut",
+    cell: ({ row }) => {
+      const status = row.getValue("status") as Artist["status"]
+      return <Badge className={statusColor[status]}>{status}</Badge>
+    },
+  },
+  {
+    id: "actions",
+    cell: ({ row }) => {
+      const artist = row.original
+      return (
+        <DropdownMenu>
+          <DropdownMenuTrigger asChild>
+            <Button variant="ghost" className="h-8 w-8 p-0">
+              <MoreHorizontal className="h-4 w-4" />
+            </Button>
+          </DropdownMenuTrigger>
+          <DropdownMenuContent align="end">
+            <DropdownMenuLabel>Actions</DropdownMenuLabel>
+            <DropdownMenuItem onClick={() => alert(`Modifier ${artist.name}`)}>
+              Modifier
+            </DropdownMenuItem>
+            <DropdownMenuItem onClick={() => alert(`Voir le profil de ${artist.name}`)}>
+              Voir le profil
+            </DropdownMenuItem>
+            <DropdownMenuSeparator />
+            <DropdownMenuItem className="text-red-600" onClick={() => alert(`Supprimer ${artist.name}`)}>
+              <Trash2 className="mr-2 h-4 w-4" />
+              Supprimer
+            </DropdownMenuItem>
+          </DropdownMenuContent>
+        </DropdownMenu>
+      )
+    },
+  },
+]
+
+export default function AdminArtistsPage() {
+  return (
+    <div className="p-6">
+      <h1 className="text-2xl font-bold mb-4">Gestion des Artistes</h1>
+      <DataTable columns={columns} data={data} />
+    </div>
+  )
+}

commit 8f44d4dba3b60d56f51d6bab9cbd42ba8b58d1c5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:58:17 2025 +0200

    Create page.tsx

diff --git a/src/app/(admin)/admin/page.tsx b/src/app/(admin)/admin/page.tsx
new file mode 100644
index 0000000..0d5a6a6
--- /dev/null
+++ b/src/app/(admin)/admin/page.tsx
@@ -0,0 +1,81 @@
+"use client"
+
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { DollarSign, User, Music, ShieldCheck } from "lucide-react"
+import { Badge } from "@/components/ui/badge"
+import RevenueChart from "@/components/admin/revenue-chart"
+import RecentSales from "@/components/admin/recent-sales"
+
+export default function AdminDashboard() {
+  return (
+    <div className="p-6 space-y-6">
+      <h1 className="text-3xl font-bold">Tableau de bord</h1>
+
+      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
+        <Card>
+          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+            <CardTitle className="text-sm font-medium">Revenus</CardTitle>
+            <DollarSign className="h-4 w-4 text-muted-foreground" />
+          </CardHeader>
+          <CardContent>
+            <div className="text-2xl font-bold">7 250 €</div>
+            <p className="text-xs text-muted-foreground">+15% ce mois-ci</p>
+          </CardContent>
+        </Card>
+
+        <Card>
+          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+            <CardTitle className="text-sm font-medium">Artistes</CardTitle>
+            <User className="h-4 w-4 text-muted-foreground" />
+          </CardHeader>
+          <CardContent>
+            <div className="text-2xl font-bold">820</div>
+            <p className="text-xs text-muted-foreground">+32 nouveaux</p>
+          </CardContent>
+        </Card>
+
+        <Card>
+          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+            <CardTitle className="text-sm font-medium">Beats vendus</CardTitle>
+            <Music className="h-4 w-4 text-muted-foreground" />
+          </CardHeader>
+          <CardContent>
+            <div className="text-2xl font-bold">1 502</div>
+            <p className="text-xs text-muted-foreground">+120 cette semaine</p>
+          </CardContent>
+        </Card>
+
+        <Card>
+          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+            <CardTitle className="text-sm font-medium">Modérations</CardTitle>
+            <ShieldCheck className="h-4 w-4 text-muted-foreground" />
+          </CardHeader>
+          <CardContent>
+            <div className="text-2xl font-bold">5</div>
+            <p className="text-xs text-muted-foreground">contenus à vérifier</p>
+          </CardContent>
+        </Card>
+      </div>
+
+      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
+        <Card>
+          <CardHeader>
+            <CardTitle>Revenus mensuels</CardTitle>
+          </CardHeader>
+          <CardContent>
+            <RevenueChart />
+          </CardContent>
+        </Card>
+
+        <Card>
+          <CardHeader>
+            <CardTitle>Ventes récentes</CardTitle>
+          </CardHeader>
+          <CardContent>
+            <RecentSales />
+          </CardContent>
+        </Card>
+      </div>
+    </div>
+  )
+}

commit d30b895bee520f514f5496c7d4816474c5eff3e9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 16:59:15 2025 +0200

    Create revenue-chart.tsx

diff --git a/src/components/admin/revenue-chart.tsx b/src/components/admin/revenue-chart.tsx
new file mode 100644
index 0000000..832d64f
--- /dev/null
+++ b/src/components/admin/revenue-chart.tsx
@@ -0,0 +1,42 @@
+"use client"
+
+import {
+  ResponsiveContainer,
+  LineChart,
+  Line,
+  XAxis,
+  YAxis,
+  Tooltip,
+  CartesianGrid,
+} from "recharts"
+
+const data = [
+  { month: "Jan", revenue: 3200 },
+  { month: "Fév", revenue: 4100 },
+  { month: "Mar", revenue: 3900 },
+  { month: "Avr", revenue: 5200 },
+  { month: "Mai", revenue: 4800 },
+  { month: "Juin", revenue: 6100 },
+  { month: "Juil", revenue: 7250 },
+]
+
+export default function RevenueChart() {
+  return (
+    <ResponsiveContainer width="100%" height={300}>
+      <LineChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>
+        <CartesianGrid strokeDasharray="3 3" />
+        <XAxis dataKey="month" stroke="#888888" fontSize={12} />
+        <YAxis stroke="#888888" fontSize={12} />
+        <Tooltip />
+        <Line
+          type="monotone"
+          dataKey="revenue"
+          stroke="#e11d48"
+          strokeWidth={2}
+          dot={{ r: 4 }}
+          activeDot={{ r: 6 }}
+        />
+      </LineChart>
+    </ResponsiveContainer>
+  )
+}

commit 98415a2fd18582c79943badc91b0dcb6d636c311
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:00:03 2025 +0200

    Create recent-sales.tsx

diff --git a/src/components/admin/recent-sales.tsx b/src/components/admin/recent-sales.tsx
new file mode 100644
index 0000000..4174d32
--- /dev/null
+++ b/src/components/admin/recent-sales.tsx
@@ -0,0 +1,63 @@
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+type Sale = {
+  name: string
+  email: string
+  avatar: string
+  amount: string
+}
+
+const sales: Sale[] = [
+  {
+    name: "K-Mello",
+    email: "k.mello@rapgame.fr",
+    avatar: "/images/users/k-mello.jpg",
+    amount: "+49,00€",
+  },
+  {
+    name: "NeuroType",
+    email: "neurotype@battlestyle.ai",
+    avatar: "/images/users/neurotype.jpg",
+    amount: "+199,99€",
+  },
+  {
+    name: "DaVinci Flow",
+    email: "da.vinci@poetica.fr",
+    avatar: "/images/users/davinci.jpg",
+    amount: "+29,99€",
+  },
+  {
+    name: "Ghost Mode",
+    email: "ghostmode@trapcity.io",
+    avatar: "/images/users/ghostmode.jpg",
+    amount: "+59,99€",
+  },
+]
+
+export function RecentSales() {
+  return (
+    <Card className="h-full">
+      <CardHeader>
+        <CardTitle>Ventes récentes</CardTitle>
+      </CardHeader>
+      <CardContent className="grid gap-6">
+        {sales.map((sale, index) => (
+          <div key={index} className="flex items-center gap-4">
+            <Avatar>
+              <AvatarImage src={sale.avatar} alt={sale.name} />
+              <AvatarFallback>{sale.name[0]}</AvatarFallback>
+            </Avatar>
+            <div className="flex-1 space-y-1">
+              <p className="text-sm font-medium leading-none">{sale.name}</p>
+              <p className="text-sm text-muted-foreground">{sale.email}</p>
+            </div>
+            <div className="font-medium text-green-600 dark:text-green-400">
+              {sale.amount}
+            </div>
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}

commit d06ed6e04d2d422e6163982ae9a3773ce94abd64
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:00:50 2025 +0200

    Create content-moderation.tsx

diff --git a/src/components/admin/content-moderation.tsx b/src/components/admin/content-moderation.tsx
new file mode 100644
index 0000000..bdd1a83
--- /dev/null
+++ b/src/components/admin/content-moderation.tsx
@@ -0,0 +1,57 @@
+import { Badge } from "@/components/ui/badge"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+
+const flaggedBeats = [
+  {
+    title: "Dark Soul Type Beat",
+    author: "K-Mello",
+    reason: "Contenu inapproprié signalé",
+    status: "En attente",
+  },
+  {
+    title: "Neuro Glitch Trap",
+    author: "NeuroType",
+    reason: "Plagiat suspecté",
+    status: "Revu",
+  },
+]
+
+export function ContentModeration() {
+  return (
+    <Card className="h-full">
+      <CardHeader>
+        <CardTitle>Modération de contenu</CardTitle>
+      </CardHeader>
+      <CardContent className="grid gap-4">
+        {flaggedBeats.map((beat, index) => (
+          <div
+            key={index}
+            className="flex items-start justify-between gap-4 border-b pb-3"
+          >
+            <div className="space-y-1">
+              <p className="text-sm font-semibold">{beat.title}</p>
+              <p className="text-sm text-muted-foreground">
+                Par <span className="font-medium">{beat.author}</span>
+              </p>
+              <p className="text-xs text-red-500">{beat.reason}</p>
+            </div>
+            <div className="flex items-center gap-2">
+              <Badge
+                variant={
+                  beat.status === "En attente" ? "destructive" : "secondary"
+                }
+              >
+                {beat.status}
+              </Badge>
+              <Button size="icon" variant="ghost" className="h-8 w-8">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </div>
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}

commit 355b9f4d1db73edefce453d5ba191f13bbaaa918
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:01:37 2025 +0200

    Create page.tsx

diff --git a/src/app/admin/artists/page.tsx b/src/app/admin/artists/page.tsx
new file mode 100644
index 0000000..7d7c099
--- /dev/null
+++ b/src/app/admin/artists/page.tsx
@@ -0,0 +1,14 @@
+import { ArtistsTable } from "@/components/admin/artists-table"
+import { PageHeader } from "@/components/ui/page-header"
+
+export default function AdminArtistsPage() {
+  return (
+    <div className="flex flex-col gap-6">
+      <PageHeader
+        title="Gestion des artistes"
+        description="Modérez, gérez et suivez l'activité des artistes inscrits sur BeatsMarket."
+      />
+      <ArtistsTable />
+    </div>
+  )
+}

commit 98c9f82f68c584bfec7ab252d5dc8e12e38a4a46
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:02:23 2025 +0200

    Create artists-table.tsx

diff --git a/src/components/admin/artists-table.tsx b/src/components/admin/artists-table.tsx
new file mode 100644
index 0000000..c8b3f42
--- /dev/null
+++ b/src/components/admin/artists-table.tsx
@@ -0,0 +1,107 @@
+"use client"
+
+import {
+  Table,
+  TableBody,
+  TableCell,
+  TableHead,
+  TableHeader,
+  TableRow,
+} from "@/components/ui/table"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+import { useState } from "react"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+interface Artist {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "suspendu" | "en_attente"
+}
+
+const mockArtists: Artist[] = [
+  {
+    id: "1",
+    name: "Artiste Alpha",
+    email: "alpha@email.com",
+    status: "actif",
+  },
+  {
+    id: "2",
+    name: "Artiste Bravo",
+    email: "bravo@email.com",
+    status: "suspendu",
+  },
+  {
+    id: "3",
+    name: "Artiste Charlie",
+    email: "charlie@email.com",
+    status: "en_attente",
+  },
+]
+
+export function ArtistsTable() {
+  const [artists, setArtists] = useState<Artist[]>(mockArtists)
+
+  const handleAction = (id: string, action: string) => {
+    console.log(`Action "${action}" sur l'artiste ${id}`)
+    // Ici, tu pourras intégrer des appels API ou des modales
+  }
+
+  const getStatusBadge = (status: Artist["status"]) => {
+    switch (status) {
+      case "actif":
+        return <Badge variant="success">Actif</Badge>
+      case "suspendu":
+        return <Badge variant="destructive">Suspendu</Badge>
+      case "en_attente":
+        return <Badge variant="secondary">En attente</Badge>
+    }
+  }
+
+  return (
+    <div className="rounded-xl border bg-muted p-4">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Nom</TableHead>
+            <TableHead>Email</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {artists.map((artist) => (
+            <TableRow key={artist.id}>
+              <TableCell>{artist.name}</TableCell>
+              <TableCell>{artist.email}</TableCell>
+              <TableCell>{getStatusBadge(artist.status)}</TableCell>
+              <TableCell className="text-right">
+                <DropdownMenu>
+                  <DropdownMenuTrigger asChild>
+                    <Button variant="ghost" size="icon">
+                      <MoreHorizontal className="h-4 w-4" />
+                    </Button>
+                  </DropdownMenuTrigger>
+                  <DropdownMenuContent align="end">
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "voir")}>
+                      Voir profil
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "suspendre")}>
+                      Suspendre
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "supprimer")}>
+                      Supprimer
+                    </DropdownMenuItem>
+                  </DropdownMenuContent>
+                </DropdownMenu>
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}

commit 84570c2145a1e5409c6e8f93039111681d2e664f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:06:16 2025 +0200

    Create beatmakers-table.tsx

diff --git a/src/components/admin/beatmakers-table.tsx b/src/components/admin/beatmakers-table.tsx
new file mode 100644
index 0000000..347430a
--- /dev/null
+++ b/src/components/admin/beatmakers-table.tsx
@@ -0,0 +1,111 @@
+"use client"
+
+import {
+  Table,
+  TableBody,
+  TableCell,
+  TableHead,
+  TableHeader,
+  TableRow,
+} from "@/components/ui/table"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+import { useState } from "react"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+interface Beatmaker {
+  id: string
+  name: string
+  email: string
+  status: "gratuit" | "bronze" | "or" | "diamant" | "suspendu"
+}
+
+const mockBeatmakers: Beatmaker[] = [
+  {
+    id: "1",
+    name: "Beatmaker Alpha",
+    email: "alpha@beats.com",
+    status: "or",
+  },
+  {
+    id: "2",
+    name: "Beatmaker Bravo",
+    email: "bravo@beats.com",
+    status: "gratuit",
+  },
+  {
+    id: "3",
+    name: "Beatmaker Charlie",
+    email: "charlie@beats.com",
+    status: "suspendu",
+  },
+]
+
+export function BeatmakersTable() {
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>(mockBeatmakers)
+
+  const handleAction = (id: string, action: string) => {
+    console.log(`Action "${action}" sur le beatmaker ${id}`)
+    // À connecter plus tard avec l’API
+  }
+
+  const getStatusBadge = (status: Beatmaker["status"]) => {
+    switch (status) {
+      case "gratuit":
+        return <Badge variant="secondary">Gratuit</Badge>
+      case "bronze":
+        return <Badge className="bg-yellow-600 text-white">Bronze</Badge>
+      case "or":
+        return <Badge className="bg-yellow-400 text-black">Or</Badge>
+      case "diamant":
+        return <Badge className="bg-cyan-400 text-black">Diamant</Badge>
+      case "suspendu":
+        return <Badge variant="destructive">Suspendu</Badge>
+    }
+  }
+
+  return (
+    <div className="rounded-xl border bg-muted p-4">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Nom</TableHead>
+            <TableHead>Email</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {beatmakers.map((b) => (
+            <TableRow key={b.id}>
+              <TableCell>{b.name}</TableCell>
+              <TableCell>{b.email}</TableCell>
+              <TableCell>{getStatusBadge(b.status)}</TableCell>
+              <TableCell className="text-right">
+                <DropdownMenu>
+                  <DropdownMenuTrigger asChild>
+                    <Button variant="ghost" size="icon">
+                      <MoreHorizontal className="h-4 w-4" />
+                    </Button>
+                  </DropdownMenuTrigger>
+                  <DropdownMenuContent align="end">
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "voir")}>
+                      Voir profil
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "changer_statut")}>
+                      Changer statut
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "supprimer")}>
+                      Supprimer
+                    </DropdownMenuItem>
+                  </DropdownMenuContent>
+                </DropdownMenu>
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}

commit 5bd3dd8d73a1aeb8487d2f6f61aa217c34eb0a61
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:08:00 2025 +0200

    Update page.tsx

commit 12afa1cbb32577a49a23976a6cc25433c1ab0d09
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:09:01 2025 +0200

    Update footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
index 81f22d0..3c65ebb 100644
--- a/src/components/ui/footer.tsx
+++ b/src/components/ui/footer.tsx
@@ -1,22 +1,27 @@
-// src/components/ui/footer.tsx
+"use client"
+
 import Link from "next/link"
 
-export default function Footer() {
+export function Footer() {
   return (
-    <footer className="py-6 border-t mt-10 text-sm text-muted-foreground">
-      <div className="container flex flex-col sm:flex-row items-center justify-between">
-        <p>© 2025 BeatsMarket. Tous droits réservés.</p>
-        <div className="flex gap-4 mt-4 sm:mt-0">
-          <Link href="/terms" className="hover:underline">
-            Conditions
+    <footer className="bg-gray-900 text-gray-300 py-8 px-6">
+      <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center space-y-6 md:space-y-0">
+        <div className="text-xl font-bold text-pink-500">BeatsMarket</div>
+        <nav className="flex space-x-6">
+          <Link href="/help" className="hover:text-pink-500 transition">
+            Aide
           </Link>
-          <Link href="/about" className="hover:underline">
+          <Link href="/about" className="hover:text-pink-500 transition">
             À propos
           </Link>
-          <Link href="/pricing" className="hover:underline">
+          <Link href="/terms" className="hover:text-pink-500 transition">
+            CGV
+          </Link>
+          <Link href="/pricing" className="hover:text-pink-500 transition">
             Tarifs
           </Link>
-        </div>
+        </nav>
+        <div className="text-sm">&copy; 2025 BeatsMarket. Tous droits réservés.</div>
       </div>
     </footer>
   )

commit 88c476f17c496254149b53f5d9d1b403468e94a6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 17:10:09 2025 +0200

    Update page.tsx

diff --git a/src/app/about/page.tsx b/src/app/about/page.tsx
index d6d8aff..6ec6e55 100644
--- a/src/app/about/page.tsx
+++ b/src/app/about/page.tsx
@@ -1,15 +1,31 @@
-import Link from "next/link"
+import Image from "next/image"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
 
 export default function AboutPage() {
   return (
-    <main className="p-6 max-w-4xl mx-auto text-white">
-      <h1 className="text-3xl font-bold mb-6">À propos de BeatsMarket</h1>
-      <p className="mb-4">
-        BeatsMarket est une plateforme dédiée aux beatmakers et artistes pour acheter et vendre des beats de qualité.
-      </p>
-      <Link href="/pricing" className="text-pink-500 hover:underline">
-        Voir nos tarifs
-      </Link>
-    </main>
-  )
-}
+    <main className="max-w-7xl mx-auto p-6 text-gray-300 bg-gray-900 min-h-screen">
+      <h1 className="text-4xl font-bold mb-8 text-center text-pink-500">À propos de BeatsMarket</h1>
+      <Card>
+        <CardHeader>
+          <CardTitle>Notre mission</CardTitle>
+        </CardHeader>
+        <CardContent>
+          <p>
+            BeatsMarket est la plateforme numéro 1 dédiée aux beatmakers et artistes du monde entier. 
+            Notre mission est de fournir un espace sécurisé, moderne et innovant pour la vente et l'achat de beats de qualité.
+          </p>
+        </CardContent>
+      </Card>
+
+      <section className="mt-10 grid grid-cols-1 md:grid-cols-3 gap-8">
+        <Card>
+          <CardHeader>
+            <CardTitle>Nos outils</CardTitle>
+          </CardHeader>
+          <CardContent>
+            <ul className="list-disc list-inside">
+              <li>Boutique Pro pour vendre vos beats</li>
+              <li>Mastering audio par IA intégré</li>
+              <li>Création automatique de pochettes</li>
+              <li>Distribution digitale simplifiée</li>
+              <li>Support client dédié

commit 450c1c8ee393e74ae9303bca1aa430163c0ddfdb
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 18:59:32 2025 +0200

    Update Footer.tsx

diff --git a/components/Footer.tsx b/components/Footer.tsx
index 15d0c42..039c58c 100644
--- a/components/Footer.tsx
+++ b/components/Footer.tsx
@@ -3,36 +3,61 @@ import Link from "next/link"
 
 export default function Footer() {
   return (
-    <footer className="bg-darkbg2 text-white py-8 px-6 mt-12">
-      <div className="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-3 gap-8 text-sm">
+    <footer className="bg-darkbg2 text-white py-8">
+      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8 px-4">
         <div>
           <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
           <p className="text-gray-400">
-            La plateforme ultime pour acheter, vendre et distribuer des beats avec style.
+            La plateforme ultime pour acheter, vendre et promouvoir vos beats.
           </p>
         </div>
         <div>
           <h3 className="font-semibold mb-2">Navigation</h3>
           <ul className="space-y-1">
-            <li><Link href="/"><a className="hover:text-primary">Accueil</a></Link></li>
-            <li><Link href="/pricing"><a className="hover:text-primary">Tarifs</a></Link></li>
-            <li><Link href="/about"><a className="hover:text-primary">À propos</a></Link></li>
-            <li><Link href="/terms"><a className="hover:text-primary">CGV / Mentions</a></Link></li>
+            <li>
+              <Link href="/" className="hover:text-pink-500 transition">
+                Accueil
+              </Link>
+            </li>
+            <li>
+              <Link href="/pricing" className="hover:text-pink-500 transition">
+                Tarifs
+              </Link>
+            </li>
+            <li>
+              <Link href="/about" className="hover:text-pink-500 transition">
+                À Propos
+              </Link>
+            </li>
+            <li>
+              <Link href="/terms" className="hover:text-pink-500 transition">
+                CGV
+              </Link>
+            </li>
           </ul>
         </div>
         <div>
-          <h3 className="font-semibold mb-2">Réseaux</h3>
+          <h3 className="font-semibold mb-2">Références</h3>
           <ul className="space-y-1">
-            <li><a href="#" className="hover:text-primary">Instagram</a></li>
-            <li><a href="#" className="hover:text-primary">YouTube</a></li>
-            <li><a href="#" className="hover:text-primary">TikTok</a></li>
-            <li><a href="#" className="hover:text-primary">Contact</a></li>
+            <li>
+              <a href="#" className="hover:text-pink-500 transition">
+                Facebook
+              </a>
+            </li>
+            <li>
+              <a href="#" className="hover:text-pink-500 transition">
+                Twitter
+              </a>
+            </li>
+            <li>
+              <a href="#" className="hover:text-pink-500 transition">
+                Instagram
+              </a>
+            </li>
+            {/* Ajoute ici d'autres liens si nécessaire */}
           </ul>
         </div>
       </div>
-      <div className="text-center text-xs text-gray-500 mt-8">
-        &copy; {new Date().getFullYear()} BeatsMarket. Tous droits réservés.
-      </div>
     </footer>
   )
 }

commit bc6fbe498a370ae66b46c6d867c24e68a702c65a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:00:27 2025 +0200

    Update Header.tsx

diff --git a/components/Header.tsx b/components/Header.tsx
index 28e8853..a70d524 100644
--- a/components/Header.tsx
+++ b/components/Header.tsx
@@ -1,36 +1,36 @@
-import React from "react"
-import Link from "next/link"
+import React from "react";
+import Link from "next/link";
 
 export default function Header() {
   return (
-    <header className="bg-darkbg2 shadow-md p-4 flex justify-between items-center">
-      <Link href="/">
-        <a className="text-2xl font-bold text-primary">BeatsMarket</a>
-      </Link>
-      <nav>
-        <ul className="flex gap-6 text-white font-ptsans">
+    <header className="bg-darkbg text-white py-4">
+      <nav className="max-w-7xl mx-auto flex justify-between items-center px-4">
+        <div className="text-2xl font-bold text-primary">
+          <Link href="/">BeatsMarket</Link>
+        </div>
+        <ul className="flex space-x-6">
           <li>
-            <Link href="/pricing">
-              <a className="hover:text-secondary">Tarifs</a>
+            <Link href="/about" className="hover:text-pink-500 transition">
+              À Propos
             </Link>
           </li>
           <li>
-            <Link href="/about">
-              <a className="hover:text-secondary">À propos</a>
+            <Link href="/pricing" className="hover:text-pink-500 transition">
+              Tarifs
             </Link>
           </li>
           <li>
-            <Link href="/help">
-              <a className="hover:text-secondary">Aide</a>
+            <Link href="/help" className="hover:text-pink-500 transition">
+              Aide
             </Link>
           </li>
           <li>
-            <Link href="/login">
-              <a className="hover:text-primary font-bold">Connexion</a>
+            <Link href="/login" className="hover:text-pink-500 transition">
+              Connexion
             </Link>
           </li>
         </ul>
       </nav>
     </header>
-  )
+  );
 }

commit 02ed10e4dad349492943b41178a6c1f4fed34ba8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:01:25 2025 +0200

    Update Footer.tsx

diff --git a/components/Footer.tsx b/components/Footer.tsx
index 039c58c..2b22f3a 100644
--- a/components/Footer.tsx
+++ b/components/Footer.tsx
@@ -1,5 +1,5 @@
-import React from "react"
-import Link from "next/link"
+import React from "react";
+import Link from "next/link";
 
 export default function Footer() {
   return (
@@ -8,7 +8,7 @@ export default function Footer() {
         <div>
           <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
           <p className="text-gray-400">
-            La plateforme ultime pour acheter, vendre et promouvoir vos beats.
+            La plateforme ultime pour acheter, vendre et distribuer vos beats.
           </p>
         </div>
         <div>
@@ -31,13 +31,13 @@ export default function Footer() {
             </li>
             <li>
               <Link href="/terms" className="hover:text-pink-500 transition">
-                CGV
+                CGV / CGU
               </Link>
             </li>
           </ul>
         </div>
         <div>
-          <h3 className="font-semibold mb-2">Références</h3>
+          <h3 className="font-semibold mb-2">Réseaux</h3>
           <ul className="space-y-1">
             <li>
               <a href="#" className="hover:text-pink-500 transition">
@@ -54,10 +54,9 @@ export default function Footer() {
                 Instagram
               </a>
             </li>
-            {/* Ajoute ici d'autres liens si nécessaire */}
           </ul>
         </div>
       </div>
     </footer>
-  )
+  );
 }

commit bd1be51d7d7eb7c24d2beacab1c20f43d0baa303
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:02:53 2025 +0200

    Update Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
index 930e107..6e12a85 100644
--- a/src/components/Footer.tsx
+++ b/src/components/Footer.tsx
@@ -1,25 +1,43 @@
-import Link from "next/link"
+import React from "react";
+import Link from "next/link";
 
 export default function Footer() {
   return (
-    <footer className="py-6 border-t mt-10 text-sm text-muted-foreground">
-      <div className="container flex flex-col sm:flex-row items-center justify-between">
-        <p>© 2025 BeatsMarket. Tous droits réservés.</p>
-        <div className="flex gap-4 mt-4 sm:mt-0">
-          <Link href="/help" className="hover:text-pink-500 transition">
-            Aide
-          </Link>
-          <Link href="/about" className="hover:text-pink-500 transition">
-            À propos
-          </Link>
-          <Link href="/terms" className="hover:text-pink-500 transition">
-            Conditions
-          </Link>
-          <Link href="/pricing" className="hover:text-pink-500 transition">
-            Tarifs
-          </Link>
+    <footer className="bg-darkbg2 text-white py-8">
+      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8 px-4">
+        <div>
+          <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
+          <p className="text-gray-400">
+            La plateforme ultime pour acheter, vendre et distribuer vos beats.
+          </p>
         </div>
-      </div>
-    </footer>
-  )
-}
+        <div>
+          <h3 className="font-semibold mb-2">Navigation</h3>
+          <ul className="space-y-1">
+            <li>
+              <Link href="/" className="hover:text-pink-500 transition">
+                Accueil
+              </Link>
+            </li>
+            <li>
+              <Link href="/pricing" className="hover:text-pink-500 transition">
+                Tarifs
+              </Link>
+            </li>
+            <li>
+              <Link href="/about" className="hover:text-pink-500 transition">
+                À Propos
+              </Link>
+            </li>
+            <li>
+              <Link href="/terms" className="hover:text-pink-500 transition">
+                CGV / CGU
+              </Link>
+            </li>
+          </ul>
+        </div>
+        <div>
+          <h3 className="font-semibold mb-2">Réseaux</h3>
+          <ul className="space-y-1">
+            <li>
+              <a href="#" className="hover:text-pink-500 transition">

commit ac6f736065d2339acf0c6b4f170a039183337e6f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:27:45 2025 +0200

    Update Footer.tsx

diff --git a/components/Footer.tsx b/components/Footer.tsx
index 2b22f3a..5623e16 100644
--- a/components/Footer.tsx
+++ b/components/Footer.tsx
@@ -1,62 +1,46 @@
-import React from "react";
-import Link from "next/link";
+import React from "react"
+import Link from "next/link"
 
 export default function Footer() {
   return (
     <footer className="bg-darkbg2 text-white py-8">
-      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8 px-4">
+      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8">
         <div>
-          <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
+          <h2 className="text-primary font-bold text-xl mb-2">BeatsMarket</h2>
           <p className="text-gray-400">
-            La plateforme ultime pour acheter, vendre et distribuer vos beats.
+            La plateforme ultime pour acheter, vendre et découvrir des beats de qualité.
           </p>
         </div>
         <div>
           <h3 className="font-semibold mb-2">Navigation</h3>
           <ul className="space-y-1">
             <li>
-              <Link href="/" className="hover:text-pink-500 transition">
+              <Link href="/" className="hover:text-primary">
                 Accueil
               </Link>
             </li>
             <li>
-              <Link href="/pricing" className="hover:text-pink-500 transition">
+              <Link href="/pricing" className="hover:text-primary">
                 Tarifs
               </Link>
             </li>
             <li>
-              <Link href="/about" className="hover:text-pink-500 transition">
-                À Propos
+              <Link href="/about" className="hover:text-primary">
+                À propos
               </Link>
             </li>
             <li>
-              <Link href="/terms" className="hover:text-pink-500 transition">
-                CGV / CGU
+              <Link href="/terms" className="hover:text-primary">
+                CGV / Mentions
               </Link>
             </li>
           </ul>
         </div>
         <div>
-          <h3 className="font-semibold mb-2">Réseaux</h3>
-          <ul className="space-y-1">
-            <li>
-              <a href="#" className="hover:text-pink-500 transition">
-                Facebook
-              </a>
-            </li>
-            <li>
-              <a href="#" className="hover:text-pink-500 transition">
-                Twitter
-              </a>
-            </li>
-            <li>
-              <a href="#" className="hover:text-pink-500 transition">
-                Instagram
-              </a>
-            </li>
-          </ul>
+          <h3 className="font-semibold mb-2">Réseaux sociaux</h3>
+          {/* Ici tu peux ajouter des liens vers tes réseaux sociaux */}
         </div>
       </div>
     </footer>
-  );
+  )
 }

commit dd6c866dcee78af93345ad27d71c7951402da76b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:33:18 2025 +0200

    Update Footer.tsx
    
    git add components/Footer.tsx
    git commit -m "fix: remove <a> inside <Link> to fix Next.js invalid Link error"
    git push

diff --git a/components/Footer.tsx b/components/Footer.tsx
index 5623e16..1f23d05 100644
--- a/components/Footer.tsx
+++ b/components/Footer.tsx
@@ -4,41 +4,29 @@ import Link from "next/link"
 export default function Footer() {
   return (
     <footer className="bg-darkbg2 text-white py-8">
-      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8">
+      <div className="max-w-7xl mx-auto grid grid-cols-3 gap-8">
         <div>
-          <h2 className="text-primary font-bold text-xl mb-2">BeatsMarket</h2>
+          <h2 className="text-primary font-bold text-xl mb-4">BeatsMarket</h2>
           <p className="text-gray-400">
-            La plateforme ultime pour acheter, vendre et découvrir des beats de qualité.
+            La plateforme ultime pour acheter, vendre et distribuer vos beats en toute simplicité.
           </p>
         </div>
         <div>
           <h3 className="font-semibold mb-2">Navigation</h3>
           <ul className="space-y-1">
-            <li>
-              <Link href="/" className="hover:text-primary">
-                Accueil
-              </Link>
-            </li>
-            <li>
-              <Link href="/pricing" className="hover:text-primary">
-                Tarifs
-              </Link>
-            </li>
-            <li>
-              <Link href="/about" className="hover:text-primary">
-                À propos
-              </Link>
-            </li>
-            <li>
-              <Link href="/terms" className="hover:text-primary">
-                CGV / Mentions
-              </Link>
-            </li>
+            <li><Link href="/" className="hover:text-primary">Accueil</Link></li>
+            <li><Link href="/pricing" className="hover:text-primary">Tarifs</Link></li>
+            <li><Link href="/about" className="hover:text-primary">À propos</Link></li>
+            <li><Link href="/terms" className="hover:text-primary">CGV / Mentions</Link></li>
           </ul>
         </div>
         <div>
-          <h3 className="font-semibold mb-2">Réseaux sociaux</h3>
-          {/* Ici tu peux ajouter des liens vers tes réseaux sociaux */}
+          <h3 className="font-semibold mb-2">Réseaux</h3>
+          <ul className="space-y-1">
+            <li><a href="#" className="hover:text-primary">Twitter</a></li>
+            <li><a href="#" className="hover:text-primary">Facebook</a></li>
+            <li><a href="#" className="hover:text-primary">Instagram</a></li>
+          </ul>
         </div>
       </div>
     </footer>

commit f6ee9d991385a42c3b261d5b5329eeb3985156fe
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:42:40 2025 +0200

    Update accordion.tsx

diff --git a/src/components/ui/accordion.tsx b/src/components/ui/accordion.tsx
index c308003..096758b 100644
--- a/src/components/ui/accordion.tsx
+++ b/src/components/ui/accordion.tsx
@@ -1,22 +1,26 @@
-import * as React from "react";
-import * as AccordionPrimitive from "@radix-ui/react-accordion";
-import { cn } from "@/lib/utils";
+"use client"
 
-export const Accordion = AccordionPrimitive.Root;
+import * as React from "react"
+import * as AccordionPrimitive from "@radix-ui/react-accordion"
+import { ChevronDown } from "lucide-react"
 
-export const AccordionItem = React.forwardRef<
+import { cn } from "@/lib/utils"
+
+const Accordion = AccordionPrimitive.Root
+
+const AccordionItem = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Item>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
 >(({ className, ...props }, ref) => (
   <AccordionPrimitive.Item
     ref={ref}
-    className={cn("border-b border-gray-700", className)}
+    className={cn("border-b border-border", className)}
     {...props}
   />
-));
-AccordionItem.displayName = "AccordionItem";
+))
+AccordionItem.displayName = "AccordionItem"
 
-export const AccordionTrigger = React.forwardRef<
+const AccordionTrigger = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Trigger>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
 >(({ className, children, ...props }, ref) => (
@@ -24,37 +28,36 @@ export const AccordionTrigger = React.forwardRef<
     <AccordionPrimitive.Trigger
       ref={ref}
       className={cn(
-        "flex flex-1 items-center justify-between py-4 font-medium text-white hover:underline",
+        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
         className
       )}
       {...props}
     >
       {children}
-      <svg
-        className="ml-2 h-4 w-4 shrink-0"
-        xmlns="http://www.w3.org/2000/svg"
-        fill="none"
-        viewBox="0 0 24 24"
-        stroke="currentColor"
-      >
-        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
-      </svg>
+      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
     </AccordionPrimitive.Trigger>
   </AccordionPrimitive.Header>
-));
-AccordionTrigger.displayName = "AccordionTrigger";
+))
+AccordionTrigger.displayName = "AccordionTrigger"
 
-export const AccordionContent = React.forwardRef<
+const AccordionContent = React.forwardRef<
   React.ElementRef<typeof AccordionPrimitive.Content>,
   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
 >(({ className, ...props }, ref) => (
   <AccordionPrimitive.Content
     ref={ref}
     className={cn(
-      "overflow-hidden text-gray-300 data-[state=open]:animate-accordion-down data-[state=closed]:animate-accordion-up",
+      "overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",
       className
     )}
     {...props}
   />
-));
-AccordionContent.displayName = "AccordionContent";
+))
+AccordionContent.displayName = "AccordionContent"
+
+export {
+  Accordion,
+  AccordionItem,
+  AccordionTrigger,
+  AccordionContent,
+}

commit 928761a28c9bbe34dd43366345d63c205027444f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:43:42 2025 +0200

    Update badge.tsx

diff --git a/src/components/ui/badge.tsx b/src/components/ui/badge.tsx
index 4d8194c..c195cea 100644
--- a/src/components/ui/badge.tsx
+++ b/src/components/ui/badge.tsx
@@ -1,29 +1,34 @@
-import React from "react";
-import { cva, VariantProps } from "class-variance-authority";
-import { cn } from "@/lib/utils";
+import * as React from "react"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
 
 const badgeVariants = cva(
-  "inline-flex items-center rounded-full px-2 py-1 text-xs font-semibold uppercase tracking-wide",
+  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
   {
     variants: {
       variant: {
-        default: "bg-gray-700 text-white",
-        destructive: "bg-red-600 text-white",
-        outline: "border border-gray-700 text-gray-300",
-        pink: "bg-pink-600 text-white",
+        default: "border-transparent bg-primary text-primary-foreground",
+        secondary: "border-transparent bg-secondary text-secondary-foreground",
+        destructive: "border-transparent bg-destructive text-destructive-foreground",
+        outline: "text-foreground",
+        success: "bg-green-500 text-white",
+        warning: "bg-yellow-500 text-black",
+        info: "bg-blue-500 text-white",
       },
     },
     defaultVariants: {
       variant: "default",
     },
   }
-);
+)
 
-interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement>, VariantProps<typeof badgeVariants> {}
+export interface BadgeProps
+  extends React.HTMLAttributes<HTMLDivElement>,
+    VariantProps<typeof badgeVariants> {}
 
-export const Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(
-  ({ className, variant, ...props }, ref) => {
-    return <span ref={ref} className={cn(badgeVariants({ variant }), className)} {...props} />;
-  }
-);
-Badge.displayName = "Badge";
+function Badge({ className, variant, ...props }: BadgeProps) {
+  return <div className={cn(badgeVariants({ variant }), className)} {...props} />
+}
+
+export { Badge, badgeVariants }

commit e11ff22e80d775265dc1edd7b4345648d48f573a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:44:32 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 91bbe62..81fd302 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,37 +1,47 @@
 import * as React from "react"
 import { Slot } from "@radix-ui/react-slot"
-import { cn } from "@/lib/utils"
+import { cva, type VariantProps } from "class-variance-authority"
 
-export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
-  asChild?: boolean
-  variant?: "default" | "secondary" | "destructive" | "ghost"
-  size?: "sm" | "md" | "lg"
-}
+import { cn } from "@/lib/utils"
 
-const variants = {
-  default: "bg-pink-600 text-white hover:bg-pink-700",
-  secondary: "bg-gray-100 text-gray-900 hover:bg-gray-200",
-  destructive: "bg-red-600 text-white hover:bg-red-700",
-  ghost: "bg-transparent hover:bg-gray-100 text-gray-800",
-}
+const buttonVariants = cva(
+  "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90",
+        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
+        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
+        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "text-primary underline-offset-4 hover:underline",
+      },
+      size: {
+        default: "h-10 px-4 py-2",
+        sm: "h-9 rounded-md px-3",
+        lg: "h-11 rounded-md px-8",
+        icon: "h-10 w-10",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
 
-const sizes = {
-  sm: "h-8 px-3 text-sm",
-  md: "h-10 px-4 text-base",
-  lg: "h-12 px-6 text-lg",
+export interface ButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof buttonVariants> {
+  asChild?: boolean
 }
 
 const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ className, variant = "default", size = "md", asChild = false, ...props }, ref) => {
+  ({ className, variant, size, asChild = false, ...props }, ref) => {
     const Comp = asChild ? Slot : "button"
     return (
       <Comp
-        className={cn(
-          "inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2",
-          variants[variant],
-          sizes[size],
-          className
-        )}
+        className={cn(buttonVariants({ variant, size }), className)}
         ref={ref}
         {...props}
       />
@@ -40,4 +50,4 @@ const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
 )
 Button.displayName = "Button"
 
-export { Button }
+export { Button, buttonVariants }

commit 14aeeb7f39fb076e20c189d6062e90f12d7c03a5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:45:24 2025 +0200

    Update card.tsx

diff --git a/src/components/ui/card.tsx b/src/components/ui/card.tsx
index 55faf48..62f7258 100644
--- a/src/components/ui/card.tsx
+++ b/src/components/ui/card.tsx
@@ -2,60 +2,77 @@ import * as React from "react"
 
 import { cn } from "@/lib/utils"
 
-const Card = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn(
-      "rounded-2xl border border-border bg-background shadow-sm",
-      className
-    )}
-    {...props}
-  />
-))
+const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
+  ({ className, ...props }, ref) => (
+    <div
+      ref={ref}
+      className={cn("rounded-2xl border bg-card text-card-foreground shadow", className)}
+      {...props}
+    />
+  )
+)
 Card.displayName = "Card"
 
-const CardHeader = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn("flex flex-col space-y-1.5 p-6", className)}
-    {...props}
-  />
-))
+const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
+  ({ className, ...props }, ref) => (
+    <div
+      ref={ref}
+      className={cn("flex flex-col space-y-1.5 p-6", className)}
+      {...props}
+    />
+  )
+)
 CardHeader.displayName = "CardHeader"
 
-const CardTitle = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLHeadingElement>
->(({ className, ...props }, ref) => (
-  <h3
-    ref={ref}
-    className={cn("text-lg font-semibold leading-none tracking-tight", className)}
-    {...props}
-  />
-))
+const CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(
+  ({ className, ...props }, ref) => (
+    <h3
+      ref={ref}
+      className={cn("text-lg font-semibold leading-none tracking-tight", className)}
+      {...props}
+    />
+  )
+)
 CardTitle.displayName = "CardTitle"
 
-const CardDescription = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLParagraphElement>
->(({ className, ...props }, ref) => (
-  <p
-    ref={ref}
-    className={cn("text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
+const CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
+  ({ className, ...props }, ref) => (
+    <p
+      ref={ref}
+      className={cn("text-sm text-muted-foreground", className)}
+      {...props}
+    />
+  )
+)
 CardDescription.displayName = "CardDescription"
 
-const CardContent = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={
+const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
+  ({ className, ...props }, ref) => (
+    <div
+      ref={ref}
+      className={cn("p-6 pt-0", className)}
+      {...props}
+    />
+  )
+)
+CardContent.displayName = "CardContent"
+
+const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
+  ({ className, ...props }, ref) => (
+    <div
+      ref={ref}
+      className={cn("flex items-center p-6 pt-0", className)}
+      {...props}
+    />
+  )
+)
+CardFooter.displayName = "CardFooter"
+
+export {
+  Card,
+  CardHeader,
+  CardFooter,
+  CardTitle,
+  CardDescription,
+  CardContent
+}

commit 2c164051a0b828a5ef77b1830a21086a5295eaf1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:46:09 2025 +0200

    Update input.tsx

diff --git a/src/components/ui/input.tsx b/src/components/ui/input.tsx
index 7c6da58..b519054 100644
--- a/src/components/ui/input.tsx
+++ b/src/components/ui/input.tsx
@@ -1,23 +1,24 @@
-"use client"
-
 import * as React from "react"
+
 import { cn } from "@/lib/utils"
 
-const Input = React.forwardRef<
-  HTMLInputElement,
-  React.InputHTMLAttributes<HTMLInputElement>
->(({ className, ...props }, ref) => {
-  return (
-    <input
-      ref={ref}
-      className={cn(
-        "flex h-10 w-full rounded-md border border-border bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
-        className
-      )}
-      {...props}
-    />
-  )
-})
+export interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}
+
+const Input = React.forwardRef<HTMLInputElement, InputProps>(
+  ({ className, type, ...props }, ref) => {
+    return (
+      <input
+        type={type}
+        className={cn(
+          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+          className
+        )}
+        ref={ref}
+        {...props}
+      />
+    )
+  }
+)
 Input.displayName = "Input"
 
 export { Input }

commit 064dd7e7c4e082b00186ff61a1bdfa312afdf060
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:46:56 2025 +0200

    Update label.tsx

diff --git a/src/components/ui/label.tsx b/src/components/ui/label.tsx
index ff53ee3..3b58058 100644
--- a/src/components/ui/label.tsx
+++ b/src/components/ui/label.tsx
@@ -1,18 +1,22 @@
-"use client"
-
 import * as React from "react"
 import { cn } from "@/lib/utils"
 
-const Label = React.forwardRef<
-  HTMLLabelElement,
-  React.LabelHTMLAttributes<HTMLLabelElement>
->(({ className, ...props }, ref) => (
-  <label
-    ref={ref}
-    className={cn("block mb-2 text-sm font-medium text-muted-foreground", className)}
-    {...props}
-  />
-))
+export interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}
+
+const Label = React.forwardRef<HTMLLabelElement, LabelProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <label
+        ref={ref}
+        className={cn(
+          "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
+          className
+        )}
+        {...props}
+      />
+    )
+  }
+)
 Label.displayName = "Label"
 
 export { Label }

commit 7487e2a8d9ac2b37ecdd32958ce4a807db286019
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:49:43 2025 +0200

    Create separator.tsx

diff --git a/src/components/ui/separator.tsx b/src/components/ui/separator.tsx
new file mode 100644
index 0000000..dc699a4
--- /dev/null
+++ b/src/components/ui/separator.tsx
@@ -0,0 +1,13 @@
+import * as React from "react"
+
+export const Separator = React.forwardRef<
+  HTMLHRElement,
+  React.HTMLAttributes<HTMLHRElement>
+>(({ className, ...props }, ref) => (
+  <hr
+    ref={ref}
+    className={`my-4 border-t border-gray-200 dark:border-gray-700 ${className}`}
+    {...props}
+  />
+))
+Separator.displayName = "Separator"

commit 0541fb7432f4212733359cbf4f365fe9bfdc01e0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:53:07 2025 +0200

    Create toggle.tsx

diff --git a/src/components/ui/toggle.tsx b/src/components/ui/toggle.tsx
new file mode 100644
index 0000000..e53fa71
--- /dev/null
+++ b/src/components/ui/toggle.tsx
@@ -0,0 +1,22 @@
+import * as React from "react"
+
+interface ToggleProps extends React.InputHTMLAttributes<HTMLInputElement> {}
+
+export const Toggle = React.forwardRef<HTMLInputElement, ToggleProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <label className={`inline-flex relative items-center cursor-pointer ${className ?? ""}`}>
+        <input
+          type="checkbox"
+          className="sr-only peer"
+          ref={ref}
+          {...props}
+        />
+        <div className="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-primary transition-colors duration-300"></div>
+        <div className="absolute left-1 top-1 w-4 h-4 bg-white rounded-full shadow-md peer-checked:translate-x-5 transition-transform duration-300"></div>
+      </label>
+    )
+  }
+)
+
+Toggle.displayName = "Toggle"

commit f451f95b4ecb5a1a84fab82654e13a9b12cba0ed
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:53:58 2025 +0200

    Update separator.tsx

diff --git a/src/components/ui/separator.tsx b/src/components/ui/separator.tsx
index dc699a4..405bff2 100644
--- a/src/components/ui/separator.tsx
+++ b/src/components/ui/separator.tsx
@@ -1,13 +1,17 @@
 import * as React from "react"
 
-export const Separator = React.forwardRef<
-  HTMLHRElement,
-  React.HTMLAttributes<HTMLHRElement>
->(({ className, ...props }, ref) => (
-  <hr
-    ref={ref}
-    className={`my-4 border-t border-gray-200 dark:border-gray-700 ${className}`}
-    {...props}
-  />
-))
+interface SeparatorProps extends React.HTMLAttributes<HTMLHRElement> {}
+
+export const Separator = React.forwardRef<HTMLHRElement, SeparatorProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <hr
+        ref={ref}
+        className={`border-gray-300 dark:border-gray-700 my-4 ${className ?? ""}`}
+        {...props}
+      />
+    )
+  }
+)
+
 Separator.displayName = "Separator"

commit 97993a0d86f0261e3a297cc32b24d137fbd6e83a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:55:03 2025 +0200

    Create tabs.tsx

diff --git a/src/components/ui/tabs.tsx b/src/components/ui/tabs.tsx
new file mode 100644
index 0000000..7b58336
--- /dev/null
+++ b/src/components/ui/tabs.tsx
@@ -0,0 +1,85 @@
+import * as React from "react"
+
+interface TabsProps extends React.HTMLAttributes<HTMLDivElement> {
+  defaultValue?: string
+  onValueChange?: (value: string) => void
+}
+
+interface TabsListProps extends React.HTMLAttributes<HTMLDivElement> {}
+
+interface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
+  value: string
+}
+
+interface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {
+  value: string
+}
+
+export function Tabs({ defaultValue, onValueChange, children, ...props }: TabsProps) {
+  const [selectedValue, setSelectedValue] = React.useState(defaultValue)
+
+  React.useEffect(() => {
+    if (defaultValue) {
+      setSelectedValue(defaultValue)
+    }
+  }, [defaultValue])
+
+  const handleValueChange = (value: string) => {
+    setSelectedValue(value)
+    if (onValueChange) {
+      onValueChange(value)
+    }
+  }
+
+  return (
+    <div {...props} className={`tabs-root ${props.className ?? ""}`}>
+      {React.Children.map(children, (child) => {
+        if (!React.isValidElement(child)) return null
+        return React.cloneElement(child, {
+          selectedValue,
+          onValueChange: handleValueChange,
+        })
+      })}
+    </div>
+  )
+}
+
+export function TabsList({ children, ...props }: TabsListProps) {
+  return (
+    <div
+      role="tablist"
+      {...props}
+      className={`tabs-list flex border-b border-gray-300 dark:border-gray-700 ${props.className ?? ""}`}
+    >
+      {children}
+    </div>
+  )
+}
+
+export function TabsTrigger({ value, children, ...props }: TabsTriggerProps) {
+  return (
+    <button
+      role="tab"
+      aria-selected={props["aria-selected"]}
+      {...props}
+      className={`tabs-trigger px-4 py-2 cursor-pointer text-sm font-medium text-gray-700 dark:text-gray-300 
+        data-[selected=true]:border-b-2 data-[selected=true]:border-primary data-[selected=true]:text-primary
+        hover:text-primary
+        ${props.className ?? ""}`}
+      data-selected={props["aria-selected"]}
+    >
+      {children}
+    </button>
+  )
+}
+
+export function TabsContent({ value, children, selectedValue, ...props }: TabsContentProps & { selectedValue?: string }) {
+  if (value !== selectedValue) {
+    return null
+  }
+  return (
+    <div {...props} className={`tabs-content p-4 ${props.className ?? ""}`}>
+      {children}
+    </div>
+  )
+}

commit ae4949adca818d0ae759aa63b12560aa9c5f4bab
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:55:55 2025 +0200

    Update toggle.tsx

diff --git a/src/components/ui/toggle.tsx b/src/components/ui/toggle.tsx
index e53fa71..fe769d5 100644
--- a/src/components/ui/toggle.tsx
+++ b/src/components/ui/toggle.tsx
@@ -1,22 +1,46 @@
 import * as React from "react"
 
-interface ToggleProps extends React.InputHTMLAttributes<HTMLInputElement> {}
+interface ToggleProps extends React.InputHTMLAttributes<HTMLInputElement> {
+  checked?: boolean
+  onCheckedChange?: (checked: boolean) => void
+}
 
-export const Toggle = React.forwardRef<HTMLInputElement, ToggleProps>(
-  ({ className, ...props }, ref) => {
-    return (
-      <label className={`inline-flex relative items-center cursor-pointer ${className ?? ""}`}>
-        <input
-          type="checkbox"
-          className="sr-only peer"
-          ref={ref}
-          {...props}
-        />
-        <div className="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-primary transition-colors duration-300"></div>
-        <div className="absolute left-1 top-1 w-4 h-4 bg-white rounded-full shadow-md peer-checked:translate-x-5 transition-transform duration-300"></div>
-      </label>
-    )
+export function Toggle({ checked, onCheckedChange, ...props }: ToggleProps) {
+  const [isChecked, setIsChecked] = React.useState(checked ?? false)
+
+  React.useEffect(() => {
+    if (checked !== undefined) {
+      setIsChecked(checked)
+    }
+  }, [checked])
+
+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
+    setIsChecked(e.target.checked)
+    if (onCheckedChange) {
+      onCheckedChange(e.target.checked)
+    }
   }
-)
 
-Toggle.displayName = "Toggle"
+  return (
+    <label className="inline-flex items-center cursor-pointer">
+      <input
+        type="checkbox"
+        checked={isChecked}
+        onChange={handleChange}
+        className="sr-only"
+        {...props}
+      />
+      <span
+        className={`w-10 h-6 bg-gray-300 rounded-full relative
+          ${isChecked ? "bg-primary" : "bg-gray-300"}
+          transition-colors duration-200 ease-in-out`}
+      >
+        <span
+          className={`block w-4 h-4 bg-white rounded-full shadow transform
+            ${isChecked ? "translate-x-4" : "translate-x-0"}
+            transition-transform duration-200 ease-in-out`}
+        ></span>
+      </span>
+    </label>
+  )
+}

commit 35e82becea0814079c27ebccc7a38318772f3600
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:57:04 2025 +0200

    Update separator.tsx

diff --git a/src/components/ui/separator.tsx b/src/components/ui/separator.tsx
index 405bff2..42ad931 100644
--- a/src/components/ui/separator.tsx
+++ b/src/components/ui/separator.tsx
@@ -1,17 +1,7 @@
 import * as React from "react"
 
-interface SeparatorProps extends React.HTMLAttributes<HTMLHRElement> {}
-
-export const Separator = React.forwardRef<HTMLHRElement, SeparatorProps>(
-  ({ className, ...props }, ref) => {
-    return (
-      <hr
-        ref={ref}
-        className={`border-gray-300 dark:border-gray-700 my-4 ${className ?? ""}`}
-        {...props}
-      />
-    )
-  }
-)
-
-Separator.displayName = "Separator"
+export function Separator() {
+  return (
+    <hr className="border-t border-gray-200 my-4 dark:border-gray-700" />
+  )
+}

commit 1e5f9ea7e7878d2bac24eb2d096cad4a246e00f8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:57:54 2025 +0200

    Update tabs.tsx

diff --git a/src/components/ui/tabs.tsx b/src/components/ui/tabs.tsx
index 7b58336..9c74839 100644
--- a/src/components/ui/tabs.tsx
+++ b/src/components/ui/tabs.tsx
@@ -1,85 +1,30 @@
 import * as React from "react"
 
-interface TabsProps extends React.HTMLAttributes<HTMLDivElement> {
-  defaultValue?: string
-  onValueChange?: (value: string) => void
+interface TabsProps {
+  tabs: { id: string; label: string }[]
+  activeTab: string
+  onTabChange: (id: string) => void
 }
 
-interface TabsListProps extends React.HTMLAttributes<HTMLDivElement> {}
-
-interface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
-  value: string
-}
-
-interface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {
-  value: string
-}
-
-export function Tabs({ defaultValue, onValueChange, children, ...props }: TabsProps) {
-  const [selectedValue, setSelectedValue] = React.useState(defaultValue)
-
-  React.useEffect(() => {
-    if (defaultValue) {
-      setSelectedValue(defaultValue)
-    }
-  }, [defaultValue])
-
-  const handleValueChange = (value: string) => {
-    setSelectedValue(value)
-    if (onValueChange) {
-      onValueChange(value)
-    }
-  }
-
-  return (
-    <div {...props} className={`tabs-root ${props.className ?? ""}`}>
-      {React.Children.map(children, (child) => {
-        if (!React.isValidElement(child)) return null
-        return React.cloneElement(child, {
-          selectedValue,
-          onValueChange: handleValueChange,
-        })
-      })}
-    </div>
-  )
-}
-
-export function TabsList({ children, ...props }: TabsListProps) {
-  return (
-    <div
-      role="tablist"
-      {...props}
-      className={`tabs-list flex border-b border-gray-300 dark:border-gray-700 ${props.className ?? ""}`}
-    >
-      {children}
-    </div>
-  )
-}
-
-export function TabsTrigger({ value, children, ...props }: TabsTriggerProps) {
-  return (
-    <button
-      role="tab"
-      aria-selected={props["aria-selected"]}
-      {...props}
-      className={`tabs-trigger px-4 py-2 cursor-pointer text-sm font-medium text-gray-700 dark:text-gray-300 
-        data-[selected=true]:border-b-2 data-[selected=true]:border-primary data-[selected=true]:text-primary
-        hover:text-primary
-        ${props.className ?? ""}`}
-      data-selected={props["aria-selected"]}
-    >
-      {children}
-    </button>
-  )
-}
-
-export function TabsContent({ value, children, selectedValue, ...props }: TabsContentProps & { selectedValue?: string }) {
-  if (value !== selectedValue) {
-    return null
-  }
+export function Tabs({ tabs, activeTab, onTabChange }: TabsProps) {
   return (
-    <div {...props} className={`tabs-content p-4 ${props.className ?? ""}`}>
-      {children}
+    <div className="border-b border-gray-200 dark:border-gray-700">
+      <nav className="-mb-px flex space-x-8" aria-label="Tabs">
+        {tabs.map((tab) => (
+          <button
+            key={tab.id}
+            onClick={() => onTabChange(tab.id)}
+            className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${
+              activeTab === tab.id
+                ? "border-primary text-primary"
+                : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300"
+            }`}
+            aria-current={activeTab === tab.id ? "page" : undefined}
+          >
+            {tab.label}
+          </button>
+        ))}
+      </nav>
     </div>
   )
 }

commit 2e278b282ff88753c78db7d3ca9f4ec450c21c45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 19:59:05 2025 +0200

    Update toggle.tsx

diff --git a/src/components/ui/toggle.tsx b/src/components/ui/toggle.tsx
index fe769d5..f2b72af 100644
--- a/src/components/ui/toggle.tsx
+++ b/src/components/ui/toggle.tsx
@@ -1,45 +1,16 @@
 import * as React from "react"
 
 interface ToggleProps extends React.InputHTMLAttributes<HTMLInputElement> {
-  checked?: boolean
-  onCheckedChange?: (checked: boolean) => void
+  label: string
 }
 
-export function Toggle({ checked, onCheckedChange, ...props }: ToggleProps) {
-  const [isChecked, setIsChecked] = React.useState(checked ?? false)
-
-  React.useEffect(() => {
-    if (checked !== undefined) {
-      setIsChecked(checked)
-    }
-  }, [checked])
-
-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
-    setIsChecked(e.target.checked)
-    if (onCheckedChange) {
-      onCheckedChange(e.target.checked)
-    }
-  }
-
+export function Toggle({ label, ...props }: ToggleProps) {
   return (
     <label className="inline-flex items-center cursor-pointer">
-      <input
-        type="checkbox"
-        checked={isChecked}
-        onChange={handleChange}
-        className="sr-only"
-        {...props}
-      />
-      <span
-        className={`w-10 h-6 bg-gray-300 rounded-full relative
-          ${isChecked ? "bg-primary" : "bg-gray-300"}
-          transition-colors duration-200 ease-in-out`}
-      >
-        <span
-          className={`block w-4 h-4 bg-white rounded-full shadow transform
-            ${isChecked ? "translate-x-4" : "translate-x-0"}
-            transition-transform duration-200 ease-in-out`}
-        ></span>
+      <input type="checkbox" className="sr-only peer" {...props} />
+      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary rounded-full peer peer-checked:bg-primary transition-colors duration-200"></div>
+      <span className="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">
+        {label}
       </span>
     </label>
   )

commit d4cdf580ca90373cd93b9fef965a49ec3e64e054
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:01:41 2025 +0200

    Update tabs.tsx

diff --git a/src/components/ui/tabs.tsx b/src/components/ui/tabs.tsx
index 9c74839..70073b2 100644
--- a/src/components/ui/tabs.tsx
+++ b/src/components/ui/tabs.tsx
@@ -1,30 +1,54 @@
+"use client"
+
 import * as React from "react"
+import * as TabsPrimitive from "@radix-ui/react-tabs"
+import { cn } from "@/lib/utils"
+
+const Tabs = TabsPrimitive.Root
+
+const TabsList = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.List>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.List
+    ref={ref}
+    className={cn(
+      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+TabsList.displayName = TabsPrimitive.List.displayName
+
+const TabsTrigger = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Trigger>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Trigger
+    ref={ref}
+    className={cn(
+      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 
-interface TabsProps {
-  tabs: { id: string; label: string }[]
-  activeTab: string
-  onTabChange: (id: string) => void
-}
+const TabsContent = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Content
+    ref={ref}
+    className={cn(
+      "mt-2 rounded-md border border-border p-6 outline-none",
+      className
+    )}
+    {...props}
+  />
+))
+TabsContent.displayName = TabsPrimitive.Content.displayName
 
-export function Tabs({ tabs, activeTab, onTabChange }: TabsProps) {
-  return (
-    <div className="border-b border-gray-200 dark:border-gray-700">
-      <nav className="-mb-px flex space-x-8" aria-label="Tabs">
-        {tabs.map((tab) => (
-          <button
-            key={tab.id}
-            onClick={() => onTabChange(tab.id)}
-            className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${
-              activeTab === tab.id
-                ? "border-primary text-primary"
-                : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300"
-            }`}
-            aria-current={activeTab === tab.id ? "page" : undefined}
-          >
-            {tab.label}
-          </button>
-        ))}
-      </nav>
-    </div>
-  )
-}
+export { Tabs, TabsList, TabsTrigger, TabsContent }

commit 1bf34b9ae962cefcad0c7ad5954370aafe461c76
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:02:28 2025 +0200

    Update separator.tsx

diff --git a/src/components/ui/separator.tsx b/src/components/ui/separator.tsx
index 42ad931..8e6d81c 100644
--- a/src/components/ui/separator.tsx
+++ b/src/components/ui/separator.tsx
@@ -1,7 +1,18 @@
+"use client"
+
 import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Separator = React.forwardRef<
+  React.ElementRef<"hr">,
+  React.ComponentPropsWithoutRef<"hr">
+>(({ className, ...props }, ref) => (
+  <hr
+    ref={ref}
+    className={cn("border-border bg-border h-px border-0", className)}
+    {...props}
+  />
+))
+Separator.displayName = "Separator"
 
-export function Separator() {
-  return (
-    <hr className="border-t border-gray-200 my-4 dark:border-gray-700" />
-  )
-}
+export { Separator }

commit cdf99191fd1f4e38f9b1d02ed7d2d7ca97a66773
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:12:21 2025 +0200

    Update card.tsx

diff --git a/src/components/ui/card.tsx b/src/components/ui/card.tsx
index 62f7258..8888d16 100644
--- a/src/components/ui/card.tsx
+++ b/src/components/ui/card.tsx
@@ -1,78 +1,21 @@
-import * as React from "react"
-
-import { cn } from "@/lib/utils"
-
-const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
-  ({ className, ...props }, ref) => (
-    <div
-      ref={ref}
-      className={cn("rounded-2xl border bg-card text-card-foreground shadow", className)}
-      {...props}
-    />
-  )
-)
-Card.displayName = "Card"
-
-const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
-  ({ className, ...props }, ref) => (
-    <div
-      ref={ref}
-      className={cn("flex flex-col space-y-1.5 p-6", className)}
-      {...props}
-    />
-  )
-)
-CardHeader.displayName = "CardHeader"
-
-const CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(
-  ({ className, ...props }, ref) => (
-    <h3
-      ref={ref}
-      className={cn("text-lg font-semibold leading-none tracking-tight", className)}
-      {...props}
-    />
-  )
-)
-CardTitle.displayName = "CardTitle"
-
-const CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
-  ({ className, ...props }, ref) => (
-    <p
-      ref={ref}
-      className={cn("text-sm text-muted-foreground", className)}
-      {...props}
-    />
-  )
-)
-CardDescription.displayName = "CardDescription"
-
-const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
-  ({ className, ...props }, ref) => (
-    <div
-      ref={ref}
-      className={cn("p-6 pt-0", className)}
-      {...props}
-    />
-  )
-)
-CardContent.displayName = "CardContent"
-
-const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
-  ({ className, ...props }, ref) => (
-    <div
-      ref={ref}
-      className={cn("flex items-center p-6 pt-0", className)}
-      {...props}
-    />
-  )
-)
-CardFooter.displayName = "CardFooter"
-
-export {
-  Card,
-  CardHeader,
-  CardFooter,
-  CardTitle,
-  CardDescription,
-  CardContent
-}
+import * as React from "react";
+
+interface CardProps extends React.HTMLAttributes<HTMLDivElement> {}
+
+const Card = React.forwardRef<HTMLDivElement, CardProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <div
+        ref={ref}
+        className={
+          "rounded-lg border border-border bg-background p-4 " + (className || "")
+        }
+        {...props}
+      />
+    );
+  }
+);
+
+Card.displayName = "Card";
+
+export { Card };

commit 78acb7f6b64ed71935ab40bad7c0c46b210bcf2f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:15:21 2025 +0200

    Update jsconfig.json

diff --git a/jsconfig.json b/jsconfig.json
index 2c8ee2b..5879100 100644
--- a/jsconfig.json
+++ b/jsconfig.json
@@ -1,8 +1,8 @@
 {
   "compilerOptions": {
-    "baseUrl": ".",
+    "baseUrl": "src",
     "paths": {
-      "@/*": ["src/*"]
+      "@/*": ["*"]
     }
   }
 }

commit f644416726d185eb617a6c942e0b702eab013c4b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:20:10 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index c80fcc4..55df190 100644
--- a/.env.local
+++ b/.env.local
@@ -1,2 +1,3 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
+WATCHPACK_POLLING=true

commit fd8afdf8785d0965b16c0de373abed4ce894bc30
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:25:31 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index e986c8e..c33ed24 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,10 +1,15 @@
-/** @type {import('next').NextConfig} */
-const nextConfig = {
-  reactStrictMode: true,
-  swcMinify: true,
-  images: {
-    domains: ['yourdomain.com'], // ajoute ici les domaines autorisés pour les images (CDN, etc.)
+// next.config.js
+module.exports = {
+  webpackDevMiddleware: config => {
+    config.watchOptions = {
+      poll: 1000,               // forcer le polling, important sous Termux
+      ignored: [
+        '**/node_modules',
+        '**/.next',
+        '/data/**',             // ignore tout sous /data
+        '/data/data/**'         // ignore /data/data aussi
+      ],
+    }
+    return config
   },
 }
-
-module.exports = nextConfig

commit 24fb2838137cbd682efd007ddcac85b51af16b7e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:29:11 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index c33ed24..d87d10e 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,15 +1,18 @@
-// next.config.js
-module.exports = {
+/** @type {import('next').NextConfig} */
+const nextConfig = {
   webpackDevMiddleware: config => {
     config.watchOptions = {
-      poll: 1000,               // forcer le polling, important sous Termux
+      poll: 1000,
       ignored: [
         '**/node_modules',
         '**/.next',
-        '/data/**',             // ignore tout sous /data
-        '/data/data/**'         // ignore /data/data aussi
+        '/data/**',        // ignore tous les dossiers /data
+        '/data/data/**',   // ignore aussi /data/data
+        '/',               // ignore la racine /
       ],
     }
     return config
   },
 }
+
+module.exports = nextConfig

commit e1bc0f7e0ce49c91970b295aef827e5f59fc9616
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:31:58 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index d87d10e..1f322c9 100644
--- a/next.config.js
+++ b/next.config.js
@@ -3,16 +3,12 @@ const nextConfig = {
   webpackDevMiddleware: config => {
     config.watchOptions = {
       poll: 1000,
-      ignored: [
-        '**/node_modules',
-        '**/.next',
-        '/data/**',        // ignore tous les dossiers /data
-        '/data/data/**',   // ignore aussi /data/data
-        '/',               // ignore la racine /
-      ],
+      aggregateTimeout: 300,
+      ignored: ['**/node_modules/**', '**/.next/**'],
     }
     return config
   },
+  watch: true,
 }
 
 module.exports = nextConfig

commit d5243723442ac2872c940a4e7d809ad811dc3051
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:40:08 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 67f0f98..841c20e 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -2,8 +2,7 @@
 module.exports = {
   content: [
     "./app/**/*.{js,ts,jsx,tsx}",
-    "./pages/**/*.{js,ts,jsx,tsx}",
-    "./components/**/*.{js,ts,jsx,tsx}"
+    "./src/components/**/*.{js,ts,jsx,tsx}",
   ],
   theme: {
     extend: {},

commit 59b1d7649e51aed1834c38d6806318ce277acfce
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:40:48 2025 +0200

    Update postcss.config.js

commit 4f673df04f19e558439ae5a0284a7e481fd3fcd8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:41:55 2025 +0200

    Create globals.css

diff --git a/src/styles/globals.css b/src/styles/globals.css
new file mode 100644
index 0000000..b5c61c9
--- /dev/null
+++ b/src/styles/globals.css
@@ -0,0 +1,3 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;

commit 2d23a34f252e7ddbf3bdd0120d531a6fe68e19c9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 20:43:01 2025 +0200

    Update layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
index 80a510a..6e2e235 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,25 +1,9 @@
-import './globals.css'
-import React from 'react'
-import Header from '../components/Header'
-import Footer from '../components/Footer'
+import '../src/styles/globals.css'
 
-export const metadata = {
-  title: 'BeatsMarket - La plateforme mondiale des beats',
-  description: 'Achetez, vendez et découvrez les meilleurs beats musicaux.',
-}
-
-export default function RootLayout({
-  children,
-}: {
-  children: React.ReactNode
-}) {
+export default function RootLayout({ children }: { children: React.ReactNode }) {
   return (
     <html lang="fr">
-      <body className="bg-darkbg text-white font-poppins flex flex-col min-h-screen">
-        <Header />
-        <main className="flex-grow">{children}</main>
-        <Footer />
-      </body>
+      <body>{children}</body>
     </html>
   )
 }

commit d5bec10c674e6824f15b6558ae44ab9cf2d16ac2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:37:33 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 841c20e..67f0f98 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -2,7 +2,8 @@
 module.exports = {
   content: [
     "./app/**/*.{js,ts,jsx,tsx}",
-    "./src/components/**/*.{js,ts,jsx,tsx}",
+    "./pages/**/*.{js,ts,jsx,tsx}",
+    "./components/**/*.{js,ts,jsx,tsx}"
   ],
   theme: {
     extend: {},

commit cedc8f42ca0db58279238cca61e15e2d2308f50a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:42:02 2025 +0200

    Create globals.css

diff --git a/styles/globals.css b/styles/globals.css
new file mode 100644
index 0000000..35e502a
--- /dev/null
+++ b/styles/globals.css
@@ -0,0 +1,15 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* Styles globaux personnalisés */
+
+body {
+  @apply bg-gray-900 text-white font-sans;
+}
+
+a {
+  @apply text-pink-500 hover:text-pink-400;
+}
+
+/* Ajoute ici tes styles personnalisés */

commit ce1db6d97b5ffe19439660d2498c66ae5474e8b1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:42:48 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 67f0f98..e481ec2 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,12 +1,27 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
   content: [
-    "./app/**/*.{js,ts,jsx,tsx}",
-    "./pages/**/*.{js,ts,jsx,tsx}",
-    "./components/**/*.{js,ts,jsx,tsx}"
+    './app/**/*.{js,ts,jsx,tsx}',   // pour Next.js app directory
+    './pages/**/*.{js,ts,jsx,tsx}', // si tu as encore un dossier pages
+    './components/**/*.{js,ts,jsx,tsx}', // tes composants
   ],
   theme: {
-    extend: {},
+    extend: {
+      colors: {
+        pink: {
+          400: '#FF6FAF',
+          500: '#FF3F8B',
+        },
+        violet: {
+          400: '#8B5CF6',
+          500: '#7C3AED',
+        },
+      },
+      fontFamily: {
+        sans: ['Poppins', 'sans-serif'],
+        serif: ['PT Serif', 'serif'],
+      },
+    },
   },
   plugins: [],
 }

commit ebaa49495d3008e6e1e5e6319f852cd1a1f0f37a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:44:05 2025 +0200

    Update layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
index 6e2e235..ae387d6 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,4 +1,9 @@
-import '../src/styles/globals.css'
+import '../styles/globals.css'
+
+export const metadata = {
+  title: 'BeatsMarket',
+  description: 'Plateforme de vente de beats pro',
+}
 
 export default function RootLayout({ children }: { children: React.ReactNode }) {
   return (

commit 7ddf36921bf30549fad7a863951985a04c809867
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:48:54 2025 +0200

    Create fonts.ts

diff --git a/src/fonts.ts b/src/fonts.ts
new file mode 100644
index 0000000..a232044
--- /dev/null
+++ b/src/fonts.ts
@@ -0,0 +1,15 @@
+import { Poppins, PT_Sans } from '@next/font/google';
+
+export const poppins = Poppins({
+  subsets: ['latin'],
+  weight: ['400', '700'],
+  variable: '--font-poppins',
+  display: 'swap',
+});
+
+export const ptSans = PT_Sans({
+  subsets: ['latin'],
+  weight: ['400', '700'],
+  variable: '--font-pt-sans',
+  display: 'swap',
+});

commit 01fe69225d42c7b41d572fc8e535f5d0d3815d4b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:49:54 2025 +0200

    Create layout.tsx

diff --git a/src/app/layout.tsx b/src/app/layout.tsx
new file mode 100644
index 0000000..b99887e
--- /dev/null
+++ b/src/app/layout.tsx
@@ -0,0 +1,12 @@
+import './globals.css';
+import { poppins, ptSans } from '../fonts';
+
+export default function RootLayout({ children }: { children: React.ReactNode }) {
+  return (
+    <html lang="fr" className={`${poppins.variable} ${ptSans.variable}`}>
+      <body className="bg-gray-900 text-white">
+        {children}
+      </body>
+    </html>
+  );
+}

commit 51ac7680d17c95b7fa5e1dfd3c2dff77edf8b601
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:50:52 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index e481ec2..8546d77 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,27 +1,22 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
   content: [
-    './app/**/*.{js,ts,jsx,tsx}',   // pour Next.js app directory
-    './pages/**/*.{js,ts,jsx,tsx}', // si tu as encore un dossier pages
-    './components/**/*.{js,ts,jsx,tsx}', // tes composants
+    './app/**/*.{js,ts,jsx,tsx}',
+    './src/components/**/*.{js,ts,jsx,tsx}',
   ],
   theme: {
     extend: {
       colors: {
-        pink: {
-          400: '#FF6FAF',
-          500: '#FF3F8B',
-        },
-        violet: {
-          400: '#8B5CF6',
-          500: '#7C3AED',
-        },
+        primary: '#E75480',  // Rose vif BeatsMarket
+        secondary: '#5C2A82', // Violet BeatsMarket
+        background: '#121212', // Fond sombre
+        text: '#FFFFFF', // Texte clair
       },
       fontFamily: {
-        sans: ['Poppins', 'sans-serif'],
-        serif: ['PT Serif', 'serif'],
+        poppins: ['var(--font-poppins)', 'sans-serif'],
+        ptsans: ['var(--font-pt-sans)', 'sans-serif'],
       },
     },
   },
   plugins: [],
-}
+};

commit 05af947817a4973200551da6007b670c27574a10
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:52:14 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 33ad091..12a703d 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -3,4 +3,4 @@ module.exports = {
     tailwindcss: {},
     autoprefixer: {},
   },
-}
+};

commit 755e94ad3154037a66ccaee3ad2c26e191f85dd7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:53:07 2025 +0200

    Update layout.tsx

diff --git a/app/layout.tsx b/app/layout.tsx
index ae387d6..cf9712b 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,14 +1,20 @@
-import '../styles/globals.css'
+import './globals.css';
+import { Poppins, PT_Sans } from 'next/font/google';
+
+const poppins = Poppins({ subsets: ['latin'], weight: ['400', '700'], variable: '--font-poppins' });
+const ptSans = PT_Sans({ subsets: ['latin'], weight: ['400', '700'], variable: '--font-pt-sans' });
 
 export const metadata = {
   title: 'BeatsMarket',
-  description: 'Plateforme de vente de beats pro',
-}
+  description: 'Marketplace pro pour beatmakers et artistes',
+};
 
 export default function RootLayout({ children }: { children: React.ReactNode }) {
   return (
-    <html lang="fr">
-      <body>{children}</body>
+    <html lang="fr" className={`${poppins.variable} ${ptSans.variable}`}>
+      <body className="bg-background text-text font-poppins">
+        {children}
+      </body>
     </html>
-  )
+  );
 }

commit d86421f4d8fc9bd8e0a95a229affc535a7f3f691
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:54:12 2025 +0200

    Update page.tsx

diff --git a/app/page.tsx b/app/page.tsx
index 45a5b6c..c86302d 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,12 +1,33 @@
-import React from "react"
-
-export default function HomePage() {
+export default function Home() {
   return (
-    <main className="min-h-screen bg-darkbg text-white font-poppins px-6 py-12">
-      <h1 className="text-4xl font-bold mb-6">Bienvenue sur BeatsMarket</h1>
-      <p className="text-lg max-w-xl">
-        La plateforme mondiale pour acheter et vendre des beats de qualité.
-      </p>
+    <main className="container mx-auto p-6">
+      <h1 className="text-4xl font-bold text-primary mb-8">Bienvenue sur BeatsMarket</h1>
+      <section className="mb-12">
+        <h2 className="text-2xl font-semibold mb-4">Beatmaker du mois</h2>
+        {/* Exemple de carte ou slider pour mettre en avant un beatmaker */}
+        <div className="bg-gray-800 rounded-lg p-6 shadow-md">
+          <p className="text-lg">Découvrez les meilleurs beats du mois sélectionnés pour vous.</p>
+        </div>
+      </section>
+
+      <section className="mb-12">
+        <h2 className="text-2xl font-semibold mb-4">Recherche IA</h2>
+        {/* Formulaire ou composant de recherche IA */}
+        <input
+          type="text"
+          placeholder="Recherche de beats par IA..."
+          className="w-full p-3 rounded-md bg-gray-900 border border-gray-700 placeholder-gray-500 text-white focus:outline-none focus:ring-2 focus:ring-primary"
+        />
+      </section>
+
+      <section>
+        <h2 className="text-2xl font-semibold mb-4">Pourquoi nous ?</h2>
+        <ul className="list-disc list-inside space-y-2">
+          <li>Beats exclusifs et originaux</li>
+          <li>Tarifs transparents et flexibles</li>
+          <li>Support pro et services IA intégrés</li>
+        </ul>
+      </section>
     </main>
-  )
+  );
 }

commit 3ef66f833b7da777df014a41dea94b36c9a149fc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:55:39 2025 +0200

    Update footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
index 3c65ebb..28eb7b9 100644
--- a/src/components/ui/footer.tsx
+++ b/src/components/ui/footer.tsx
@@ -1,28 +1,32 @@
-"use client"
-
-import Link from "next/link"
+import React from "react";
 
 export function Footer() {
   return (
-    <footer className="bg-gray-900 text-gray-300 py-8 px-6">
-      <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center space-y-6 md:space-y-0">
-        <div className="text-xl font-bold text-pink-500">BeatsMarket</div>
-        <nav className="flex space-x-6">
-          <Link href="/help" className="hover:text-pink-500 transition">
-            Aide
-          </Link>
-          <Link href="/about" className="hover:text-pink-500 transition">
-            À propos
-          </Link>
-          <Link href="/terms" className="hover:text-pink-500 transition">
-            CGV
-          </Link>
-          <Link href="/pricing" className="hover:text-pink-500 transition">
-            Tarifs
-          </Link>
+    <footer className="bg-gray-900 text-gray-400 py-8 mt-20">
+      <div className="container mx-auto px-6 flex flex-col md:flex-row justify-between items-center">
+        <div className="mb-6 md:mb-0">
+          <h3 className="text-xl font-bold text-primary mb-2">BeatsMarket</h3>
+          <p className="text-sm">© 2025 BeatsMarket. Tous droits réservés.</p>
+        </div>
+
+        <nav className="space-x-6 text-sm">
+          <a href="/about" className="hover:text-primary transition-colors">À propos</a>
+          <a href="/pricing" className="hover:text-primary transition-colors">Tarifs</a>
+          <a href="/terms" className="hover:text-primary transition-colors">CGV & CGU</a>
+          <a href="/help" className="hover:text-primary transition-colors">Aide</a>
         </nav>
-        <div className="text-sm">&copy; 2025 BeatsMarket. Tous droits réservés.</div>
+
+        <div className="mt-4 md:mt-0">
+          <select
+            aria-label="Sélecteur de langue"
+            className="bg-gray-800 text-white rounded px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary"
+            defaultValue="fr"
+          >
+            <option value="fr">Français</option>
+            <option value="en">English</option>
+          </select>
+        </div>
       </div>
     </footer>
-  )
+  );
 }

commit d62e76f0e8c00b2fce5f0534b1b2e4e99dc74c03
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:58:16 2025 +0200

    Create header.tsx

diff --git a/src/components/ui/header.tsx b/src/components/ui/header.tsx
new file mode 100644
index 0000000..3fe3910
--- /dev/null
+++ b/src/components/ui/header.tsx
@@ -0,0 +1,19 @@
+import React from "react";
+
+export default function Header() {
+  return (
+    <header className="bg-[#0e0b16] py-4">
+      <div className="container mx-auto flex items-center justify-between px-4">
+        <div className="text-xl font-bold text-white">BeatsMarket</div>
+        <nav>
+          <ul className="flex space-x-6 text-white">
+            <li><a href="/" className="hover:text-pink-600">Accueil</a></li>
+            <li><a href="/about" className="hover:text-pink-600">À propos</a></li>
+            <li><a href="/pricing" className="hover:text-pink-600">Tarifs</a></li>
+            <li><a href="/contact" className="hover:text-pink-600">Contact</a></li>
+          </ul>
+        </nav>
+      </div>
+    </header>
+  );
+}

commit 6b44e379cdd197b7d1d6b42fc4b4d87fa022af3c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Mon Jul 21 23:59:59 2025 +0200

    Update page.tsx

diff --git a/src/app/page.tsx b/src/app/page.tsx
index ac976d0..e9ab946 100644
--- a/src/app/page.tsx
+++ b/src/app/page.tsx
@@ -1,8 +1,14 @@
-export default function Home() {
+import Header from '@/components/ui/header'
+import Footer from '@/components/ui/footer'
+
+export default function HomePage() {
   return (
-    <main className="p-8 text-white bg-black min-h-screen">
-      <h1 className="text-4xl font-bold mb-4">Bienvenue sur BeatsMarket 🎧</h1>
-      <p className="text-lg">Ceci est la page d’accueil. Tout fonctionne bien 🎉</p>
-    </main>
+    <>
+      <Header />
+      <main className="p-4">
+        <h1 className="text-4xl font-bold text-pink-600">Bienvenue sur BeatsMarket</h1>
+      </main>
+      <Footer />
+    </>
   )
 }

commit dc6116fd4099bee819dc57a7d0aa42206a879d12
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:01:21 2025 +0200

    Update header.tsx

diff --git a/src/components/ui/header.tsx b/src/components/ui/header.tsx
index 3fe3910..c99ec0b 100644
--- a/src/components/ui/header.tsx
+++ b/src/components/ui/header.tsx
@@ -1,19 +1,19 @@
-import React from "react";
+import React from 'react'
 
 export default function Header() {
   return (
-    <header className="bg-[#0e0b16] py-4">
-      <div className="container mx-auto flex items-center justify-between px-4">
-        <div className="text-xl font-bold text-white">BeatsMarket</div>
-        <nav>
-          <ul className="flex space-x-6 text-white">
-            <li><a href="/" className="hover:text-pink-600">Accueil</a></li>
-            <li><a href="/about" className="hover:text-pink-600">À propos</a></li>
-            <li><a href="/pricing" className="hover:text-pink-600">Tarifs</a></li>
-            <li><a href="/contact" className="hover:text-pink-600">Contact</a></li>
-          </ul>
-        </nav>
+    <header className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6 flex justify-between items-center">
+      <div className="text-2xl font-extrabold tracking-tight">
+        BeatsMarket
       </div>
+      <nav>
+        <ul className="flex gap-6">
+          <li><a href="/" className="hover:underline">Accueil</a></li>
+          <li><a href="/about" className="hover:underline">À Propos</a></li>
+          <li><a href="/pricing" className="hover:underline">Tarifs</a></li>
+          <li><a href="/admin" className="hover:underline">Admin</a></li>
+        </ul>
+      </nav>
     </header>
-  );
+  )
 }

commit 0ed6c577dc863a76d8326305995d9e347ef60892
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:02:10 2025 +0200

    Update footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
index 28eb7b9..b75bf55 100644
--- a/src/components/ui/footer.tsx
+++ b/src/components/ui/footer.tsx
@@ -1,32 +1,16 @@
-import React from "react";
+import React from 'react'
 
-export function Footer() {
+export default function Footer() {
   return (
-    <footer className="bg-gray-900 text-gray-400 py-8 mt-20">
-      <div className="container mx-auto px-6 flex flex-col md:flex-row justify-between items-center">
-        <div className="mb-6 md:mb-0">
-          <h3 className="text-xl font-bold text-primary mb-2">BeatsMarket</h3>
-          <p className="text-sm">© 2025 BeatsMarket. Tous droits réservés.</p>
-        </div>
-
-        <nav className="space-x-6 text-sm">
-          <a href="/about" className="hover:text-primary transition-colors">À propos</a>
-          <a href="/pricing" className="hover:text-primary transition-colors">Tarifs</a>
-          <a href="/terms" className="hover:text-primary transition-colors">CGV & CGU</a>
-          <a href="/help" className="hover:text-primary transition-colors">Aide</a>
+    <footer className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6 mt-12 text-center">
+      <div className="max-w-7xl mx-auto">
+        <p className="mb-4">&copy; {new Date().getFullYear()} BeatsMarket. Tous droits réservés.</p>
+        <nav className="flex justify-center gap-6">
+          <a href="/terms" className="hover:underline">Conditions générales</a>
+          <a href="/privacy" className="hover:underline">Politique de confidentialité</a>
+          <a href="/contact" className="hover:underline">Contact</a>
         </nav>
-
-        <div className="mt-4 md:mt-0">
-          <select
-            aria-label="Sélecteur de langue"
-            className="bg-gray-800 text-white rounded px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary"
-            defaultValue="fr"
-          >
-            <option value="fr">Français</option>
-            <option value="en">English</option>
-          </select>
-        </div>
       </div>
     </footer>
-  );
+  )
 }

commit 663790ac94fcf473761ca25fc69d5a799cd396cd
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:03:13 2025 +0200

    Update header.tsx

diff --git a/src/components/ui/header.tsx b/src/components/ui/header.tsx
index c99ec0b..c89eb83 100644
--- a/src/components/ui/header.tsx
+++ b/src/components/ui/header.tsx
@@ -1,19 +1,22 @@
 import React from 'react'
+import Link from 'next/link'
 
 export default function Header() {
   return (
-    <header className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6 flex justify-between items-center">
-      <div className="text-2xl font-extrabold tracking-tight">
-        BeatsMarket
+    <header className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6">
+      <div className="max-w-7xl mx-auto flex justify-between items-center">
+        <Link href="/">
+          <a className="text-2xl font-bold tracking-tight hover:opacity-90">
+            BeatsMarket
+          </a>
+        </Link>
+        <nav className="space-x-6">
+          <Link href="/about"><a className="hover:underline">À propos</a></Link>
+          <Link href="/pricing"><a className="hover:underline">Tarifs</a></Link>
+          <Link href="/help"><a className="hover:underline">Aide</a></Link>
+          <Link href="/admin"><a className="hover:underline">Admin</a></Link>
+        </nav>
       </div>
-      <nav>
-        <ul className="flex gap-6">
-          <li><a href="/" className="hover:underline">Accueil</a></li>
-          <li><a href="/about" className="hover:underline">À Propos</a></li>
-          <li><a href="/pricing" className="hover:underline">Tarifs</a></li>
-          <li><a href="/admin" className="hover:underline">Admin</a></li>
-        </ul>
-      </nav>
     </header>
   )
 }

commit 3a7c58c63cf9705ff10a508c22f47f8c84ceec2b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:21:13 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 12a703d..668a5b9 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    tailwindcss: {},
+    '@tailwindcss/postcss': {},
     autoprefixer: {},
   },
-};
+}

commit c7a0ac7544a9e3b78b00ff0a88bbcf536e83dff5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:25:37 2025 +0200

    Update layout.tsx

diff --git a/src/app/layout.tsx b/src/app/layout.tsx
index b99887e..13204fc 100644
--- a/src/app/layout.tsx
+++ b/src/app/layout.tsx
@@ -1,12 +1,17 @@
-import './globals.css';
-import { poppins, ptSans } from '../fonts';
+import './globals.css'
+import { Inter } from 'next/font/google'
+
+const inter = Inter({ subsets: ['latin'], variable: '--font-inter' })
+
+export const metadata = {
+  title: 'BeatsMarket',
+  description: 'Plateforme de beats moderne',
+}
 
 export default function RootLayout({ children }: { children: React.ReactNode }) {
   return (
-    <html lang="fr" className={`${poppins.variable} ${ptSans.variable}`}>
-      <body className="bg-gray-900 text-white">
-        {children}
-      </body>
+    <html lang="fr" className={inter.variable}>
+      <body>{children}</body>
     </html>
-  );
+  )
 }

commit 3e2f1fcc9ab78545c6dacaed0958e70bb6f4ff10
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:26:51 2025 +0200

    Update globals.css

diff --git a/styles/globals.css b/styles/globals.css
index 35e502a..9c252a4 100644
--- a/styles/globals.css
+++ b/styles/globals.css
@@ -1,15 +1,11 @@
-@tailwind base;
-@tailwind components;
-@tailwind utilities;
-
-/* Styles globaux personnalisés */
-
-body {
-  @apply bg-gray-900 text-white font-sans;
+:root {
+  --font-inter: 'Inter', sans-serif;
 }
 
-a {
-  @apply text-pink-500 hover:text-pink-400;
+body {
+  font-family: var(--font-inter);
+  margin: 0;
+  padding: 0;
+  background-color: #0f0f0f; /* exemple fond sombre */
+  color: #eee; /* texte clair */
 }
-
-/* Ajoute ici tes styles personnalisés */

commit a5b2b59073e77d233f3868baa0b41d1861062b49
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:27:31 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 8546d77..2ef4be7 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,22 +1,22 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
   content: [
-    './app/**/*.{js,ts,jsx,tsx}',
-    './src/components/**/*.{js,ts,jsx,tsx}',
+    "./app/**/*.{js,ts,jsx,tsx}", 
+    "./pages/**/*.{js,ts,jsx,tsx}",
+    "./components/**/*.{js,ts,jsx,tsx}"
   ],
   theme: {
     extend: {
       colors: {
-        primary: '#E75480',  // Rose vif BeatsMarket
-        secondary: '#5C2A82', // Violet BeatsMarket
-        background: '#121212', // Fond sombre
-        text: '#FFFFFF', // Texte clair
+        primary: '#ff007f', // rose vif BeatsMarket
+        secondary: '#7c3aed', // violet
+        background: '#0f0f0f', // fond sombre
+        text: '#eee'
       },
       fontFamily: {
-        poppins: ['var(--font-poppins)', 'sans-serif'],
-        ptsans: ['var(--font-pt-sans)', 'sans-serif'],
-      },
+        inter: ['var(--font-inter)', 'sans-serif']
+      }
     },
   },
   plugins: [],
-};
+}

commit a2e6b367c74d4a389627e80980625a4fb1ffdf26
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:28:46 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 668a5b9..33ad091 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    '@tailwindcss/postcss': {},
+    tailwindcss: {},
     autoprefixer: {},
   },
 }

commit 07f3c8efe7356b5a988f6bf94cc151079835a5d8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:29:32 2025 +0200

    Update globals.css

diff --git a/styles/globals.css b/styles/globals.css
index 9c252a4..8d13ddb 100644
--- a/styles/globals.css
+++ b/styles/globals.css
@@ -1,11 +1,13 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
 :root {
   --font-inter: 'Inter', sans-serif;
 }
 
 body {
-  font-family: var(--font-inter);
+  @apply bg-background text-text font-inter;
   margin: 0;
   padding: 0;
-  background-color: #0f0f0f; /* exemple fond sombre */
-  color: #eee; /* texte clair */
 }

commit 27aa1df7fc8e6cb1cba33fe228052378594dabaf
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:44:38 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 1f322c9..e5957bb 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,14 +1,9 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
-  webpackDevMiddleware: config => {
-    config.watchOptions = {
-      poll: 1000,
-      aggregateTimeout: 300,
-      ignored: ['**/node_modules/**', '**/.next/**'],
-    }
-    return config
+  reactStrictMode: true,
+  experimental: {
+    appDir: true,
   },
-  watch: true,
-}
+};
 
-module.exports = nextConfig
+module.exports = nextConfig;

commit 28af7100756fd7793bc377e1da1c6b6f24d262a9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:48:21 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 33ad091..668a5b9 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    tailwindcss: {},
+    '@tailwindcss/postcss': {},
     autoprefixer: {},
   },
 }

commit 3cab168e5f726462bd4bbd7ef32dea1826717d73
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:49:38 2025 +0200

    Update postcss.config.js

commit 8a9b17077354095f90446088f0dce3263916d991
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:52:56 2025 +0200

    Update postcss.config.js

commit a2f51bb4d48732210c18df977567b880042a790a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:54:20 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 2ef4be7..fcc639f 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,22 +1,11 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
   content: [
-    "./app/**/*.{js,ts,jsx,tsx}", 
-    "./pages/**/*.{js,ts,jsx,tsx}",
-    "./components/**/*.{js,ts,jsx,tsx}"
+    './app/**/*.{js,ts,jsx,tsx}',
+    './src/**/*.{js,ts,jsx,tsx}',
   ],
   theme: {
-    extend: {
-      colors: {
-        primary: '#ff007f', // rose vif BeatsMarket
-        secondary: '#7c3aed', // violet
-        background: '#0f0f0f', // fond sombre
-        text: '#eee'
-      },
-      fontFamily: {
-        inter: ['var(--font-inter)', 'sans-serif']
-      }
-    },
+    extend: {},
   },
   plugins: [],
 }

commit 94af1cf24e287ddd106117c44c8fb64a7d277f1a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 00:58:15 2025 +0200

    Update tailwind.config.ts

diff --git a/tailwind.config.ts b/tailwind.config.ts
index 88997e9..82a2b34 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -1,25 +1,16 @@
-import type { Config } from "tailwindcss"
+import type { Config } from 'tailwindcss'
 
 const config: Config = {
   content: [
-    "./app/**/*.{ts,tsx}",
-    "./components/**/*.{ts,tsx}"
+    './app/**/*.{js,ts,jsx,tsx}',
+    './src/**/*.{js,ts,jsx,tsx}',
+    './pages/**/*.{js,ts,jsx,tsx}',
+    './components/**/*.{js,ts,jsx,tsx}',
   ],
   theme: {
-    extend: {
-      colors: {
-        primary: "#D33F8D",  // rose vif BeatsMarket
-        secondary: "#6F42C1", // violet BeatsMarket
-        darkbg: "#121212",
-        darkbg2: "#181818"
-      },
-      fontFamily: {
-        poppins: ["Poppins", "sans-serif"],
-        ptsans: ["PT Sans", "sans-serif"]
-      }
-    }
+    extend: {},
   },
-  plugins: []
+  plugins: [],
 }
 
 export default config

commit c4bc3315e76b0192689435268d307ddfe43cd3c7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:09:48 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 55df190..03c8acf 100644
--- a/.env.local
+++ b/.env.local
@@ -1,3 +1,9 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
-WATCHPACK_POLLING=true
+/** @type {import('next').NextConfig} */
+const nextConfig = {
+  // swcMinify: true,  <-- supprimé car obsolète
+  reactStrictMode: true,
+}
+
+module.exports = nextConfig

commit 6eee14f78d73d2bf4c909616816c5b929db96219
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:23:08 2025 +0200

    Create LocalFontExample.tsx

diff --git a/src/components/LocalFontExample.tsx b/src/components/LocalFontExample.tsx
new file mode 100644
index 0000000..14d5f32
--- /dev/null
+++ b/src/components/LocalFontExample.tsx
@@ -0,0 +1,28 @@
+import localFont from 'next/font/local'
+
+const myFont = localFont({
+  src: [
+    {
+      path: '../fonts/MyFont-Regular.woff2',
+      weight: '400',
+      style: 'normal',
+    },
+    {
+      path: '../fonts/MyFont-Bold.woff2',
+      weight: '700',
+      style: 'normal',
+    },
+  ],
+  variable: '--my-font',
+  display: 'swap',
+})
+
+export default function LocalFontExample() {
+  return (
+    <div className={myFont.variable}>
+      <p style={{ fontFamily: 'var(--my-font)' }}>
+        Ceci est un texte utilisant une font locale avec next/font/local.
+      </p>
+    </div>
+  )
+}

commit bdc448ef5d67bd0fda1ab7499b44a8f2b747b27c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:25:19 2025 +0200

    Update LocalFontExample.tsx

diff --git a/src/components/LocalFontExample.tsx b/src/components/LocalFontExample.tsx
index 14d5f32..4481519 100644
--- a/src/components/LocalFontExample.tsx
+++ b/src/components/LocalFontExample.tsx
@@ -1,28 +1,23 @@
 import localFont from 'next/font/local'
 
 const myFont = localFont({
-  src: [
-    {
-      path: '../fonts/MyFont-Regular.woff2',
-      weight: '400',
-      style: 'normal',
-    },
-    {
-      path: '../fonts/MyFont-Bold.woff2',
-      weight: '700',
-      style: 'normal',
-    },
-  ],
+  src: '../fonts/MyFont-Regular.woff2',
   variable: '--my-font',
   display: 'swap',
 })
 
 export default function LocalFontExample() {
   return (
-    <div className={myFont.variable}>
-      <p style={{ fontFamily: 'var(--my-font)' }}>
-        Ceci est un texte utilisant une font locale avec next/font/local.
-      </p>
-    </div>
+    <>
+      <style jsx global>{`
+        :root {
+          --my-font: ${myFont.style.fontFamily};
+        }
+      `}</style>
+      <main className={myFont.className}>
+        <h1>Exemple de police locale avec Next.js</h1>
+        <p>Cette page utilise une police locale avec la variable CSS {`--my-font`}.</p>
+      </main>
+    </>
   )
 }

commit 2a1753b00c03ea65eafa26043950aa69a09a3e11
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:26:44 2025 +0200

    Create index.tsx

diff --git a/src/pages/index.tsx b/src/pages/index.tsx
new file mode 100644
index 0000000..6437f5d
--- /dev/null
+++ b/src/pages/index.tsx
@@ -0,0 +1,10 @@
+import LocalFontExample from '@/components/LocalFontExample'
+
+export default function Home() {
+  return (
+    <div>
+      <h1>Bienvenue sur BeatsMarket</h1>
+      <LocalFontExample />
+    </div>
+  )
+}

commit 879699508a36c8a8d0c5556ed798861c165b6ee7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:29:20 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index e5957bb..983876f 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,8 +2,9 @@
 const nextConfig = {
   reactStrictMode: true,
   experimental: {
-    appDir: true,
+    // tu peux activer ici des options expérimentales si besoin
   },
-};
+  // autres options possibles...
+}
 
-module.exports = nextConfig;
+module.exports = nextConfig

commit e63469b91f9d34c0122d5fa422df33e512cb1cea
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:31:17 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index fcc639f..75167b6 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,8 +1,9 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
   content: [
-    './app/**/*.{js,ts,jsx,tsx}',
-    './src/**/*.{js,ts,jsx,tsx}',
+    "./app/**/*.{js,ts,jsx,tsx}",
+    "./pages/**/*.{js,ts,jsx,tsx}",
+    "./components/**/*.{js,ts,jsx,tsx}",
   ],
   theme: {
     extend: {},

commit c5d72f65943886e43522dff9ca45f24ff846e04a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:32:54 2025 +0200

    Update globals.css

diff --git a/styles/globals.css b/styles/globals.css
index 8d13ddb..b5c61c9 100644
--- a/styles/globals.css
+++ b/styles/globals.css
@@ -1,13 +1,3 @@
 @tailwind base;
 @tailwind components;
 @tailwind utilities;
-
-:root {
-  --font-inter: 'Inter', sans-serif;
-}
-
-body {
-  @apply bg-background text-text font-inter;
-  margin: 0;
-  padding: 0;
-}

commit 1ec8f2ba1daca3c6e1a8509b8ae6031cf63c5c03
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:33:40 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 668a5b9..12a703d 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    '@tailwindcss/postcss': {},
+    tailwindcss: {},
     autoprefixer: {},
   },
-}
+};

commit 2ffbe47523bd4b78da87c187b785b4132e4a7f2e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:34:52 2025 +0200

    Update postcss.config.js

commit 94d5c5a62242c376ff4d87102a74881ec41fdd31
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:37:36 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 983876f..a843cbe 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,10 +1,6 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  experimental: {
-    // tu peux activer ici des options expérimentales si besoin
-  },
-  // autres options possibles...
 }
 
 module.exports = nextConfig

commit d38d96a275825a169102f55fb65c028a6ba28be7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:44:21 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 03c8acf..6a26b8a 100644
--- a/.env.local
+++ b/.env.local
@@ -1,9 +1,3 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
-/** @type {import('next').NextConfig} */
-const nextConfig = {
-  // swcMinify: true,  <-- supprimé car obsolète
-  reactStrictMode: true,
-}
 
-module.exports = nextConfig

commit 3176f8c4139aa01a90fa7b13d42c47b54c544a45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:48:30 2025 +0200

    Update tailwind.config.ts

diff --git a/tailwind.config.ts b/tailwind.config.ts
index 82a2b34..75167b6 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -1,16 +1,12 @@
-import type { Config } from 'tailwindcss'
-
-const config: Config = {
+/** @type {import('tailwindcss').Config} */
+module.exports = {
   content: [
-    './app/**/*.{js,ts,jsx,tsx}',
-    './src/**/*.{js,ts,jsx,tsx}',
-    './pages/**/*.{js,ts,jsx,tsx}',
-    './components/**/*.{js,ts,jsx,tsx}',
+    "./app/**/*.{js,ts,jsx,tsx}",
+    "./pages/**/*.{js,ts,jsx,tsx}",
+    "./components/**/*.{js,ts,jsx,tsx}",
   ],
   theme: {
     extend: {},
   },
   plugins: [],
 }
-
-export default config

commit c12c88ab08b2ba264d726a231f226626650aab34
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:49:57 2025 +0200

    Update tailwind.config.js

commit 2b21e2012f1130ef9b14cb6646e3192a10162804
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:51:02 2025 +0200

    Delete tailwind.config.ts

diff --git a/tailwind.config.ts b/tailwind.config.ts
deleted file mode 100644
index 75167b6..0000000
--- a/tailwind.config.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-/** @type {import('tailwindcss').Config} */
-module.exports = {
-  content: [
-    "./app/**/*.{js,ts,jsx,tsx}",
-    "./pages/**/*.{js,ts,jsx,tsx}",
-    "./components/**/*.{js,ts,jsx,tsx}",
-  ],
-  theme: {
-    extend: {},
-  },
-  plugins: [],
-}

commit 63f98693a542ab155faae097481d1bb79e0e3a0c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:51:44 2025 +0200

    Update globals.css

commit 0018acd8fc2f34bec5f898a8e6400c47a55e21ca
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:52:36 2025 +0200

    Update next.config.js

commit 299ebaadb8fbce8396226aa5fae7a824dce32a45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 01:59:33 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index a843cbe..adcd367 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,6 +1,8 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
+  // La minification avec SWC est activée par défaut dans Next.js 15 et plus
+  // swcMinify: true, // <-- supprimée car plus reconnue
 }
 
 module.exports = nextConfig

commit 76417dcea5adda9a547fa2e2a3b07a99518e8116
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 02:05:37 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index adcd367..d6fbe41 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,8 +1,9 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  // La minification avec SWC est activée par défaut dans Next.js 15 et plus
-  // swcMinify: true, // <-- supprimée car plus reconnue
+  images: {
+    domains: ['yourdomain.com'], // adapte selon tes besoins
+  },
 }
 
 module.exports = nextConfig

commit 9453ce0f4e6e3755610f0374fdb8512f51666b0f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 09:12:05 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 12a703d..7489255 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,7 @@
 module.exports = {
   plugins: {
+    'tailwindcss/nesting': {},
     tailwindcss: {},
     autoprefixer: {},
   },
-};
+}

commit 634ba3b66d370509f22f8a1f427f95bd0d103313
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 09:14:37 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 7489255..4b5920a 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,7 +1,7 @@
 module.exports = {
   plugins: {
     'tailwindcss/nesting': {},
-    tailwindcss: {},
+    '@tailwindcss/postcss': {},
     autoprefixer: {},
   },
 }

commit 809c4921ed9d793ecc8c04280a3ecf2175bcf45c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 09:32:22 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index d6fbe41..210c266 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,8 +1,11 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
+  experimental: {
+    disableCssModulesLightningCss: true
+  },
   images: {
-    domains: ['yourdomain.com'], // adapte selon tes besoins
+    domains: ['yourdomain.com'],
   },
 }
 

commit 3309affa08c9300cfcacc3b7b0bd5bb5d6577f10
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 15:33:05 2025 +0200

    Update layout.tsx

diff --git a/src/app/layout.tsx b/src/app/layout.tsx
index 13204fc..d0c18d0 100644
--- a/src/app/layout.tsx
+++ b/src/app/layout.tsx
@@ -1,17 +1,22 @@
+// src/app/layout.tsx
 import './globals.css'
-import { Inter } from 'next/font/google'
-
-const inter = Inter({ subsets: ['latin'], variable: '--font-inter' })
+import { ReactNode } from 'react'
+import Header from '@/components/ui/Header'
+import Footer from '@/components/ui/Footer'
 
 export const metadata = {
-  title: 'BeatsMarket',
-  description: 'Plateforme de beats moderne',
+  title: 'BeatsMarket - Le marché des beats pro',
+  description: 'Achetez et vendez des beats de qualité professionnelle',
 }
 
-export default function RootLayout({ children }: { children: React.ReactNode }) {
+export default function RootLayout({ children }: { children: ReactNode }) {
   return (
-    <html lang="fr" className={inter.variable}>
-      <body>{children}</body>
+    <html lang="fr">
+      <body>
+        <Header />
+        <main className="min-h-[80vh]">{children}</main>
+        <Footer />
+      </body>
     </html>
   )
 }

commit 2a61fd077f3a9253b1d734ee55a16b5de5cb85f8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 15:35:22 2025 +0200

    Update header.tsx

diff --git a/src/components/ui/header.tsx b/src/components/ui/header.tsx
index c89eb83..0e3486b 100644
--- a/src/components/ui/header.tsx
+++ b/src/components/ui/header.tsx
@@ -1,22 +1,18 @@
-import React from 'react'
 import Link from 'next/link'
 
 export default function Header() {
   return (
-    <header className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6">
-      <div className="max-w-7xl mx-auto flex justify-between items-center">
-        <Link href="/">
-          <a className="text-2xl font-bold tracking-tight hover:opacity-90">
-            BeatsMarket
-          </a>
-        </Link>
-        <nav className="space-x-6">
-          <Link href="/about"><a className="hover:underline">À propos</a></Link>
-          <Link href="/pricing"><a className="hover:underline">Tarifs</a></Link>
-          <Link href="/help"><a className="hover:underline">Aide</a></Link>
-          <Link href="/admin"><a className="hover:underline">Admin</a></Link>
-        </nav>
-      </div>
+    <header className="bg-[#1e1e2f] text-white p-4 flex justify-between items-center">
+      <Link href="/" className="text-2xl font-bold text-pink-500">
+        BeatsMarket
+      </Link>
+      <nav className="space-x-6">
+        <Link href="/" className="hover:text-pink-400">Accueil</Link>
+        <Link href="/about" className="hover:text-pink-400">À Propos</Link>
+        <Link href="/pricing" className="hover:text-pink-400">Tarifs</Link>
+        <Link href="/terms" className="hover:text-pink-400">CGV</Link>
+        <Link href="/help" className="hover:text-pink-400">Aide</Link>
+      </nav>
     </header>
   )
 }

commit 183d16b968497770a483d3d1d4427bdf6a380e8b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 15:36:21 2025 +0200

    Update footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
index b75bf55..596ead7 100644
--- a/src/components/ui/footer.tsx
+++ b/src/components/ui/footer.tsx
@@ -1,16 +1,14 @@
-import React from 'react'
+import Link from 'next/link'
 
 export default function Footer() {
   return (
-    <footer className="bg-gradient-to-r from-purple-700 via-pink-600 to-pink-500 text-white p-6 mt-12 text-center">
-      <div className="max-w-7xl mx-auto">
-        <p className="mb-4">&copy; {new Date().getFullYear()} BeatsMarket. Tous droits réservés.</p>
-        <nav className="flex justify-center gap-6">
-          <a href="/terms" className="hover:underline">Conditions générales</a>
-          <a href="/privacy" className="hover:underline">Politique de confidentialité</a>
-          <a href="/contact" className="hover:underline">Contact</a>
-        </nav>
-      </div>
+    <footer className="bg-[#121212] text-gray-400 p-6 mt-12 text-center text-sm">
+      <p>© 2025 BeatsMarket. Tous droits réservés.</p>
+      <nav className="mt-2 space-x-4">
+        <Link href="/terms" className="hover:text-pink-400">Conditions Générales</Link>
+        <Link href="/privacy" className="hover:text-pink-400">Politique de confidentialité</Link>
+        <Link href="/contact" className="hover:text-pink-400">Contact</Link>
+      </nav>
     </footer>
   )
 }

commit 7a011d98bedd992bb7790e15eab0dfaaa737df2e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 15:39:16 2025 +0200

    Update page.tsx

diff --git a/src/app/page.tsx b/src/app/page.tsx
index e9ab946..7570540 100644
--- a/src/app/page.tsx
+++ b/src/app/page.tsx
@@ -1,14 +1,8 @@
-import Header from '@/components/ui/header'
-import Footer from '@/components/ui/footer'
-
-export default function HomePage() {
+export default function Home() {
   return (
-    <>
-      <Header />
-      <main className="p-4">
-        <h1 className="text-4xl font-bold text-pink-600">Bienvenue sur BeatsMarket</h1>
-      </main>
-      <Footer />
-    </>
+    <section className="p-8 text-white">
+      <h1 className="text-4xl font-bold mb-4">Bienvenue sur BeatsMarket</h1>
+      <p>Le marché des beats professionnels.</p>
+    </section>
   )
 }

commit 4103c591b16dbc9322e8f8e35883b04d7722a9c7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Tue Jul 22 15:41:11 2025 +0200

    Update page.tsx

diff --git a/src/app/about/page.tsx b/src/app/about/page.tsx
index 6ec6e55..dec87fe 100644
--- a/src/app/about/page.tsx
+++ b/src/app/about/page.tsx
@@ -1,31 +1,8 @@
-import Image from "next/image"
-import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
-
-export default function AboutPage() {
+export default function About() {
   return (
-    <main className="max-w-7xl mx-auto p-6 text-gray-300 bg-gray-900 min-h-screen">
-      <h1 className="text-4xl font-bold mb-8 text-center text-pink-500">À propos de BeatsMarket</h1>
-      <Card>
-        <CardHeader>
-          <CardTitle>Notre mission</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <p>
-            BeatsMarket est la plateforme numéro 1 dédiée aux beatmakers et artistes du monde entier. 
-            Notre mission est de fournir un espace sécurisé, moderne et innovant pour la vente et l'achat de beats de qualité.
-          </p>
-        </CardContent>
-      </Card>
-
-      <section className="mt-10 grid grid-cols-1 md:grid-cols-3 gap-8">
-        <Card>
-          <CardHeader>
-            <CardTitle>Nos outils</CardTitle>
-          </CardHeader>
-          <CardContent>
-            <ul className="list-disc list-inside">
-              <li>Boutique Pro pour vendre vos beats</li>
-              <li>Mastering audio par IA intégré</li>
-              <li>Création automatique de pochettes</li>
-              <li>Distribution digitale simplifiée</li>
-              <li>Support client dédié
+    <section className="p-8 text-white">
+      <h1 className="text-3xl font-bold mb-4">À propos de BeatsMarket</h1>
+      <p>Notre mission est d'offrir une plateforme pour les beatmakers et artistes.</p>
+    </section>
+  )
+}

commit 9e0848326950dde88f500a6d2b068b6af75a4466
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:37:03 2025 +0200

    Create Header.tsx

diff --git a/components/ui/Header.tsx b/components/ui/Header.tsx
new file mode 100644
index 0000000..284b921
--- /dev/null
+++ b/components/ui/Header.tsx
@@ -0,0 +1,89 @@
+"use client";
+
+import Link from "next/link";
+import { useState } from "react";
+import { Menu, X } from "lucide-react";
+
+export default function Header() {
+  const [menuOpen, setMenuOpen] = useState(false);
+
+  return (
+    <header className="fixed top-0 left-0 right-0 z-50 bg-[#121212] border-b border-gray-800 shadow-md">
+      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-16">
+        {/* Logo */}
+        <Link href="/" className="text-2xl font-extrabold text-pink-500 hover:text-pink-400">
+          BeatsMarket
+        </Link>
+
+        {/* Desktop nav */}
+        <nav className="hidden md:flex space-x-8 font-medium text-white">
+          <Link href="/" className="hover:text-pink-400 transition">
+            Accueil
+          </Link>
+          <Link href="/about" className="hover:text-pink-400 transition">
+            À Propos
+          </Link>
+          <Link href="/pricing" className="hover:text-pink-400 transition">
+            Tarifs
+          </Link>
+          <Link href="/help" className="hover:text-pink-400 transition">
+            Aide
+          </Link>
+          <Link href="/admin" className="hover:text-pink-400 transition">
+            Admin
+          </Link>
+        </nav>
+
+        {/* Mobile menu button */}
+        <button
+          aria-label="Toggle menu"
+          onClick={() => setMenuOpen(!menuOpen)}
+          className="md:hidden text-pink-500 hover:text-pink-400 focus:outline-none"
+        >
+          {menuOpen ? <X size={24} /> : <Menu size={24} />}
+        </button>
+      </div>
+
+      {/* Mobile menu */}
+      {menuOpen && (
+        <nav className="md:hidden bg-[#121212] border-t border-gray-800 px-4 py-4 space-y-3 font-medium text-white">
+          <Link
+            href="/"
+            className="block hover:text-pink-400 transition"
+            onClick={() => setMenuOpen(false)}
+          >
+            Accueil
+          </Link>
+          <Link
+            href="/about"
+            className="block hover:text-pink-400 transition"
+            onClick={() => setMenuOpen(false)}
+          >
+            À Propos
+          </Link>
+          <Link
+            href="/pricing"
+            className="block hover:text-pink-400 transition"
+            onClick={() => setMenuOpen(false)}
+          >
+            Tarifs
+          </Link>
+          <Link
+            href="/help"
+            className="block hover:text-pink-400 transition"
+            onClick={() => setMenuOpen(false)}
+          >
+            Aide
+          </Link>
+          <Link
+            href="/admin"
+            className="block hover:text-pink-400 transition"
+            onClick={() => setMenuOpen(false)}
+          >
+            Admin
+          </Link>
+        </nav>
+      )}
+    </header>
+  );
+}

commit 7acdcc00ed57a41d12fbeefaefa2d3d85f7e78ed
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:38:07 2025 +0200

    Update page.tsx

diff --git a/app/page.tsx b/app/page.tsx
index c86302d..e4c3a9e 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,32 +1,86 @@
+import Image from "next/image";
+import Link from "next/link";
+
 export default function Home() {
   return (
-    <main className="container mx-auto p-6">
-      <h1 className="text-4xl font-bold text-primary mb-8">Bienvenue sur BeatsMarket</h1>
-      <section className="mb-12">
-        <h2 className="text-2xl font-semibold mb-4">Beatmaker du mois</h2>
-        {/* Exemple de carte ou slider pour mettre en avant un beatmaker */}
-        <div className="bg-gray-800 rounded-lg p-6 shadow-md">
-          <p className="text-lg">Découvrez les meilleurs beats du mois sélectionnés pour vous.</p>
+    <main className="pt-20 bg-[#121212] min-h-screen text-white font-poppins">
+      {/* Beatmaker du mois */}
+      <section className="max-w-7xl mx-auto px-6 py-12">
+        <h2 className="text-4xl font-extrabold text-pink-500 mb-8">
+          Beatmaker du mois
+        </h2>
+        <div className="bg-gray-900 rounded-lg p-8 flex flex-col md:flex-row items-center md:items-start gap-6">
+          <Image
+            src="/images/beatmaker-du-mois.jpg"
+            alt="Beatmaker du mois"
+            width={300}
+            height={300}
+            className="rounded-lg object-cover"
+            priority
+          />
+          <div>
+            <h3 className="text-2xl font-bold mb-2">DJ Awesome</h3>
+            <p className="mb-4 text-gray-300">
+              Découvrez les beats les plus chauds de DJ Awesome ce mois-ci,
+              exclusifs et prêts à booster vos projets musicaux.
+            </p>
+            <Link
+              href="/beatmakers/dj-awesome"
+              className="inline-block bg-pink-500 hover:bg-pink-400 text-white px-5 py-2 rounded-md font-semibold transition"
+            >
+              Voir son profil
+            </Link>
+          </div>
         </div>
       </section>
 
-      <section className="mb-12">
-        <h2 className="text-2xl font-semibold mb-4">Recherche IA</h2>
-        {/* Formulaire ou composant de recherche IA */}
-        <input
-          type="text"
-          placeholder="Recherche de beats par IA..."
-          className="w-full p-3 rounded-md bg-gray-900 border border-gray-700 placeholder-gray-500 text-white focus:outline-none focus:ring-2 focus:ring-primary"
-        />
+      {/* Recherche IA */}
+      <section className="max-w-7xl mx-auto px-6 py-12 bg-gray-900 rounded-lg mb-12">
+        <h2 className="text-4xl font-extrabold text-pink-500 mb-8 text-center">
+          Recherche IA
+        </h2>
+        <form className="max-w-xl mx-auto flex gap-3">
+          <input
+            type="search"
+            placeholder="Cherchez votre beat idéal avec l'IA..."
+            className="flex-grow px-4 py-3 rounded-md bg-gray-800 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-pink-500"
+          />
+          <button
+            type="submit"
+            className="bg-pink-500 hover:bg-pink-400 px-6 py-3 rounded-md font-semibold transition"
+          >
+            Rechercher
+          </button>
+        </form>
       </section>
 
-      <section>
-        <h2 className="text-2xl font-semibold mb-4">Pourquoi nous ?</h2>
-        <ul className="list-disc list-inside space-y-2">
-          <li>Beats exclusifs et originaux</li>
-          <li>Tarifs transparents et flexibles</li>
-          <li>Support pro et services IA intégrés</li>
-        </ul>
+      {/* Pourquoi nous ? */}
+      <section className="max-w-7xl mx-auto px-6 py-12">
+        <h2 className="text-4xl font-extrabold text-pink-500 mb-8 text-center">
+          Pourquoi choisir BeatsMarket ?
+        </h2>
+        <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
+          <div className="bg-gray-900 rounded-lg p-6">
+            <h3 className="text-2xl font-semibold mb-2">Qualité Pro</h3>
+            <p className="text-gray-300">
+              Beats exclusifs, réalisés par des beatmakers passionnés et
+              professionnels.
+            </p>
+          </div>
+          <div className="bg-gray-900 rounded-lg p-6">
+            <h3 className="text-2xl font-semibold mb-2">Recherche IA</h3>
+            <p className="text-gray-300">
+              Trouvez le beat parfait grâce à notre technologie de recherche
+              assistée par intelligence artificielle.
+            </p>
+          </div>
+          <div className="bg-gray-900 rounded-lg p-6">
+            <h3 className="text-2xl font-semibold mb-2">Support & Sécurité</h3>
+            <p className="text-gray-300">
+              Une équipe disponible, un site sécurisé, et des paiements fiables.
+            </p>
+          </div>
+        </div>
       </section>
     </main>
   );

commit 3eb4cbe791104f84188d4b26e56e5fe93720423f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:38:56 2025 +0200

    Create Footer.tsx

diff --git a/components/ui/Footer.tsx b/components/ui/Footer.tsx
new file mode 100644
index 0000000..426ee69
--- /dev/null
+++ b/components/ui/Footer.tsx
@@ -0,0 +1,37 @@
+"use client";
+
+import Link from "next/link";
+
+export default function Footer() {
+  return (
+    <footer className="bg-[#121212] border-t border-gray-800 text-gray-400 py-8 mt-20">
+      <div className="max-w-7xl mx-auto px-6 flex flex-col md:flex-row justify-between items-center gap-6">
+        <div className="text-white font-extrabold text-xl">
+          BeatsMarket
+        </div>
+
+        <nav className="flex space-x-6 text-sm">
+          <Link href="/" className="hover:text-pink-500 transition">
+            Accueil
+          </Link>
+          <Link href="/about" className="hover:text-pink-500 transition">
+            À Propos
+          </Link>
+          <Link href="/pricing" className="hover:text-pink-500 transition">
+            Tarifs
+          </Link>
+          <Link href="/terms" className="hover:text-pink-500 transition">
+            CGV / CGU
+          </Link>
+          <Link href="/help" className="hover:text-pink-500 transition">
+            Aide
+          </Link>
+        </nav>
+
+        <div className="text-xs text-gray-500">
+          © 2025 BeatsMarket. Tous droits réservés.
+        </div>
+      </div>
+    </footer>
+  );
+}

commit ba6e4081d98d87481ffc916b43d0a223a8050879
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:40:00 2025 +0200

    Update page.tsx

diff --git a/app/about/page.tsx b/app/about/page.tsx
index 28ef44d..a745008 100644
--- a/app/about/page.tsx
+++ b/app/about/page.tsx
@@ -1,42 +1,74 @@
-import React from "react"
+import Image from "next/image";
 
-export default function AboutPage() {
+export default function About() {
   return (
-    <section className="min-h-screen bg-darkbg px-6 py-16 text-white font-poppins">
-      <div className="max-w-4xl mx-auto">
-        <h1 className="text-4xl font-bold text-primary mb-6">À propos de BeatsMarket</h1>
+    <main className="pt-20 bg-[#121212] min-h-screen text-white font-poppins px-6 max-w-7xl mx-auto">
+      <h1 className="text-5xl font-extrabold text-pink-500 mb-8 text-center">
+        À Propos de BeatsMarket
+      </h1>
 
-        <p className="text-gray-300 text-sm mb-8">
-          BeatsMarket est une plateforme révolutionnaire dédiée à la vente, la promotion et la distribution de beats. Elle offre un espace sécurisé, professionnel, et propulsé par l’IA pour les artistes et les beatmakers du monde entier.
+      <section className="mb-12 max-w-4xl mx-auto text-center text-gray-300 leading-relaxed">
+        <p className="mb-4">
+          BeatsMarket est la plateforme ultime dédiée aux beatmakers et artistes,
+          proposant un espace sécurisé, innovant et facile d’accès pour vendre et
+          acheter des beats exclusifs et non exclusifs.
         </p>
-
-        <h2 className="text-2xl font-semibold text-white mb-4">Notre mission</h2>
-        <p className="text-gray-400 text-sm mb-8">
-          Offrir à chaque créateur musical les outils, la visibilité et la liberté nécessaire pour monétiser ses créations de manière équitable, professionnelle et internationale.
+        <p className="mb-4">
+          Notre mission est de connecter les talents du monde entier en utilisant
+          les dernières technologies, y compris l’intelligence artificielle, pour
+          offrir la meilleure expérience utilisateur possible.
         </p>
-
-        <h2 className="text-2xl font-semibold text-white mb-4">Notre vision</h2>
-        <p className="text-gray-400 text-sm mb-8">
-          Un monde musical plus transparent, plus connecté, où chaque talent, où qu’il soit, a les moyens de réussir.
+        <p>
+          Que vous soyez un beatmaker cherchant à développer votre carrière ou un
+          artiste à la recherche du son parfait, BeatsMarket est votre allié de
+          confiance.
         </p>
+      </section>
 
-        <h2 className="text-2xl font-semibold text-white mb-4">Les outils disponibles</h2>
-        <div className="grid grid-cols-1 sm:grid-cols-2 gap-6 mt-4">
-          {[
-            ["Boutique Pro", "Vendez vos beats avec licences intelligentes."],
-            ["Mastering IA", "Obtenez un rendu professionnel en 2 clics."],
-            ["Générateur de covers", "Des visuels attrayants pour vos sorties."],
-            ["Distribution digitale", "Diffusez votre musique sur toutes les plateformes."],
-            ["Statistiques détaillées", "Suivez vos ventes, écoutes et revenus."],
-            ["Paiements rapides", "Grâce à l’intégration Stripe sécurisée."]
-          ].map(([title, desc]) => (
-            <div key={title} className="bg-[#1e1e1e] p-4 rounded-2xl shadow-lg">
-              <h3 className="text-lg font-semibold text-white">{title}</h3>
-              <p className="text-sm text-gray-400 mt-1">{desc}</p>
-            </div>
-          ))}
+      <section className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
+        <div className="bg-gray-900 p-6 rounded-lg">
+          <Image
+            src="/images/tools/boutique-pro.svg"
+            alt="Boutique Pro"
+            width={64}
+            height={64}
+            className="mx-auto mb-4"
+          />
+          <h3 className="text-xl font-semibold mb-2">Boutique Pro</h3>
+          <p className="text-gray-400">
+            Gérez votre boutique de beats avec des outils professionnels et
+            intuitifs.
+          </p>
+        </div>
+        <div className="bg-gray-900 p-6 rounded-lg">
+          <Image
+            src="/images/tools/mastering-ia.svg"
+            alt="Mastering IA"
+            width={64}
+            height={64}
+            className="mx-auto mb-4"
+          />
+          <h3 className="text-xl font-semibold mb-2">Mastering IA</h3>
+          <p className="text-gray-400">
+            Améliorez automatiquement la qualité sonore de vos beats grâce à
+            notre mastering assisté par IA.
+          </p>
+        </div>
+        <div className="bg-gray-900 p-6 rounded-lg">
+          <Image
+            src="/images/tools/cover-ia.svg"
+            alt="Cover IA"
+            width={64}
+            height={64}
+            className="mx-auto mb-4"
+          />
+          <h3 className="text-xl font-semibold mb-2">Cover IA</h3>
+          <p className="text-gray-400">
+            Créez des visuels d’album professionnels en quelques clics avec notre
+            outil IA.
+          </p>
         </div>
-      </div>
-    </section>
-  )
+      </section>
+    </main>
+  );
 }

commit 695abfea8e172658de19c88e8b1bf63666654704
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:41:26 2025 +0200

    Update page.tsx

diff --git a/app/pricing/page.tsx b/app/pricing/page.tsx
index cd47bd2..29355c7 100644
--- a/app/pricing/page.tsx
+++ b/app/pricing/page.tsx
@@ -1,57 +1,85 @@
-import React from "react"
-
-export default function PricingPage() {
+export default function Pricing() {
   return (
-    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-poppins">
-      <h1 className="text-4xl font-bold text-primary mb-8">Nos Tarifs</h1>
+    <main className="pt-20 bg-[#121212] min-h-screen text-white font-poppins px-6 max-w-7xl mx-auto">
+      <h1 className="text-5xl font-extrabold text-pink-500 mb-12 text-center">
+        Nos Tarifs
+      </h1>
 
-      {/* Plans d’abonnement */}
-      <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6 mb-16">
-        <PlanCard name="Gratuit" price="0€" features={["1 beat en boutique", "Accès IA mastering", "Distribution en option"]} />
-        <PlanCard name="Bronze" price="9,90€" features={["10 beats en boutique", "IA cover incluse", "Mise en avant possible"]} />
-        <PlanCard name="Or" price="19,90€" features={["25 beats", "Priorité IA", "Support premium"]} />
-        <PlanCard name="Diamant" price="49,90€" features={["Beats illimités", "Boost AI", "Mise en avant +"]} />
-        <PlanCard name="Diamant Plus" price="79,90€" features={["Illimité + stats avancées", "Mise en avant prioritaire"]} />
-      </div>
+      {/* Plans d'abonnement */}
+      <section className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
+        {/* Gratuit */}
+        <div className="bg-gray-900 p-6 rounded-lg border border-gray-700">
+          <h2 className="text-2xl font-bold mb-4 text-center">Gratuit</h2>
+          <ul className="mb-6 space-y-2 text-gray-300">
+            <li>✔️ 3 beats en boutique</li>
+            <li>✔️ Accès aux stats basiques</li>
+            <li>❌ Pas de mastering IA</li>
+            <li>❌ Pas de distribution digitale</li>
+          </ul>
+          <button className="w-full bg-pink-500 hover:bg-pink-400 py-3 rounded-md font-semibold transition">
+            Choisir Gratuit
+          </button>
+        </div>
 
-      {/* Services additionnels */}
-      <h2 className="text-2xl font-semibold text-pink-500 mb-4">Services IA & Options</h2>
-      <ul className="space-y-2 text-lg mb-16">
-        <li>- Mastering IA : <span className="text-white">4,90€ / track</span></li>
-        <li>- Cover IA Pro : <span className="text-white">6,90€ / cover</span></li>
-        <li>- Distribution digitale : <span className="text-white">14,90€ / single</span> ou <span className="text-white">39,90€ / album</span></li>
-      </ul>
+        {/* Bronze */}
+        <div className="bg-gray-900 p-6 rounded-lg border border-pink-500 shadow-pink-600">
+          <h2 className="text-2xl font-bold mb-4 text-center text-pink-500">
+            Bronze
+          </h2>
+          <ul className="mb-6 space-y-2 text-gray-300">
+            <li>✔️ 10 beats en boutique</li>
+            <li>✔️ Statistiques avancées</li>
+            <li>✔️ Mastering IA</li>
+            <li>❌ Distribution digitale</li>
+          </ul>
+          <button className="w-full bg-pink-600 hover:bg-pink-500 py-3 rounded-md font-semibold transition text-white">
+            Choisir Bronze
+          </button>
+        </div>
 
-      {/* Licences */}
-      <h2 className="text-2xl font-semibold text-pink-500 mb-4">Licences de Beats</h2>
-      <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
-        <LicenseCard type="Basique MP3" price="À partir de 14,90€" rights="Usage commercial limité" />
-        <LicenseCard type="Premium WAV" price="À partir de 29,90€" rights="Usage commercial étendu" />
-        <LicenseCard type="Exclusive" price="À partir de 99,90€" rights="Vente unique, droits exclusifs" />
-        <LicenseCard type="Exclusive + Stems" price="Dès 149,90€" rights="Inclut les multipistes, exclusif" />
-      </div>
-    </section>
-  )
-}
+        {/* Or */}
+        <div className="bg-gray-900 p-6 rounded-lg border border-yellow-400 shadow-yellow-500">
+          <h2 className="text-2xl font-bold mb-4 text-center text-yellow-400">
+            Or
+          </h2>
+          <ul className="mb-6 space-y-2 text-gray-300">
+            <li>✔️ Beats illimités</li>
+            <li>✔️ Statistiques premium</li>
+            <li>✔️ Mastering IA avancé</li>
+            <li>✔️ Distribution digitale</li>
+          </ul>
+          <button className="w-full bg-yellow-400 hover:bg-yellow-300 py-3 rounded-md font-semibold transition text-black">
+            Choisir Or
+          </button>
+        </div>
+      </section>
 
-function PlanCard({ name, price, features }: { name: string, price: string, features: string[] }) {
-  return (
-    <div className="bg-zinc-900 rounded-2xl p-6 shadow-md border border-zinc-700">
-      <h3 className="text-xl font-semibold text-primary mb-2">{name}</h3>
-      <p className="text-3xl font-bold mb-4">{price}</p>
-      <ul className="space-y-1 text-sm text-gray-300">
-        {features.map((f, i) => <li key={i}>• {f}</li>)}
-      </ul>
-    </div>
-  )
-}
+      {/* Services additionnels */}
+      <section className="mb-16">
+        <h2 className="text-3xl font-bold text-pink-500 mb-6 text-center">
+          Services Additionnels
+        </h2>
+        <div className="bg-gray-900 p-6 rounded-lg max-w-3xl mx-auto text-center text-gray-300">
+          <p>
+            En plus de votre abonnement, profitez de services comme le mastering
+            IA et la création de covers personnalisées pour vos beats.
+          </p>
+        </div>
+      </section>
 
-function LicenseCard({ type, price, rights }: { type: string, price: string, rights: string }) {
-  return (
-    <div className="bg-zinc-800 rounded-2xl p-5 border border-zinc-600">
-      <h4 className="text-lg font-bold text-violet-400 mb-2">{type}</h4>
-      <p className="text-xl font-semibold mb-1">{price}</p>
-      <p className="text-sm text-gray-400">{rights}</p>
-    </div>
-  )
+      {/* Gestion des droits */}
+      <section>
+        <h2 className="text-3xl font-bold text-pink-500 mb-6 text-center">
+          Gestion des droits & licences
+        </h2>
+        <div className="bg-gray-900 p-6 rounded-lg max-w-4xl mx-auto text-gray-300 leading-relaxed">
+          <p>
+            Toutes nos licences vous garantissent des droits clairs sur vos achats
+            de beats, avec des options allant de licences basiques MP3 à des
+            exclusivités complètes avec stems.
+          </p>
+        </div>
+      </section>
+    </main>
+  );
 }

commit 68555c957a3075dd9ced9120057c930950e5c824
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:42:39 2025 +0200

    Update page.tsx

diff --git a/app/terms/page.tsx b/app/terms/page.tsx
index ef0f0b2..03479d3 100644
--- a/app/terms/page.tsx
+++ b/app/terms/page.tsx
@@ -1,49 +1,121 @@
-import React from "react"
-
-export default function TermsPage() {
+export default function Terms() {
   return (
-    <section className="min-h-screen px-6 py-16 bg-darkbg text-white font-ptsans">
-      <h1 className="text-4xl font-bold text-primary mb-8">Conditions Générales de Vente et d’Utilisation</h1>
+    <main className="pt-20 bg-[#121212] min-h-screen text-white font-poppins px-6 max-w-5xl mx-auto">
+      <h1 className="text-4xl font-extrabold text-pink-500 mb-8 text-center">
+        Conditions Générales de Vente et d'Utilisation (CGV / CGU)
+      </h1>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">1. Définitions</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Ce document précise les termes utilisés, les parties contractantes et les concepts essentiels.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">2. Objet</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Les présentes CGV/CGU régissent les conditions d'accès et d'utilisation de la plateforme BeatsMarket.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">3. Acceptation des conditions</h2>
+        <p className="text-gray-300 leading-relaxed">
+          En utilisant le site, vous acceptez sans réserve ces conditions.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">4. Inscription et comptes</h2>
+        <p className="text-gray-300 leading-relaxed">
+          La création d’un compte utilisateur est nécessaire pour accéder aux services payants et à la boutique.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">5. Licences de beats</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Détails sur les différentes licences proposées (basique, premium, exclusive, stems).
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">6. Prix et paiements</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Les prix affichés sont TTC. Le paiement se fait via Stripe. Les commissions et taxes sont incluses.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">7. Promotions</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Les promotions peuvent être automatiques ou manuelles et sont soumises à conditions.
+        </p>
+      </section>
+
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">8. Services additionnels IA</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Les services comme le mastering IA et la création de covers sont facturés séparément.
+        </p>
+      </section>
 
-      <article className="space-y-6 text-gray-300 text-sm leading-relaxed max-w-5xl">
-        <p>
-          Bienvenue sur BeatsMarket. En utilisant notre site, vous acceptez sans réserve les présentes Conditions Générales de Vente et d'Utilisation.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">9. Distribution digitale</h2>
+        <p className="text-gray-300 leading-relaxed">
+          La distribution digitale est assurée via Believe, sans commission supplémentaire pour BeatsMarket.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">1. Définitions</h2>
-        <p>
-          "Utilisateur" désigne toute personne utilisant le site. "Beatmaker" et "Artiste" désignent les utilisateurs professionnels inscrits.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">10. Sécurité et confidentialité</h2>
+        <p className="text-gray-300 leading-relaxed">
+          BeatsMarket garantit la sécurité des données et le respect de la vie privée des utilisateurs.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">2. Objet</h2>
-        <p>
-          Les CGV/CGU encadrent les relations entre BeatsMarket, les vendeurs (beatmakers) et les acheteurs (artistes).
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">11. Responsabilités</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Limitation des responsabilités concernant l'utilisation des beats et du site.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">3. Licences</h2>
-        <p>
-          Plusieurs types de licences sont proposées : Basique MP3, Premium WAV, Exclusive, Exclusive + Stems. Chaque licence définit des droits spécifiques.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">12. Propriété intellectuelle</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Les beats restent la propriété intellectuelle des beatmakers, sous licence accordée à l’acheteur.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">4. Paiement & Commissions</h2>
-        <p>
-          Le paiement est géré via Stripe. BeatsMarket prélève une commission sur chaque vente. Tous les montants sont TTC.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">13. Durée et résiliation</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Conditions de résiliation des comptes et des services.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">5. Services</h2>
-        <p>
-          Les services additionnels incluent : mastering IA, création de covers, distribution digitale via Believe, etc.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">14. Modifications des conditions</h2>
+        <p className="text-gray-300 leading-relaxed">
+          BeatsMarket se réserve le droit de modifier les CGV/CGU à tout moment.
         </p>
+      </section>
 
-        <h2 className="text-white text-lg font-semibold mt-10">6. Droit applicable</h2>
-        <p>
-          Les présentes conditions sont régies par le droit français. En cas de litige, les tribunaux compétents seront ceux de Clermont-Ferrand.
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">15. Loi applicable</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Ces conditions sont soumises au droit français.
         </p>
+      </section>
 
-        <p className="text-xs mt-12 text-gray-500 italic">
-          Dernière mise à jour : juillet 2025
+      <section className="mb-6">
+        <h2 className="text-2xl font-bold mb-2">16. Contact</h2>
+        <p className="text-gray-300 leading-relaxed">
+          Pour toute question, contactez support@beatsmarket.fr.
         </p>
-      </article>
-    </section>
-  )
+      </section>
+    </main>
+  );
 }

commit fec0b5c42e112bad33d4d729ab7bdddbcefd5b8c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:48:24 2025 +0200

    Update page.tsx

diff --git a/app/page.tsx b/app/page.tsx
index e4c3a9e..50a159f 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,86 +1,100 @@
-import Image from "next/image";
-import Link from "next/link";
+"use client";
+
+import { useState, useEffect } from "react";
+
+interface Beatmaker {
+  id: string;
+  name: string;
+  photoUrl: string;
+  description: string;
+  followers: number;
+}
 
 export default function Home() {
+  const [beatmakerOfTheMonth, setBeatmakerOfTheMonth] = useState<Beatmaker | null>(null);
+  const [searchQuery, setSearchQuery] = useState("");
+  const [searchResult, setSearchResult] = useState<string | null>(null);
+
+  useEffect(() => {
+    // Simuler récupération Beatmaker du mois
+    setBeatmakerOfTheMonth({
+      id: "bm001",
+      name: "DJ Flow",
+      photoUrl: "/images/beatmakers/dj-flow.jpg",
+      description: "Le beatmaker du mois, expert en trap et hip-hop.",
+      followers: 12345,
+    });
+  }, []);
+
+  const handleSearch = () => {
+    // Simuler recherche IA (placeholder)
+    if (!searchQuery.trim()) {
+      setSearchResult(null);
+      return;
+    }
+    setSearchResult(`Résultat IA simulé pour : "${searchQuery}"`);
+  };
+
   return (
-    <main className="pt-20 bg-[#121212] min-h-screen text-white font-poppins">
+    <main className="bg-[#121212] min-h-screen text-white font-poppins px-6 max-w-7xl mx-auto pt-20 space-y-16">
       {/* Beatmaker du mois */}
-      <section className="max-w-7xl mx-auto px-6 py-12">
-        <h2 className="text-4xl font-extrabold text-pink-500 mb-8">
-          Beatmaker du mois
-        </h2>
-        <div className="bg-gray-900 rounded-lg p-8 flex flex-col md:flex-row items-center md:items-start gap-6">
-          <Image
-            src="/images/beatmaker-du-mois.jpg"
-            alt="Beatmaker du mois"
-            width={300}
-            height={300}
-            className="rounded-lg object-cover"
-            priority
-          />
-          <div>
-            <h3 className="text-2xl font-bold mb-2">DJ Awesome</h3>
-            <p className="mb-4 text-gray-300">
-              Découvrez les beats les plus chauds de DJ Awesome ce mois-ci,
-              exclusifs et prêts à booster vos projets musicaux.
-            </p>
-            <Link
-              href="/beatmakers/dj-awesome"
-              className="inline-block bg-pink-500 hover:bg-pink-400 text-white px-5 py-2 rounded-md font-semibold transition"
-            >
-              Voir son profil
-            </Link>
-          </div>
-        </div>
+      <section className="bg-gray-900 rounded-lg p-8 flex flex-col md:flex-row items-center gap-8">
+        {beatmakerOfTheMonth && (
+          <>
+            <img
+              src={beatmakerOfTheMonth.photoUrl}
+              alt={`Photo de ${beatmakerOfTheMonth.name}`}
+              className="w-48 h-48 rounded-full object-cover"
+              loading="lazy"
+            />
+            <div>
+              <h2 className="text-3xl font-bold text-pink-500 mb-2">
+                Beatmaker du mois
+              </h2>
+              <h3 className="text-2xl font-semibold">{beatmakerOfTheMonth.name}</h3>
+              <p className="text-gray-300 my-2">{beatmakerOfTheMonth.description}</p>
+              <p className="text-gray-400 text-sm">
+                {beatmakerOfTheMonth.followers.toLocaleString()} followers
+              </p>
+            </div>
+          </>
+        )}
       </section>
 
       {/* Recherche IA */}
-      <section className="max-w-7xl mx-auto px-6 py-12 bg-gray-900 rounded-lg mb-12">
-        <h2 className="text-4xl font-extrabold text-pink-500 mb-8 text-center">
+      <section className="bg-gray-900 rounded-lg p-8 max-w-3xl mx-auto">
+        <h2 className="text-3xl font-bold text-pink-500 mb-6 text-center">
           Recherche IA
         </h2>
-        <form className="max-w-xl mx-auto flex gap-3">
-          <input
-            type="search"
-            placeholder="Cherchez votre beat idéal avec l'IA..."
-            className="flex-grow px-4 py-3 rounded-md bg-gray-800 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-pink-500"
-          />
-          <button
-            type="submit"
-            className="bg-pink-500 hover:bg-pink-400 px-6 py-3 rounded-md font-semibold transition"
-          >
-            Rechercher
-          </button>
-        </form>
+        <input
+          type="text"
+          placeholder="Rechercher un beat, un style, un artiste..."
+          className="w-full p-3 rounded-md bg-gray-800 text-white placeholder-gray-500 mb-4"
+          value={searchQuery}
+          onChange={(e) => setSearchQuery(e.target.value)}
+          onKeyDown={(e) => e.key === "Enter" && handleSearch()}
+        />
+        <button
+          onClick={handleSearch}
+          className="w-full bg-pink-600 hover:bg-pink-500 py-3 rounded-md font-semibold transition"
+        >
+          Lancer la recherche
+        </button>
+        {searchResult && (
+          <p className="mt-4 text-gray-300 italic">{searchResult}</p>
+        )}
       </section>
 
       {/* Pourquoi nous ? */}
-      <section className="max-w-7xl mx-auto px-6 py-12">
-        <h2 className="text-4xl font-extrabold text-pink-500 mb-8 text-center">
-          Pourquoi choisir BeatsMarket ?
+      <section className="max-w-4xl mx-auto text-center space-y-4">
+        <h2 className="text-4xl font-extrabold text-pink-500">
+          Pourquoi nous ?
         </h2>
-        <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
-          <div className="bg-gray-900 rounded-lg p-6">
-            <h3 className="text-2xl font-semibold mb-2">Qualité Pro</h3>
-            <p className="text-gray-300">
-              Beats exclusifs, réalisés par des beatmakers passionnés et
-              professionnels.
-            </p>
-          </div>
-          <div className="bg-gray-900 rounded-lg p-6">
-            <h3 className="text-2xl font-semibold mb-2">Recherche IA</h3>
-            <p className="text-gray-300">
-              Trouvez le beat parfait grâce à notre technologie de recherche
-              assistée par intelligence artificielle.
-            </p>
-          </div>
-          <div className="bg-gray-900 rounded-lg p-6">
-            <h3 className="text-2xl font-semibold mb-2">Support & Sécurité</h3>
-            <p className="text-gray-300">
-              Une équipe disponible, un site sécurisé, et des paiements fiables.
-            </p>
-          </div>
-        </div>
+        <p className="text-gray-300 text-lg leading-relaxed">
+          BeatsMarket est la plateforme numéro 1 pour acheter et vendre des beats
+          dans le monde, grâce à une communauté active, des outils modernes et
+          une expérience unique centrée sur l’innovation.
+        </p>
       </section>
     </main>
   );

commit 35252f0a2c6750b86d78372adf58302b743dc6d1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:49:23 2025 +0200

    Update page.tsx

diff --git a/app/help/page.tsx b/app/help/page.tsx
index b801ab3..a3b4dea 100644
--- a/app/help/page.tsx
+++ b/app/help/page.tsx
@@ -1,79 +1,94 @@
-"use client"
-import { useState } from "react"
-import { Input } from "@/components/ui/input"
-import { Textarea } from "@/components/ui/textarea"
-import { Button } from "@/components/ui/button"
-import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
+"use client";
+
+import { useState } from "react";
+
+interface FAQItem {
+  question: string;
+  answer: string;
+}
+
+const faqs: FAQItem[] = [
+  {
+    question: "Comment acheter un beat ?",
+    answer:
+      "Pour acheter un beat, créez un compte, choisissez une licence et procédez au paiement sécurisé.",
+  },
+  {
+    question: "Quels types de licences proposez-vous ?",
+    answer:
+      "Nous proposons des licences basique, premium, exclusive, et exclusive + stems.",
+  },
+  {
+    question: "Comment fonctionne le mastering IA ?",
+    answer:
+      "Le mastering IA améliore automatiquement la qualité sonore de vos beats via notre outil intégré.",
+  },
+  {
+    question: "Puis-je obtenir un remboursement ?",
+    answer:
+      "Les remboursements sont soumis à conditions spécifiques. Contactez le support pour plus d’infos.",
+  },
+];
 
 export default function HelpPage() {
-  const [form, setForm] = useState({ email: "", message: "" })
+  const [chatInput, setChatInput] = useState("");
+  const [chatMessages, setChatMessages] = useState<string[]>([]);
 
-  return (
-    <main className="min-h-screen bg-darkbg text-white px-4 py-12 font-poppins">
-      <div className="max-w-4xl mx-auto">
-        <h1 className="text-4xl font-bold text-primary mb-8">Besoin d'aide ?</h1>
+  const sendMessage = () => {
+    if (!chatInput.trim()) return;
+    // Simuler réponse IA
+    setChatMessages((prev) => [...prev, `Vous : ${chatInput}`, `Monsieur Aide : Voici une réponse simulée à "${chatInput}"`]);
+    setChatInput("");
+  };
 
-        {/* Chatbot IA */}
-        <section className="mb-16">
-          <h2 className="text-2xl font-semibold mb-4">👋 Monsieur Aide (IA)</h2>
-          <div className="bg-[#1f1f1f] rounded-xl p-4 text-sm text-gray-300">
-            <p>Bonjour ! Je suis Monsieur Aide. Pose-moi une question sur BeatsMarket et je te réponds tout de suite.</p>
-            <p className="mt-2 italic text-xs text-gray-500">Bientôt disponible en version complète (Genkit AI).</p>
-          </div>
-        </section>
+  return (
+    <main className="bg-[#121212] min-h-screen text-white font-poppins px-6 max-w-4xl mx-auto pt-20 space-y-12">
+      <h1 className="text-4xl font-extrabold text-pink-500 text-center mb-8">Aide & FAQ</h1>
 
-        {/* Formulaire de contact */}
-        <section className="mb-16">
-          <h2 className="text-2xl font-semibold mb-4">📨 Formulaire de contact</h2>
-          <div className="bg-[#1f1f1f] rounded-xl p-6 space-y-4">
-            <Input
-              type="email"
-              placeholder="Votre adresse e-mail"
-              value={form.email}
-              onChange={(e) => setForm({ ...form, email: e.target.value })}
-              className="bg-[#2c2c2c] text-white border-none"
-            />
-            <Textarea
-              placeholder="Votre message..."
-              value={form.message}
-              onChange={(e) => setForm({ ...form, message: e.target.value })}
-              className="bg-[#2c2c2c] text-white border-none min-h-[120px]"
-            />
-            <Button className="bg-primary hover:bg-primary/80 transition-colors">Envoyer</Button>
-          </div>
-        </section>
+      {/* Chatbot IA */}
+      <section className="bg-gray-900 rounded-lg p-6 flex flex-col max-w-xl mx-auto">
+        <h2 className="text-2xl font-semibold mb-4">Monsieur Aide</h2>
+        <div
+          className="flex-1 overflow-auto max-h-60 mb-4 bg-gray-800 p-4 rounded-md space-y-2"
+          aria-live="polite"
+        >
+          {chatMessages.length === 0 && <p className="text-gray-400 italic">Posez votre question ci-dessous.</p>}
+          {chatMessages.map((msg, idx) => (
+            <p key={idx} className={msg.startsWith("Vous") ? "text-pink-400" : "text-gray-300"}>
+              {msg}
+            </p>
+          ))}
+        </div>
+        <div className="flex space-x-2">
+          <input
+            type="text"
+            className="flex-grow p-3 rounded-md bg-gray-800 text-white placeholder-gray-500"
+            placeholder="Tapez votre question..."
+            value={chatInput}
+            onChange={(e) => setChatInput(e.target.value)}
+            onKeyDown={(e) => e.key === "Enter" && sendMessage()}
+          />
+          <button
+            onClick={sendMessage}
+            className="bg-pink-600 hover:bg-pink-500 px-4 rounded-md font-semibold"
+          >
+            Envoyer
+          </button>
+        </div>
+      </section>
 
-        {/* FAQ */}
-        <section>
-          <h2 className="text-2xl font-semibold mb-4">❓ Questions fréquentes (FAQ)</h2>
-          <Accordion type="multiple" className="bg-[#1f1f1f] rounded-xl">
-            <AccordionItem value="q1">
-              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
-                Comment vendre mes beats sur BeatsMarket ?
-              </AccordionTrigger>
-              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
-                Crée un compte beatmaker, uploade tes beats, choisis tes licences, ton prix, et publie-les dans ta boutique. BeatsMarket s’occupe du reste !
-              </AccordionContent>
-            </AccordionItem>
-            <AccordionItem value="q2">
-              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
-                Quels sont les frais de BeatsMarket ?
-              </AccordionTrigger>
-              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
-                Nous prenons une commission de 15% sur les ventes. Les frais Stripe s’ajoutent selon le pays de l’utilisateur.
-              </AccordionContent>
-            </AccordionItem>
-            <AccordionItem value="q3">
-              <AccordionTrigger className="text-left px-4 py-3 text-white hover:bg-[#2a2a2a]">
-                Comment contacter l’équipe ?
-              </AccordionTrigger>
-              <AccordionContent className="px-4 pb-4 text-gray-300 text-sm">
-                Utilisez le formulaire ci-dessus ou écrivez-nous à support@beatsmarket.fr. Nous répondons sous 48h maximum.
-              </AccordionContent>
-            </AccordionItem>
-          </Accordion>
-        </section>
-      </div>
+      {/* FAQ dynamique */}
+      <section className="max-w-3xl mx-auto">
+        <h2 className="text-3xl font-bold text-pink-500 mb-6 text-center">Foire aux Questions</h2>
+        <div className="space-y-4">
+          {faqs.map(({ question, answer }, idx) => (
+            <details key={idx} className="bg-gray-900 rounded-md p-4">
+              <summary className="cursor-pointer font-semibold text-lg text-pink-500">{question}</summary>
+              <p className="mt-2 text-gray-300">{answer}</p>
+            </details>
+          ))}
+        </div>
+      </section>
     </main>
-  )
+  );
 }

commit 46341a16b519241779905f001d4857963ad13867
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:50:21 2025 +0200

    Update page.tsx

diff --git a/app/admin/artists/page.tsx b/app/admin/artists/page.tsx
index eca19bf..be0b48a 100644
--- a/app/admin/artists/page.tsx
+++ b/app/admin/artists/page.tsx
@@ -1,73 +1,107 @@
-import React from "react"
-import { StatusBadge } from "@/components/ui/status-badge"
-import { ActionMenu } from "@/components/ui/action-menu"
+"use client";
 
-type Artist = {
-  id: string
-  name: string
-  email: string
-  status: "actif" | "en attente" | "banni"
-  purchasesCount: number
-  totalSpent: number
+import { useState, useEffect } from "react";
+import { Button } from "@/components/ui/button";
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
+import { MoreHorizontal } from "lucide-react";
+
+interface Artist {
+  id: string;
+  name: string;
+  email: string;
+  status: "active" | "pending" | "banned";
+  createdAt: string;
 }
 
-const dummyArtists: Artist[] = [
-  { id: "a1", name: "Lina", email: "lina@example.com", status: "actif", purchasesCount: 8, totalSpent: 320 },
-  { id: "a2", name: "Tom", email: "tom@example.com", status: "en attente", purchasesCount: 1, totalSpent: 14.9 },
-  { id: "a3", name: "Emma", email: "emma@example.com", status: "banni", purchasesCount: 0, totalSpent: 0 },
-]
+const STATUS_BADGES = {
+  active: "bg-green-600 text-white",
+  pending: "bg-yellow-500 text-black",
+  banned: "bg-red-600 text-white",
+};
+
+export default function AdminArtists() {
+  const [artists, setArtists] = useState<Artist[]>([]);
+
+  useEffect(() => {
+    // Mock fetch artists
+    setArtists([
+      { id: "1", name: "Alice", email: "alice@example.com", status: "active", createdAt: "2025-06-10" },
+      { id: "2", name: "Bob", email: "bob@example.com", status: "pending", createdAt: "2025-06-15" },
+      { id: "3", name: "Charlie", email: "charlie@example.com", status: "banned", createdAt: "2025-05-22" },
+    ]);
+  }, []);
 
-export default function AdminArtistsPage() {
-  const handleEdit = (id: string) => {
-    alert(`Éditer artiste ${id}`)
-  }
-  const handleSuspend = (id: string) => {
-    alert(`Suspendre artiste ${id}`)
-  }
   const handleDelete = (id: string) => {
-    if (confirm("Êtes-vous sûr de vouloir supprimer cet artiste ? Cette action est irréversible.")) {
-      alert(`Artiste ${id} supprimé`)
+    if (confirm("Confirmez-vous la suppression de cet artiste ? Cette action est irréversible.")) {
+      setArtists((prev) => prev.filter((a) => a.id !== id));
     }
-  }
+  };
 
   return (
-    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
-      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Artistes</h1>
+    <main className="pt-20 px-6 max-w-7xl mx-auto bg-[#121212] min-h-screen text-white font-poppins">
+      <div className="flex justify-between items-center mb-8">
+        <h1 className="text-3xl font-bold text-pink-500">Gestion des Artistes</h1>
+        <Button>Ajouter un artiste</Button>
+      </div>
 
-      <div className="overflow-x-auto rounded-lg border border-gray-700">
-        <table className="w-full text-left text-sm">
-          <thead className="bg-darkbg2 text-gray-300">
+      <div className="overflow-x-auto bg-gray-900 rounded-lg shadow-md">
+        <table className="w-full table-auto text-left">
+          <thead className="border-b border-gray-700">
             <tr>
-              <th className="px-4 py-3">Nom</th>
-              <th className="px-4 py-3">Email</th>
-              <th className="px-4 py-3">Statut</th>
-              <th className="px-4 py-3">Achats</th>
-              <th className="px-4 py-3">Total dépensé (€)</th>
-              <th className="px-4 py-3">Actions</th>
+              <th className="py-3 px-4">Nom</th>
+              <th className="py-3 px-4">Email</th>
+              <th className="py-3 px-4">Statut</th>
+              <th className="py-3 px-4">Inscrit le</th>
+              <th className="py-3 px-4">Actions</th>
             </tr>
           </thead>
           <tbody>
-            {dummyArtists.map((a) => (
-              <tr key={a.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
-                <td className="px-4 py-3">{a.name}</td>
-                <td className="px-4 py-3">{a.email}</td>
-                <td className="px-4 py-3">
-                  <StatusBadge status={a.status} />
+            {artists.map(({ id, name, email, status, createdAt }) => (
+              <tr
+                key={id}
+                className="border-b border-gray-800 hover:bg-gray-800 transition"
+              >
+                <td className="py-3 px-4">{name}</td>
+                <td className="py-3 px-4">{email}</td>
+                <td className="py-3 px-4">
+                  <span className={`inline-block px-3 py-1 rounded-full text-sm font-semibold ${STATUS_BADGES[status]}`}>
+                    {status.toUpperCase()}
+                  </span>
                 </td>
-                <td className="px-4 py-3">{a.purchasesCount}</td>
-                <td className="px-4 py-3">{a.totalSpent.toFixed(2)}</td>
-                <td className="px-4 py-3">
-                  <ActionMenu
-                    onEdit={() => handleEdit(a.id)}
-                    onBan={() => handleSuspend(a.id)}
-                    onDelete={() => handleDelete(a.id)}
-                  />
+                <td className="py-3 px-4">{new Date(createdAt).toLocaleDateString()}</td>
+                <td className="py-3 px-4">
+                  <DropdownMenu>
+                    <DropdownMenuTrigger asChild>
+                      <Button variant="ghost" className="h-8 w-8 p-0">
+                        <MoreHorizontal className="h-5 w-5" />
+                        <span className="sr-only">Actions</span>
+                      </Button>
+                    </DropdownMenuTrigger>
+                    <DropdownMenuContent align="end">
+                      <DropdownMenuItem onClick={() => alert(`Modifier l'artiste ${name}`)}>
+                        Modifier
+                      </DropdownMenuItem>
+                      <DropdownMenuItem onClick={() => handleDelete(id)}>
+                        Supprimer
+                      </DropdownMenuItem>
+                      <DropdownMenuItem onClick={() => alert(`Voir profil ${name}`)}>
+                        Voir profil
+                      </DropdownMenuItem>
+                    </DropdownMenuContent>
+                  </DropdownMenu>
                 </td>
               </tr>
             ))}
+            {artists.length === 0 && (
+              <tr>
+                <td colSpan={5} className="py-4 text-center text-gray-500">
+                  Aucun artiste trouvé.
+                </td>
+              </tr>
+            )}
           </tbody>
         </table>
       </div>
-    </section>
-  )
+    </main>
+  );
 }

commit 23d65cc7ffbc3791ca54420430b3967dd42a5dcc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 09:53:32 2025 +0200

    Update page.tsx

diff --git a/app/admin/beatmakers/page.tsx b/app/admin/beatmakers/page.tsx
index a8e36db..51ed435 100644
--- a/app/admin/beatmakers/page.tsx
+++ b/app/admin/beatmakers/page.tsx
@@ -1,73 +1,207 @@
-import React from "react"
-import { StatusBadge } from "@/components/ui/status-badge"
-import { ActionMenu } from "@/components/ui/action-menu"
-
-type Beatmaker = {
-  id: string
-  name: string
-  email: string
-  status: "actif" | "en attente" | "banni"
-  beatsCount: number
-  revenue: number
+"use client";
+
+import { useState, useEffect } from "react";
+
+type BeatmakerStatus = "actif" | "en attente" | "banni";
+
+interface Beatmaker {
+  id: string;
+  name: string;
+  email: string;
+  status: BeatmakerStatus;
+  beatsCount: number;
+  revenue: number;
 }
 
-const dummyBeatmakers: Beatmaker[] = [
-  { id: "1", name: "Jay Jay", email: "jay@example.com", status: "actif", beatsCount: 12, revenue: 1200 },
-  { id: "2", name: "Sophie", email: "sophie@example.com", status: "en attente", beatsCount: 5, revenue: 450 },
-  { id: "3", name: "Marc", email: "marc@example.com", status: "banni", beatsCount: 0, revenue: 0 },
-]
+const STATUS_CLASSES: Record<BeatmakerStatus, string> = {
+  actif: "bg-green-600 text-white",
+  "en attente": "bg-yellow-500 text-black",
+  banni: "bg-red-600 text-white",
+};
+
+// Composant Badge simple
+function StatusBadge({ status }: { status: BeatmakerStatus }) {
+  return (
+    <span
+      className={`inline-block px-3 py-1 rounded-full text-sm font-semibold ${STATUS_CLASSES[status]}`}
+    >
+      {status.toUpperCase()}
+    </span>
+  );
+}
+
+// Composant modale simple pour confirmation
+function ConfirmModal({
+  message,
+  onConfirm,
+  onCancel,
+}: {
+  message: string;
+  onConfirm: () => void;
+  onCancel: () => void;
+}) {
+  return (
+    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50">
+      <div className="bg-gray-900 p-6 rounded-lg max-w-sm w-full text-white">
+        <p className="mb-4">{message}</p>
+        <div className="flex justify-end space-x-4">
+          <button
+            onClick={onCancel}
+            className="px-4 py-2 bg-gray-700 rounded hover:bg-gray-600"
+          >
+            Annuler
+          </button>
+          <button
+            onClick={onConfirm}
+            className="px-4 py-2 bg-pink-600 rounded hover:bg-pink-500"
+          >
+            Confirmer
+          </button>
+        </div>
+      </div>
+    </div>
+  );
+}
 
 export default function AdminBeatmakersPage() {
-  const handleEdit = (id: string) => {
-    alert(`Éditer beatmaker ${id}`)
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>([]);
+  const [loading, setLoading] = useState(true);
+  const [modalOpen, setModalOpen] = useState(false);
+  const [beatmakerToDelete, setBeatmakerToDelete] = useState<string | null>(null);
+
+  useEffect(() => {
+    // Simuler fetch API
+    setTimeout(() => {
+      setBeatmakers([
+        {
+          id: "1",
+          name: "Jay Jay",
+          email: "jay@example.com",
+          status: "actif",
+          beatsCount: 12,
+          revenue: 1200,
+        },
+        {
+          id: "2",
+          name: "Sophie",
+          email: "sophie@example.com",
+          status: "en attente",
+          beatsCount: 5,
+          revenue: 450,
+        },
+        {
+          id: "3",
+          name: "Marc",
+          email: "marc@example.com",
+          status: "banni",
+          beatsCount: 0,
+          revenue: 0,
+        },
+      ]);
+      setLoading(false);
+    }, 700);
+  }, []);
+
+  function openDeleteModal(id: string) {
+    setBeatmakerToDelete(id);
+    setModalOpen(true);
+  }
+
+  function confirmDelete() {
+    if (!beatmakerToDelete) return;
+    setBeatmakers((prev) => prev.filter((b) => b.id !== beatmakerToDelete));
+    setModalOpen(false);
+    setBeatmakerToDelete(null);
+    // TODO: appeler backend suppression ici
+  }
+
+  function cancelDelete() {
+    setModalOpen(false);
+    setBeatmakerToDelete(null);
   }
-  const handleBan = (id: string) => {
-    alert(`Bannir beatmaker ${id}`)
+
+  function handleEdit(id: string) {
+    alert(`Éditer beatmaker ${id}`);
+    // TODO: rediriger vers page édition
   }
-  const handleDelete = (id: string) => {
-    if (confirm("Êtes-vous sûr de vouloir supprimer ce beatmaker ? Cette action est irréversible.")) {
-      alert(`Beatmaker ${id} supprimé`)
-    }
+
+  function handleBan(id: string) {
+    alert(`Bannir beatmaker ${id}`);
+    // TODO: appeler backend bannissement
   }
 
+  if (loading) return <p className="p-6 text-white">Chargement des beatmakers...</p>;
+
   return (
-    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
-      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Beatmakers</h1>
+    <section className="min-h-screen bg-[#121212] px-6 py-12 text-white font-poppins max-w-7xl mx-auto">
+      <h1 className="text-4xl font-bold text-pink-500 mb-8">Gestion des Beatmakers</h1>
 
       <div className="overflow-x-auto rounded-lg border border-gray-700">
         <table className="w-full text-left text-sm">
-          <thead className="bg-darkbg2 text-gray-300">
+          <thead className="bg-gray-900 text-gray-300">
             <tr>
               <th className="px-4 py-3">Nom</th>
               <th className="px-4 py-3">Email</th>
-              <th className="px-4 py-3">Status</th>
+              <th className="px-4 py-3">Statut</th>
               <th className="px-4 py-3">Beats en ligne</th>
               <th className="px-4 py-3">Revenu (€)</th>
               <th className="px-4 py-3">Actions</th>
             </tr>
           </thead>
           <tbody>
-            {dummyBeatmakers.map((b) => (
-              <tr key={b.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
-                <td className="px-4 py-3">{b.name}</td>
-                <td className="px-4 py-3">{b.email}</td>
-                <td className="px-4 py-3">
-                  <StatusBadge status={b.status} />
-                </td>
-                <td className="px-4 py-3">{b.beatsCount}</td>
-                <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
-                <td className="px-4 py-3">
-                  <ActionMenu
-                    onEdit={() => handleEdit(b.id)}
-                    onBan={() => handleBan(b.id)}
-                    onDelete={() => handleDelete(b.id)}
-                  />
+            {beatmakers.length === 0 ? (
+              <tr>
+                <td colSpan={6} className="py-4 text-center text-gray-500">
+                  Aucun beatmaker trouvé.
                 </td>
               </tr>
-            ))}
+            ) : (
+              beatmakers.map((b) => (
+                <tr
+                  key={b.id}
+                  className="border-t border-gray-700 hover:bg-gray-800 transition"
+                >
+                  <td className="px-4 py-3">{b.name}</td>
+                  <td className="px-4 py-3">{b.email}</td>
+                  <td className="px-4 py-3">
+                    <StatusBadge status={b.status} />
+                  </td>
+                  <td className="px-4 py-3">{b.beatsCount}</td>
+                  <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
+                  <td className="px-4 py-3 space-x-2">
+                    <button
+                      onClick={() => handleEdit(b.id)}
+                      className="px-3 py-1 rounded bg-pink-600 hover:bg-pink-500 transition"
+                    >
+                      Éditer
+                    </button>
+                    <button
+                      onClick={() => handleBan(b.id)}
+                      className="px-3 py-1 rounded bg-yellow-500 hover:bg-yellow-400 text-black transition"
+                    >
+                      Bannir
+                    </button>
+                    <button
+                      onClick={() => openDeleteModal(b.id)}
+                      className="px-3 py-1 rounded bg-red-600 hover:bg-red-500 transition"
+                    >
+                      Supprimer
+                    </button>
+                  </td>
+                </tr>
+              ))
+            )}
           </tbody>
         </table>
       </div>
+
+      {modalOpen && (
+        <ConfirmModal
+          message="Êtes-vous sûr de vouloir supprimer ce beatmaker ? Cette action est irréversible."
+          onConfirm={confirmDelete}
+          onCancel={cancelDelete}
+        />
+      )}
     </section>
-  )
+  );
 }

commit 747624a6bee536acd3254b7f0fb8147b42cf90c4
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:28:21 2025 +0200

    Update page.tsx

diff --git a/src/app/admin/artists/page.tsx b/src/app/admin/artists/page.tsx
index 7d7c099..eb7611b 100644
--- a/src/app/admin/artists/page.tsx
+++ b/src/app/admin/artists/page.tsx
@@ -1,14 +1,110 @@
-import { ArtistsTable } from "@/components/admin/artists-table"
-import { PageHeader } from "@/components/ui/page-header"
+"use client";
+
+import { useState } from "react";
+import { Button } from "@/components/ui/button";
+import { Badge } from "@/components/ui/badge";
+import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
+import { MoreHorizontal } from "lucide-react";
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
+
+const mockArtists = [
+  {
+    id: "artist_001",
+    name: "Léa Sound",
+    email: "lea@example.com",
+    beatsPurchased: 12,
+    revenue: "124,90 €",
+    status: "Actif",
+  },
+  {
+    id: "artist_002",
+    name: "Flowmatic",
+    email: "flow@example.com",
+    beatsPurchased: 4,
+    revenue: "44,50 €",
+    status: "Suspendu",
+  },
+];
 
 export default function AdminArtistsPage() {
+  const [artists, setArtists] = useState(mockArtists);
+
+  const handleSuspend = (id: string) => {
+    setArtists((prev) =>
+      prev.map((artist) =>
+        artist.id === id ? { ...artist, status: "Suspendu" } : artist
+      )
+    );
+  };
+
+  const handleActivate = (id: string) => {
+    setArtists((prev) =>
+      prev.map((artist) =>
+        artist.id === id ? { ...artist, status: "Actif" } : artist
+      )
+    );
+  };
+
   return (
-    <div className="flex flex-col gap-6">
-      <PageHeader
-        title="Gestion des artistes"
-        description="Modérez, gérez et suivez l'activité des artistes inscrits sur BeatsMarket."
-      />
-      <ArtistsTable />
+    <div className="p-6">
+      <div className="flex items-center justify-between mb-6">
+        <h1 className="text-2xl font-bold">Gestion des Artistes</h1>
+        <Button variant="default">Ajouter un artiste</Button>
+      </div>
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Nom</TableHead>
+            <TableHead>Email</TableHead>
+            <TableHead className="text-center">Beats achetés</TableHead>
+            <TableHead className="text-center">Revenus</TableHead>
+            <TableHead className="text-center">Statut</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {artists.map((artist) => (
+            <TableRow key={artist.id}>
+              <TableCell>{artist.name}</TableCell>
+              <TableCell>{artist.email}</TableCell>
+              <TableCell className="text-center">{artist.beatsPurchased}</TableCell>
+              <TableCell className="text-center">{artist.revenue}</TableCell>
+              <TableCell className="text-center">
+                <Badge variant={artist.status === "Actif" ? "success" : "destructive"}>
+                  {artist.status}
+                </Badge>
+              </TableCell>
+              <TableCell className="text-right">
+                <DropdownMenu>
+                  <DropdownMenuTrigger asChild>
+                    <Button variant="ghost" size="icon">
+                      <MoreHorizontal className="w-4 h-4" />
+                    </Button>
+                  </DropdownMenuTrigger>
+                  <DropdownMenuContent>
+                    <DropdownMenuLabel>Actions</DropdownMenuLabel>
+                    <DropdownMenuItem onClick={() => alert("Voir profil de " + artist.name)}>
+                      Voir profil
+                    </DropdownMenuItem>
+                    <DropdownMenuItem
+                      onClick={() =>
+                        artist.status === "Actif"
+                          ? handleSuspend(artist.id)
+                          : handleActivate(artist.id)
+                      }
+                    >
+                      {artist.status === "Actif" ? "Suspendre" : "Réactiver"}
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => alert("Suppression de " + artist.name)}>
+                      Supprimer
+                    </DropdownMenuItem>
+                  </DropdownMenuContent>
+                </DropdownMenu>
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
     </div>
-  )
+  );
 }

commit 998cbd853200ef65d39f3053752d53cb0a9ccaf1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:29:47 2025 +0200

    Create page.tsx

diff --git a/src/app/admin/dashboard/page.tsx b/src/app/admin/dashboard/page.tsx
new file mode 100644
index 0000000..3db32fe
--- /dev/null
+++ b/src/app/admin/dashboard/page.tsx
@@ -0,0 +1,102 @@
+"use client";
+
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from "recharts";
+import { Badge } from "@/components/ui/badge";
+import { Flame, User, Music, Euro } from "lucide-react";
+
+const kpis = [
+  {
+    title: "Revenus totaux",
+    value: "12 340,50 €",
+    icon: <Euro className="w-5 h-5 text-pink-500" />,
+  },
+  {
+    title: "Beats vendus",
+    value: "328",
+    icon: <Music className="w-5 h-5 text-purple-500" />,
+  },
+  {
+    title: "Nouveaux artistes",
+    value: "+45",
+    icon: <User className="w-5 h-5 text-green-500" />,
+  },
+  {
+    title: "Tendance",
+    value: "+18% ce mois",
+    icon: <Flame className="w-5 h-5 text-orange-500" />,
+  },
+];
+
+const revenueData = [
+  { name: "Jan", revenue: 500 },
+  { name: "Fév", revenue: 1100 },
+  { name: "Mar", revenue: 900 },
+  { name: "Avr", revenue: 2000 },
+  { name: "Mai", revenue: 1850 },
+  { name: "Juin", revenue: 2340 },
+  { name: "Juil", revenue: 1620 },
+];
+
+export default function AdminDashboardPage() {
+  return (
+    <div className="p-6 space-y-6">
+      <h1 className="text-2xl font-bold">Tableau de bord</h1>
+
+      {/* KPIs */}
+      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
+        {kpis.map((kpi, index) => (
+          <Card key={index} className="shadow-md">
+            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+              <CardTitle className="text-sm font-medium">{kpi.title}</CardTitle>
+              {kpi.icon}
+            </CardHeader>
+            <CardContent>
+              <div className="text-2xl font-bold">{kpi.value}</div>
+            </CardContent>
+          </Card>
+        ))}
+      </div>
+
+      {/* Graphique */}
+      <Card className="shadow-md">
+        <CardHeader>
+          <CardTitle>Revenus mensuels</CardTitle>
+        </CardHeader>
+        <CardContent>
+          <ResponsiveContainer width="100%" height={250}>
+            <BarChart data={revenueData}>
+              <XAxis dataKey="name" stroke="#888888" />
+              <YAxis stroke="#888888" />
+              <Tooltip />
+              <Bar dataKey="revenue" fill="#ec4899" radius={[4, 4, 0, 0]} />
+            </BarChart>
+          </ResponsiveContainer>
+        </CardContent>
+      </Card>
+
+      {/* Section Ventes récentes */}
+      <Card className="shadow-md">
+        <CardHeader>
+          <CardTitle>Ventes récentes</CardTitle>
+        </CardHeader>
+        <CardContent className="space-y-4">
+          <div className="flex items-center justify-between">
+            <div>
+              <p className="text-sm font-medium">"Drill Night" par BeatX</p>
+              <p className="text-xs text-muted-foreground">19 juillet 2025</p>
+            </div>
+            <Badge variant="outline">29,90 €</Badge>
+          </div>
+          <div className="flex items-center justify-between">
+            <div>
+              <p className="text-sm font-medium">"Melancholy" par DarkTune</p>
+              <p className="text-xs text-muted-foreground">18 juillet 2025</p>
+            </div>
+            <Badge variant="outline">14,90 €</Badge>
+          </div>
+        </CardContent>
+      </Card>
+    </div>
+  );
+}

commit 1dde34eafc8b92136bde5106cc9137c241079e1f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:31:12 2025 +0200

    Create page.tsx

diff --git a/src/app/admin/beatmakers/page.tsx b/src/app/admin/beatmakers/page.tsx
new file mode 100644
index 0000000..1e2ead9
--- /dev/null
+++ b/src/app/admin/beatmakers/page.tsx
@@ -0,0 +1,130 @@
+"use client"
+
+import React, { useEffect, useState } from "react"
+import { StatusBadge } from "@/components/ui/status-badge"
+import { ActionMenu } from "@/components/ui/action-menu"
+import { Button } from "@/components/ui/button"
+import { PlusCircle } from "lucide-react"
+
+type Beatmaker = {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "en attente" | "banni"
+  beatsCount: number
+  revenue: number
+}
+
+export default function AdminBeatmakersPage() {
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>([])
+  const [loading, setLoading] = useState(true)
+
+  useEffect(() => {
+    // Simulation d'appel API
+    const fetchData = async () => {
+      setLoading(true)
+      try {
+        // Remplacer ceci par un appel réel à ton backend
+        const data: Beatmaker[] = [
+          {
+            id: "1",
+            name: "Jay Jay",
+            email: "jay@example.com",
+            status: "actif",
+            beatsCount: 18,
+            revenue: 1560,
+          },
+          {
+            id: "2",
+            name: "Sophie",
+            email: "sophie@example.com",
+            status: "en attente",
+            beatsCount: 4,
+            revenue: 320,
+          },
+          {
+            id: "3",
+            name: "Marc",
+            email: "marc@example.com",
+            status: "banni",
+            beatsCount: 0,
+            revenue: 0,
+          },
+        ]
+        setBeatmakers(data)
+      } catch (error) {
+        console.error("Erreur de chargement :", error)
+      } finally {
+        setLoading(false)
+      }
+    }
+
+    fetchData()
+  }, [])
+
+  const handleEdit = (id: string) => {
+    alert(`Modifier beatmaker ${id}`)
+  }
+
+  const handleBan = (id: string) => {
+    alert(`Bannir beatmaker ${id}`)
+  }
+
+  const handleDelete = (id: string) => {
+    const confirmDelete = confirm("Supprimer définitivement ce beatmaker ? Cette action est irréversible.")
+    if (confirmDelete) {
+      alert(`Beatmaker ${id} supprimé`)
+    }
+  }
+
+  return (
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <div className="flex items-center justify-between mb-8">
+        <h1 className="text-4xl font-bold text-primary">Gestion des Beatmakers</h1>
+        <Button variant="default" className="gap-2">
+          <PlusCircle className="w-5 h-5" />
+          Ajouter
+        </Button>
+      </div>
+
+      {loading ? (
+        <p className="text-gray-400">Chargement en cours...</p>
+      ) : (
+        <div className="overflow-x-auto rounded-lg border border-gray-700">
+          <table className="w-full text-left text-sm">
+            <thead className="bg-darkbg2 text-gray-300">
+              <tr>
+                <th className="px-4 py-3">Nom</th>
+                <th className="px-4 py-3">Email</th>
+                <th className="px-4 py-3">Statut</th>
+                <th className="px-4 py-3">Beats en ligne</th>
+                <th className="px-4 py-3">Revenu (€)</th>
+                <th className="px-4 py-3 text-center">Actions</th>
+              </tr>
+            </thead>
+            <tbody>
+              {beatmakers.map((b) => (
+                <tr key={b.id} className="border-t border-gray-700 hover:bg-darkbg2/40">
+                  <td className="px-4 py-3">{b.name}</td>
+                  <td className="px-4 py-3">{b.email}</td>
+                  <td className="px-4 py-3">
+                    <StatusBadge status={b.status} />
+                  </td>
+                  <td className="px-4 py-3">{b.beatsCount}</td>
+                  <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
+                  <td className="px-4 py-3 text-center">
+                    <ActionMenu
+                      onEdit={() => handleEdit(b.id)}
+                      onBan={() => handleBan(b.id)}
+                      onDelete={() => handleDelete(b.id)}
+                    />
+                  </td>
+                </tr>
+              ))}
+            </tbody>
+          </table>
+        </div>
+      )}
+    </section>
+  )
+}

commit 93554dc9fbfbaa3f4c80e7ee9c0dff65f5e08e1e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:33:08 2025 +0200

    Update page.tsx

diff --git a/src/app/admin/artists/page.tsx b/src/app/admin/artists/page.tsx
index eb7611b..17de56d 100644
--- a/src/app/admin/artists/page.tsx
+++ b/src/app/admin/artists/page.tsx
@@ -1,110 +1,113 @@
-"use client";
+'use client'
 
-import { useState } from "react";
-import { Button } from "@/components/ui/button";
-import { Badge } from "@/components/ui/badge";
-import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
-import { MoreHorizontal } from "lucide-react";
-import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
+import { useState } from 'react'
+import { Badge } from '@/components/ui/badge'
+import { Button } from '@/components/ui/button'
+import { Card, CardContent } from '@/components/ui/card'
+import { Input } from '@/components/ui/input'
+import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'
+import { MoreHorizontal, Plus } from 'lucide-react'
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu'
 
-const mockArtists = [
+const artists = [
   {
-    id: "artist_001",
-    name: "Léa Sound",
-    email: "lea@example.com",
-    beatsPurchased: 12,
-    revenue: "124,90 €",
-    status: "Actif",
+    id: '1',
+    name: 'Luna Waves',
+    email: 'luna@example.com',
+    status: 'active',
+    date: '2025-07-18'
   },
   {
-    id: "artist_002",
-    name: "Flowmatic",
-    email: "flow@example.com",
-    beatsPurchased: 4,
-    revenue: "44,50 €",
-    status: "Suspendu",
+    id: '2',
+    name: 'Neo Black',
+    email: 'neo@example.com',
+    status: 'inactive',
+    date: '2025-06-30'
   },
-];
+  {
+    id: '3',
+    name: 'Sonic Rain',
+    email: 'sonic@example.com',
+    status: 'active',
+    date: '2025-07-15'
+  }
+]
 
 export default function AdminArtistsPage() {
-  const [artists, setArtists] = useState(mockArtists);
-
-  const handleSuspend = (id: string) => {
-    setArtists((prev) =>
-      prev.map((artist) =>
-        artist.id === id ? { ...artist, status: "Suspendu" } : artist
-      )
-    );
-  };
+  const [search, setSearch] = useState('')
 
-  const handleActivate = (id: string) => {
-    setArtists((prev) =>
-      prev.map((artist) =>
-        artist.id === id ? { ...artist, status: "Actif" } : artist
-      )
-    );
-  };
+  const filteredArtists = artists.filter((artist) =>
+    artist.name.toLowerCase().includes(search.toLowerCase())
+  )
 
   return (
     <div className="p-6">
       <div className="flex items-center justify-between mb-6">
-        <h1 className="text-2xl font-bold">Gestion des Artistes</h1>
-        <Button variant="default">Ajouter un artiste</Button>
+        <h1 className="text-2xl font-bold">Gestion des artistes</h1>
+        <Button>
+          <Plus className="mr-2 h-4 w-4" />
+          Ajouter un artiste
+        </Button>
       </div>
-      <Table>
-        <TableHeader>
-          <TableRow>
-            <TableHead>Nom</TableHead>
-            <TableHead>Email</TableHead>
-            <TableHead className="text-center">Beats achetés</TableHead>
-            <TableHead className="text-center">Revenus</TableHead>
-            <TableHead className="text-center">Statut</TableHead>
-            <TableHead className="text-right">Actions</TableHead>
-          </TableRow>
-        </TableHeader>
-        <TableBody>
-          {artists.map((artist) => (
-            <TableRow key={artist.id}>
-              <TableCell>{artist.name}</TableCell>
-              <TableCell>{artist.email}</TableCell>
-              <TableCell className="text-center">{artist.beatsPurchased}</TableCell>
-              <TableCell className="text-center">{artist.revenue}</TableCell>
-              <TableCell className="text-center">
-                <Badge variant={artist.status === "Actif" ? "success" : "destructive"}>
-                  {artist.status}
-                </Badge>
-              </TableCell>
-              <TableCell className="text-right">
-                <DropdownMenu>
-                  <DropdownMenuTrigger asChild>
-                    <Button variant="ghost" size="icon">
-                      <MoreHorizontal className="w-4 h-4" />
-                    </Button>
-                  </DropdownMenuTrigger>
-                  <DropdownMenuContent>
-                    <DropdownMenuLabel>Actions</DropdownMenuLabel>
-                    <DropdownMenuItem onClick={() => alert("Voir profil de " + artist.name)}>
-                      Voir profil
-                    </DropdownMenuItem>
-                    <DropdownMenuItem
-                      onClick={() =>
-                        artist.status === "Actif"
-                          ? handleSuspend(artist.id)
-                          : handleActivate(artist.id)
-                      }
+
+      <Card className="mb-6">
+        <CardContent className="p-4">
+          <Input
+            placeholder="Rechercher un artiste..."
+            value={search}
+            onChange={(e) => setSearch(e.target.value)}
+            className="w-full md:w-1/3"
+          />
+        </CardContent>
+      </Card>
+
+      <Card>
+        <CardContent className="p-0">
+          <Table>
+            <TableHeader>
+              <TableRow>
+                <TableHead>Nom</TableHead>
+                <TableHead>Email</TableHead>
+                <TableHead>Statut</TableHead>
+                <TableHead>Date d’inscription</TableHead>
+                <TableHead className="text-right">Actions</TableHead>
+              </TableRow>
+            </TableHeader>
+            <TableBody>
+              {filteredArtists.map((artist) => (
+                <TableRow key={artist.id}>
+                  <TableCell>{artist.name}</TableCell>
+                  <TableCell>{artist.email}</TableCell>
+                  <TableCell>
+                    <Badge
+                      variant={artist.status === 'active' ? 'default' : 'destructive'}
                     >
-                      {artist.status === "Actif" ? "Suspendre" : "Réactiver"}
-                    </DropdownMenuItem>
-                    <DropdownMenuItem onClick={() => alert("Suppression de " + artist.name)}>
-                      Supprimer
-                    </DropdownMenuItem>
-                  </DropdownMenuContent>
-                </DropdownMenu>
-              </TableCell>
-            </TableRow>
-          ))}
-        </TableBody>
-      </Table>
+                      {artist.status === 'active' ? 'Actif' : 'Inactif'}
+                    </Badge>
+                  </TableCell>
+                  <TableCell>{artist.date}</TableCell>
+                  <TableCell className="text-right">
+                    <DropdownMenu>
+                      <DropdownMenuTrigger asChild>
+                        <Button variant="ghost" className="h-8 w-8 p-0">
+                          <MoreHorizontal className="h-4 w-4" />
+                        </Button>
+                      </DropdownMenuTrigger>
+                      <DropdownMenuContent align="end">
+                        <DropdownMenuItem>Modifier</DropdownMenuItem>
+                        <DropdownMenuItem>Suspension</DropdownMenuItem>
+                        <DropdownMenuItem className="text-red-500">
+                          Supprimer
+                        </DropdownMenuItem>
+                      </DropdownMenuContent>
+                    </DropdownMenu>
+                  </TableCell>
+                </TableRow>
+              ))}
+            </TableBody>
+          </Table>
+        </CardContent>
+      </Card>
     </div>
-  );
+  )
 }

commit cd784da09cf94d62551e74f8f454cc0c3e8ba96d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:34:26 2025 +0200

    Update page.tsx

diff --git a/src/app/admin/dashboard/page.tsx b/src/app/admin/dashboard/page.tsx
index 3db32fe..bd2f6a3 100644
--- a/src/app/admin/dashboard/page.tsx
+++ b/src/app/admin/dashboard/page.tsx
@@ -1,102 +1,117 @@
-"use client";
+'use client'
 
-import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
-import { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from "recharts";
-import { Badge } from "@/components/ui/badge";
-import { Flame, User, Music, Euro } from "lucide-react";
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { DollarSign, Music, User, ShieldAlert } from 'lucide-react'
+import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts'
 
-const kpis = [
+const stats = [
   {
-    title: "Revenus totaux",
-    value: "12 340,50 €",
-    icon: <Euro className="w-5 h-5 text-pink-500" />,
+    icon: <User className="w-5 h-5 text-pink-500" />,
+    label: 'Nouveaux inscrits',
+    value: 143
   },
   {
-    title: "Beats vendus",
-    value: "328",
     icon: <Music className="w-5 h-5 text-purple-500" />,
+    label: 'Beats en ligne',
+    value: 862
   },
   {
-    title: "Nouveaux artistes",
-    value: "+45",
-    icon: <User className="w-5 h-5 text-green-500" />,
+    icon: <DollarSign className="w-5 h-5 text-green-500" />,
+    label: 'Revenus mensuels',
+    value: '4 327€'
   },
   {
-    title: "Tendance",
-    value: "+18% ce mois",
-    icon: <Flame className="w-5 h-5 text-orange-500" />,
-  },
-];
+    icon: <ShieldAlert className="w-5 h-5 text-red-500" />,
+    label: 'Modération urgente',
+    value: 3
+  }
+]
+
+const data = [
+  { name: 'Jan', revenue: 1200 },
+  { name: 'Fév', revenue: 2100 },
+  { name: 'Mar', revenue: 800 },
+  { name: 'Avr', revenue: 1600 },
+  { name: 'Mai', revenue: 2500 },
+  { name: 'Juin', revenue: 2000 },
+  { name: 'Juil', revenue: 4327 }
+]
 
-const revenueData = [
-  { name: "Jan", revenue: 500 },
-  { name: "Fév", revenue: 1100 },
-  { name: "Mar", revenue: 900 },
-  { name: "Avr", revenue: 2000 },
-  { name: "Mai", revenue: 1850 },
-  { name: "Juin", revenue: 2340 },
-  { name: "Juil", revenue: 1620 },
-];
+const recentSales = [
+  {
+    artist: 'Luna Waves',
+    beat: 'Midnight Flow',
+    amount: '39,90 €',
+    date: '22/07/2025'
+  },
+  {
+    artist: 'Neo Black',
+    beat: 'Trap Soul Vibes',
+    amount: '14,90 €',
+    date: '21/07/2025'
+  },
+  {
+    artist: 'Sonic Rain',
+    beat: 'Sunset Dream',
+    amount: '79,90 €',
+    date: '20/07/2025'
+  }
+]
 
 export default function AdminDashboardPage() {
   return (
     <div className="p-6 space-y-6">
-      <h1 className="text-2xl font-bold">Tableau de bord</h1>
+      <h1 className="text-2xl font-bold">Tableau de bord administrateur</h1>
 
-      {/* KPIs */}
-      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
-        {kpis.map((kpi, index) => (
-          <Card key={index} className="shadow-md">
-            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
-              <CardTitle className="text-sm font-medium">{kpi.title}</CardTitle>
-              {kpi.icon}
+      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
+        {stats.map((stat, index) => (
+          <Card key={index}>
+            <CardHeader className="flex flex-row items-center justify-between pb-2">
+              <CardTitle className="text-sm font-medium">{stat.label}</CardTitle>
+              {stat.icon}
             </CardHeader>
             <CardContent>
-              <div className="text-2xl font-bold">{kpi.value}</div>
+              <div className="text-2xl font-bold">{stat.value}</div>
             </CardContent>
           </Card>
         ))}
       </div>
 
-      {/* Graphique */}
-      <Card className="shadow-md">
+      <Card>
         <CardHeader>
           <CardTitle>Revenus mensuels</CardTitle>
         </CardHeader>
         <CardContent>
-          <ResponsiveContainer width="100%" height={250}>
-            <BarChart data={revenueData}>
-              <XAxis dataKey="name" stroke="#888888" />
-              <YAxis stroke="#888888" />
+          <ResponsiveContainer width="100%" height={300}>
+            <LineChart data={data}>
+              <XAxis dataKey="name" stroke="#8884d8" />
+              <YAxis stroke="#8884d8" />
               <Tooltip />
-              <Bar dataKey="revenue" fill="#ec4899" radius={[4, 4, 0, 0]} />
-            </BarChart>
+              <Line type="monotone" dataKey="revenue" stroke="#ff4c8b" strokeWidth={2} />
+            </LineChart>
           </ResponsiveContainer>
         </CardContent>
       </Card>
 
-      {/* Section Ventes récentes */}
-      <Card className="shadow-md">
+      <Card>
         <CardHeader>
           <CardTitle>Ventes récentes</CardTitle>
         </CardHeader>
         <CardContent className="space-y-4">
-          <div className="flex items-center justify-between">
-            <div>
-              <p className="text-sm font-medium">"Drill Night" par BeatX</p>
-              <p className="text-xs text-muted-foreground">19 juillet 2025</p>
-            </div>
-            <Badge variant="outline">29,90 €</Badge>
-          </div>
-          <div className="flex items-center justify-between">
-            <div>
-              <p className="text-sm font-medium">"Melancholy" par DarkTune</p>
-              <p className="text-xs text-muted-foreground">18 juillet 2025</p>
+          {recentSales.map((sale, index) => (
+            <div key={index} className="flex items-center justify-between text-sm">
+              <div>
+                <div className="font-medium">{sale.artist}</div>
+                <div className="text-muted-foreground">{sale.beat}</div>
+              </div>
+              <div className="text-right">
+                <div className="font-semibold">{sale.amount}</div>
+                <div className="text-muted-foreground text-xs">{sale.date}</div>
+              </div>
             </div>
-            <Badge variant="outline">14,90 €</Badge>
-          </div>
+          ))}
         </CardContent>
       </Card>
     </div>
-  );
+  )
 }

commit 139afb25db982440d80866097684f6678c95454c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:35:27 2025 +0200

    Update page.tsx

diff --git a/app/admin/artists/page.tsx b/app/admin/artists/page.tsx
index be0b48a..285654c 100644
--- a/app/admin/artists/page.tsx
+++ b/app/admin/artists/page.tsx
@@ -1,107 +1,75 @@
-"use client";
+"use client"
 
-import { useState, useEffect } from "react";
-import { Button } from "@/components/ui/button";
-import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
-import { MoreHorizontal } from "lucide-react";
+import React from "react"
+import { StatusBadge } from "@/components/ui/status-badge"
+import { ActionMenu } from "@/components/ui/action-menu"
 
-interface Artist {
-  id: string;
-  name: string;
-  email: string;
-  status: "active" | "pending" | "banned";
-  createdAt: string;
+type Artist = {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "en attente" | "banni"
+  purchasesCount: number
+  spent: number
 }
 
-const STATUS_BADGES = {
-  active: "bg-green-600 text-white",
-  pending: "bg-yellow-500 text-black",
-  banned: "bg-red-600 text-white",
-};
-
-export default function AdminArtists() {
-  const [artists, setArtists] = useState<Artist[]>([]);
-
-  useEffect(() => {
-    // Mock fetch artists
-    setArtists([
-      { id: "1", name: "Alice", email: "alice@example.com", status: "active", createdAt: "2025-06-10" },
-      { id: "2", name: "Bob", email: "bob@example.com", status: "pending", createdAt: "2025-06-15" },
-      { id: "3", name: "Charlie", email: "charlie@example.com", status: "banned", createdAt: "2025-05-22" },
-    ]);
-  }, []);
+const dummyArtists: Artist[] = [
+  { id: "1", name: "Laura", email: "laura@example.com", status: "actif", purchasesCount: 8, spent: 250 },
+  { id: "2", name: "David", email: "david@example.com", status: "en attente", purchasesCount: 0, spent: 0 },
+  { id: "3", name: "Sarah", email: "sarah@example.com", status: "banni", purchasesCount: 3, spent: 80 },
+]
 
+export default function AdminArtistsPage() {
+  const handleEdit = (id: string) => {
+    alert(`Éditer artiste ${id}`)
+  }
+  const handleBan = (id: string) => {
+    alert(`Bannir artiste ${id}`)
+  }
   const handleDelete = (id: string) => {
-    if (confirm("Confirmez-vous la suppression de cet artiste ? Cette action est irréversible.")) {
-      setArtists((prev) => prev.filter((a) => a.id !== id));
+    if (confirm("Êtes-vous sûr de vouloir supprimer cet artiste ? Cette action est irréversible.")) {
+      alert(`Artiste ${id} supprimé`)
     }
-  };
+  }
 
   return (
-    <main className="pt-20 px-6 max-w-7xl mx-auto bg-[#121212] min-h-screen text-white font-poppins">
-      <div className="flex justify-between items-center mb-8">
-        <h1 className="text-3xl font-bold text-pink-500">Gestion des Artistes</h1>
-        <Button>Ajouter un artiste</Button>
-      </div>
+    <section className="min-h-screen bg-darkbg px-6 py-12 text-white font-poppins">
+      <h1 className="text-4xl font-bold text-primary mb-8">Gestion des Artistes</h1>
 
-      <div className="overflow-x-auto bg-gray-900 rounded-lg shadow-md">
-        <table className="w-full table-auto text-left">
-          <thead className="border-b border-gray-700">
+      <div className="overflow-x-auto rounded-lg border border-gray-700">
+        <table className="w-full text-left text-sm">
+          <thead className="bg-darkbg2 text-gray-300">
             <tr>
-              <th className="py-3 px-4">Nom</th>
-              <th className="py-3 px-4">Email</th>
-              <th className="py-3 px-4">Statut</th>
-              <th className="py-3 px-4">Inscrit le</th>
-              <th className="py-3 px-4">Actions</th>
+              <th className="px-4 py-3">Nom</th>
+              <th className="px-4 py-3">Email</th>
+              <th className="px-4 py-3">Status</th>
+              <th className="px-4 py-3">Achats</th>
+              <th className="px-4 py-3">Total dépensé (€)</th>
+              <th className="px-4 py-3">Actions</th>
             </tr>
           </thead>
           <tbody>
-            {artists.map(({ id, name, email, status, createdAt }) => (
-              <tr
-                key={id}
-                className="border-b border-gray-800 hover:bg-gray-800 transition"
-              >
-                <td className="py-3 px-4">{name}</td>
-                <td className="py-3 px-4">{email}</td>
-                <td className="py-3 px-4">
-                  <span className={`inline-block px-3 py-1 rounded-full text-sm font-semibold ${STATUS_BADGES[status]}`}>
-                    {status.toUpperCase()}
-                  </span>
+            {dummyArtists.map((a) => (
+              <tr key={a.id} className="border-t border-gray-700 hover:bg-darkbg2/50">
+                <td className="px-4 py-3">{a.name}</td>
+                <td className="px-4 py-3">{a.email}</td>
+                <td className="px-4 py-3">
+                  <StatusBadge status={a.status} />
                 </td>
-                <td className="py-3 px-4">{new Date(createdAt).toLocaleDateString()}</td>
-                <td className="py-3 px-4">
-                  <DropdownMenu>
-                    <DropdownMenuTrigger asChild>
-                      <Button variant="ghost" className="h-8 w-8 p-0">
-                        <MoreHorizontal className="h-5 w-5" />
-                        <span className="sr-only">Actions</span>
-                      </Button>
-                    </DropdownMenuTrigger>
-                    <DropdownMenuContent align="end">
-                      <DropdownMenuItem onClick={() => alert(`Modifier l'artiste ${name}`)}>
-                        Modifier
-                      </DropdownMenuItem>
-                      <DropdownMenuItem onClick={() => handleDelete(id)}>
-                        Supprimer
-                      </DropdownMenuItem>
-                      <DropdownMenuItem onClick={() => alert(`Voir profil ${name}`)}>
-                        Voir profil
-                      </DropdownMenuItem>
-                    </DropdownMenuContent>
-                  </DropdownMenu>
+                <td className="px-4 py-3">{a.purchasesCount}</td>
+                <td className="px-4 py-3">{a.spent.toFixed(2)}</td>
+                <td className="px-4 py-3">
+                  <ActionMenu
+                    onEdit={() => handleEdit(a.id)}
+                    onBan={() => handleBan(a.id)}
+                    onDelete={() => handleDelete(a.id)}
+                  />
                 </td>
               </tr>
             ))}
-            {artists.length === 0 && (
-              <tr>
-                <td colSpan={5} className="py-4 text-center text-gray-500">
-                  Aucun artiste trouvé.
-                </td>
-              </tr>
-            )}
           </tbody>
         </table>
       </div>
-    </main>
-  );
+    </section>
+  )
 }

commit c4251dfa3b17ecbdcb5edcbb6d58d88ee8719e77
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:37:49 2025 +0200

    Create status-badge.tsx

diff --git a/components/ui/status-badge.tsx b/components/ui/status-badge.tsx
new file mode 100644
index 0000000..9b476cd
--- /dev/null
+++ b/components/ui/status-badge.tsx
@@ -0,0 +1,23 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+type Status = "actif" | "en attente" | "banni"
+
+const statusColors: Record<Status, string> = {
+  actif: "bg-green-600 text-white",
+  "en attente": "bg-yellow-500 text-black",
+  banni: "bg-red-600 text-white",
+}
+
+export function StatusBadge({ status }: { status: Status }) {
+  return (
+    <span
+      className={cn(
+        "inline-block rounded-full px-3 py-1 text-xs font-semibold capitalize",
+        statusColors[status]
+      )}
+    >
+      {status}
+    </span>
+  )
+}

commit d888e2061f88dee0010ae5d23122194cfb7e1712
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:38:30 2025 +0200

    Create action-menu.tsx

diff --git a/components/ui/action-menu.tsx b/components/ui/action-menu.tsx
new file mode 100644
index 0000000..5ffd576
--- /dev/null
+++ b/components/ui/action-menu.tsx
@@ -0,0 +1,60 @@
+import React from "react"
+import { MoreHorizontal, Edit, Ban, Trash2 } from "lucide-react"
+
+export function ActionMenu({
+  onEdit,
+  onBan,
+  onDelete,
+}: {
+  onEdit: () => void
+  onBan: () => void
+  onDelete: () => void
+}) {
+  const [open, setOpen] = React.useState(false)
+
+  return (
+    <div className="relative inline-block text-left">
+      <button
+        onClick={() => setOpen(!open)}
+        className="p-2 rounded-md hover:bg-gray-700 transition-colors"
+      >
+        <MoreHorizontal className="w-5 h-5 text-white" />
+      </button>
+
+      {open && (
+        <div className="absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-darkbg2 shadow-lg ring-1 ring-black ring-opacity-5">
+          <button
+            onClick={() => {
+              setOpen(false)
+              onEdit()
+            }}
+            className="flex items-center w-full px-4 py-2 text-sm hover:bg-gray-700"
+          >
+            <Edit className="w-4 h-4 mr-2" />
+            Modifier
+          </button>
+          <button
+            onClick={() => {
+              setOpen(false)
+              onBan()
+            }}
+            className="flex items-center w-full px-4 py-2 text-sm hover:bg-gray-700"
+          >
+            <Ban className="w-4 h-4 mr-2" />
+            Bannir
+          </button>
+          <button
+            onClick={() => {
+              setOpen(false)
+              onDelete()
+            }}
+            className="flex items-center w-full px-4 py-2 text-sm hover:bg-gray-700 text-red-500"
+          >
+            <Trash2 className="w-4 h-4 mr-2" />
+            Supprimer
+          </button>
+        </div>
+      )}
+    </div>
+  )
+}

commit 61c97a2a89a752f35c0b58a395fe1d119d9a1a89
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 10:39:51 2025 +0200

    Update page.tsx

diff --git a/app/admin/beatmakers/page.tsx b/app/admin/beatmakers/page.tsx
index 51ed435..f4f0c61 100644
--- a/app/admin/beatmakers/page.tsx
+++ b/app/admin/beatmakers/page.tsx
@@ -1,207 +1,103 @@
-"use client";
-
-import { useState, useEffect } from "react";
-
-type BeatmakerStatus = "actif" | "en attente" | "banni";
-
-interface Beatmaker {
-  id: string;
-  name: string;
-  email: string;
-  status: BeatmakerStatus;
-  beatsCount: number;
-  revenue: number;
-}
-
-const STATUS_CLASSES: Record<BeatmakerStatus, string> = {
-  actif: "bg-green-600 text-white",
-  "en attente": "bg-yellow-500 text-black",
-  banni: "bg-red-600 text-white",
-};
-
-// Composant Badge simple
-function StatusBadge({ status }: { status: BeatmakerStatus }) {
-  return (
-    <span
-      className={`inline-block px-3 py-1 rounded-full text-sm font-semibold ${STATUS_CLASSES[status]}`}
-    >
-      {status.toUpperCase()}
-    </span>
-  );
-}
-
-// Composant modale simple pour confirmation
-function ConfirmModal({
-  message,
-  onConfirm,
-  onCancel,
-}: {
-  message: string;
-  onConfirm: () => void;
-  onCancel: () => void;
-}) {
-  return (
-    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50">
-      <div className="bg-gray-900 p-6 rounded-lg max-w-sm w-full text-white">
-        <p className="mb-4">{message}</p>
-        <div className="flex justify-end space-x-4">
-          <button
-            onClick={onCancel}
-            className="px-4 py-2 bg-gray-700 rounded hover:bg-gray-600"
-          >
-            Annuler
-          </button>
-          <button
-            onClick={onConfirm}
-            className="px-4 py-2 bg-pink-600 rounded hover:bg-pink-500"
-          >
-            Confirmer
-          </button>
-        </div>
-      </div>
-    </div>
-  );
+"use client"
+
+import { useEffect, useState } from "react"
+import { StatusBadge } from "@/components/ui/status-badge"
+import { ActionMenu } from "@/components/ui/action-menu"
+
+type Beatmaker = {
+  id: string
+  nom: string
+  email: string
+  abonnements: string[]
+  status: "actif" | "en attente" | "banni"
 }
 
 export default function AdminBeatmakersPage() {
-  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>([]);
-  const [loading, setLoading] = useState(true);
-  const [modalOpen, setModalOpen] = useState(false);
-  const [beatmakerToDelete, setBeatmakerToDelete] = useState<string | null>(null);
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>([])
 
   useEffect(() => {
-    // Simuler fetch API
-    setTimeout(() => {
-      setBeatmakers([
-        {
-          id: "1",
-          name: "Jay Jay",
-          email: "jay@example.com",
-          status: "actif",
-          beatsCount: 12,
-          revenue: 1200,
-        },
-        {
-          id: "2",
-          name: "Sophie",
-          email: "sophie@example.com",
-          status: "en attente",
-          beatsCount: 5,
-          revenue: 450,
-        },
-        {
-          id: "3",
-          name: "Marc",
-          email: "marc@example.com",
-          status: "banni",
-          beatsCount: 0,
-          revenue: 0,
-        },
-      ]);
-      setLoading(false);
-    }, 700);
-  }, []);
-
-  function openDeleteModal(id: string) {
-    setBeatmakerToDelete(id);
-    setModalOpen(true);
+    // Appel API à remplacer par une vraie API plus tard
+    setBeatmakers([
+      {
+        id: "1",
+        nom: "DrillBeatz",
+        email: "drill@example.com",
+        abonnements: ["Or", "Distribution"],
+        status: "actif",
+      },
+      {
+        id: "2",
+        nom: "TrapKing",
+        email: "trap@example.com",
+        abonnements: ["Gratuit"],
+        status: "en attente",
+      },
+      {
+        id: "3",
+        nom: "808Master",
+        email: "master@example.com",
+        abonnements: ["Diamant Plus"],
+        status: "banni",
+      },
+    ])
+  }, [])
+
+  const handleEdit = (id: string) => {
+    console.log("Modifier beatmaker", id)
   }
 
-  function confirmDelete() {
-    if (!beatmakerToDelete) return;
-    setBeatmakers((prev) => prev.filter((b) => b.id !== beatmakerToDelete));
-    setModalOpen(false);
-    setBeatmakerToDelete(null);
-    // TODO: appeler backend suppression ici
+  const handleBan = (id: string) => {
+    console.log("Bannir beatmaker", id)
   }
 
-  function cancelDelete() {
-    setModalOpen(false);
-    setBeatmakerToDelete(null);
+  const handleDelete = (id: string) => {
+    console.log("Supprimer beatmaker", id)
   }
 
-  function handleEdit(id: string) {
-    alert(`Éditer beatmaker ${id}`);
-    // TODO: rediriger vers page édition
-  }
-
-  function handleBan(id: string) {
-    alert(`Bannir beatmaker ${id}`);
-    // TODO: appeler backend bannissement
-  }
-
-  if (loading) return <p className="p-6 text-white">Chargement des beatmakers...</p>;
-
   return (
-    <section className="min-h-screen bg-[#121212] px-6 py-12 text-white font-poppins max-w-7xl mx-auto">
-      <h1 className="text-4xl font-bold text-pink-500 mb-8">Gestion des Beatmakers</h1>
-
+    <div className="p-6">
+      <h1 className="text-2xl font-bold mb-4">Gestion des Beatmakers</h1>
       <div className="overflow-x-auto rounded-lg border border-gray-700">
-        <table className="w-full text-left text-sm">
-          <thead className="bg-gray-900 text-gray-300">
+        <table className="min-w-full text-sm text-left">
+          <thead className="bg-darkbg2 text-gray-300">
             <tr>
-              <th className="px-4 py-3">Nom</th>
-              <th className="px-4 py-3">Email</th>
-              <th className="px-4 py-3">Statut</th>
-              <th className="px-4 py-3">Beats en ligne</th>
-              <th className="px-4 py-3">Revenu (€)</th>
-              <th className="px-4 py-3">Actions</th>
+              <th className="px-4 py-2">Nom</th>
+              <th className="px-4 py-2">Email</th>
+              <th className="px-4 py-2">Abonnements</th>
+              <th className="px-4 py-2">Statut</th>
+              <th className="px-4 py-2 text-right">Actions</th>
             </tr>
           </thead>
           <tbody>
-            {beatmakers.length === 0 ? (
-              <tr>
-                <td colSpan={6} className="py-4 text-center text-gray-500">
-                  Aucun beatmaker trouvé.
+            {beatmakers.map((b) => (
+              <tr key={b.id} className="border-t border-gray-700">
+                <td className="px-4 py-2">{b.nom}</td>
+                <td className="px-4 py-2">{b.email}</td>
+                <td className="px-4 py-2">
+                  {b.abonnements.map((a, i) => (
+                    <span
+                      key={i}
+                      className="inline-block bg-purple-700 text-white text-xs px-2 py-1 rounded-full mr-2"
+                    >
+                      {a}
+                    </span>
+                  ))}
+                </td>
+                <td className="px-4 py-2">
+                  <StatusBadge status={b.status} />
+                </td>
+                <td className="px-4 py-2 text-right">
+                  <ActionMenu
+                    onEdit={() => handleEdit(b.id)}
+                    onBan={() => handleBan(b.id)}
+                    onDelete={() => handleDelete(b.id)}
+                  />
                 </td>
               </tr>
-            ) : (
-              beatmakers.map((b) => (
-                <tr
-                  key={b.id}
-                  className="border-t border-gray-700 hover:bg-gray-800 transition"
-                >
-                  <td className="px-4 py-3">{b.name}</td>
-                  <td className="px-4 py-3">{b.email}</td>
-                  <td className="px-4 py-3">
-                    <StatusBadge status={b.status} />
-                  </td>
-                  <td className="px-4 py-3">{b.beatsCount}</td>
-                  <td className="px-4 py-3">{b.revenue.toFixed(2)}</td>
-                  <td className="px-4 py-3 space-x-2">
-                    <button
-                      onClick={() => handleEdit(b.id)}
-                      className="px-3 py-1 rounded bg-pink-600 hover:bg-pink-500 transition"
-                    >
-                      Éditer
-                    </button>
-                    <button
-                      onClick={() => handleBan(b.id)}
-                      className="px-3 py-1 rounded bg-yellow-500 hover:bg-yellow-400 text-black transition"
-                    >
-                      Bannir
-                    </button>
-                    <button
-                      onClick={() => openDeleteModal(b.id)}
-                      className="px-3 py-1 rounded bg-red-600 hover:bg-red-500 transition"
-                    >
-                      Supprimer
-                    </button>
-                  </td>
-                </tr>
-              ))
-            )}
+            ))}
           </tbody>
         </table>
       </div>
-
-      {modalOpen && (
-        <ConfirmModal
-          message="Êtes-vous sûr de vouloir supprimer ce beatmaker ? Cette action est irréversible."
-          onConfirm={confirmDelete}
-          onCancel={cancelDelete}
-        />
-      )}
-    </section>
-  );
+    </div>
+  )
 }

commit c93c48feb57153b74fa24556f0b627f62cdf820e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:51:58 2025 +0200

    Create Navbar.tsx

diff --git a/src/components/ui/Navbar.tsx b/src/components/ui/Navbar.tsx
new file mode 100644
index 0000000..843f193
--- /dev/null
+++ b/src/components/ui/Navbar.tsx
@@ -0,0 +1,57 @@
+'use client'
+
+import Link from 'next/link'
+import { usePathname } from 'next/navigation'
+import { cn } from '@/lib/utils'
+import { Button } from '@/components/ui/button'
+import { Menu, X } from 'lucide-react'
+import { useState } from 'react'
+
+export default function Navbar() {
+  const pathname = usePathname()
+  const [open, setOpen] = useState(false)
+
+  const navLinks = [
+    { href: '/', label: 'Accueil' },
+    { href: '/beats', label: 'Beats' },
+    { href: '/pricing', label: 'Tarifs' },
+    { href: '/about', label: 'À propos' },
+    { href: '/help', label: 'Aide' },
+  ]
+
+  return (
+    <nav className="w-full px-4 md:px-8 py-4 border-b border-white/10 bg-[#121212] flex justify-between items-center z-50 relative">
+      <Link href="/" className="text-xl font-bold text-white">BeatsMarket</Link>
+
+      <div className="md:hidden">
+        <Button
+          variant="ghost"
+          size="icon"
+          onClick={() => setOpen(!open)}
+          className="text-white"
+        >
+          {open ? <X /> : <Menu />}
+        </Button>
+      </div>
+
+      <div className={cn(
+        'flex-col md:flex-row md:flex md:gap-6 md:static absolute top-full left-0 w-full md:w-auto bg-[#121212] transition-all duration-300 overflow-hidden',
+        open ? 'flex' : 'hidden'
+      )}>
+        {navLinks.map(link => (
+          <Link
+            key={link.href}
+            href={link.href}
+            onClick={() => setOpen(false)}
+            className={cn(
+              'block px-6 py-3 md:px-0 md:py-0 text-white font-medium hover:text-pink-500 transition',
+              pathname === link.href && 'text-pink-500'
+            )}
+          >
+            {link.label}
+          </Link>
+        ))}
+      </div>
+    </nav>
+  )
+}

commit 5b433df271d6a69ba5503f27dedd83552e338253
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:53:36 2025 +0200

    Update header.tsx

diff --git a/src/components/ui/header.tsx b/src/components/ui/header.tsx
index 0e3486b..72c0a1a 100644
--- a/src/components/ui/header.tsx
+++ b/src/components/ui/header.tsx
@@ -1,18 +1,32 @@
+'use client'
+
+import Image from 'next/image'
+import { Button } from '@/components/ui/button'
 import Link from 'next/link'
 
 export default function Header() {
   return (
-    <header className="bg-[#1e1e2f] text-white p-4 flex justify-between items-center">
-      <Link href="/" className="text-2xl font-bold text-pink-500">
-        BeatsMarket
-      </Link>
-      <nav className="space-x-6">
-        <Link href="/" className="hover:text-pink-400">Accueil</Link>
-        <Link href="/about" className="hover:text-pink-400">À Propos</Link>
-        <Link href="/pricing" className="hover:text-pink-400">Tarifs</Link>
-        <Link href="/terms" className="hover:text-pink-400">CGV</Link>
-        <Link href="/help" className="hover:text-pink-400">Aide</Link>
-      </nav>
+    <header className="w-full text-center py-20 px-4 md:px-8 bg-gradient-to-b from-[#121212] to-black">
+      <div className="max-w-4xl mx-auto">
+        <h1 className="text-4xl md:text-6xl font-bold text-white mb-4">
+          Libère ton potentiel musical.
+        </h1>
+        <p className="text-lg md:text-xl text-gray-300 mb-8">
+          BeatsMarket est la plateforme ultime pour les artistes et beatmakers. Trouve, vends et distribue tes beats sans limites.
+        </p>
+        <div className="flex flex-col sm:flex-row justify-center gap-4">
+          <Link href="/beats">
+            <Button size="lg" className="text-white bg-pink-600 hover:bg-pink-700">
+              Explorer les Beats
+            </Button>
+          </Link>
+          <Link href="/pricing">
+            <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-black">
+              Voir les Offres
+            </Button>
+          </Link>
+        </div>
+      </div>
     </header>
   )
 }

commit d0946ba4a41d223b6959e460bfdf96e685997add
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:54:58 2025 +0200

    Create Hero.tsx

diff --git a/src/components/ui/Hero.tsx b/src/components/ui/Hero.tsx
new file mode 100644
index 0000000..e98a5d5
--- /dev/null
+++ b/src/components/ui/Hero.tsx
@@ -0,0 +1,25 @@
+'use client'
+
+import Image from 'next/image'
+import { Button } from '@/components/ui/button'
+import Link from 'next/link'
+
+export default function Hero() {
+  return (
+    <section className="relative bg-gradient-to-b from-[#1f1f1f] to-[#121212] py-24 px-4 md:px-8 text-center text-white">
+      <div className="max-w-5xl mx-auto">
+        <h2 className="text-5xl font-extrabold mb-6">
+          Trouve le beat parfait pour ta musique
+        </h2>
+        <p className="text-lg md:text-xl mb-10 max-w-3xl mx-auto text-gray-300">
+          BeatsMarket connecte les artistes et les beatmakers du monde entier, avec un moteur de recherche IA puissant et une boutique unique.
+        </p>
+        <Link href="/beats">
+          <Button size="lg" className="bg-pink-600 hover:bg-pink-700 text-white">
+            Découvrir les Beats
+          </Button>
+        </Link>
+      </div>
+    </section>
+  )
+}

commit b8da9908b279346dec8e88cc5a44f428d845b45f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:56:20 2025 +0200

    Create CallToAction.tsx

diff --git a/src/components/ui/CallToAction.tsx b/src/components/ui/CallToAction.tsx
new file mode 100644
index 0000000..661198f
--- /dev/null
+++ b/src/components/ui/CallToAction.tsx
@@ -0,0 +1,22 @@
+'use client'
+
+import { Button } from '@/components/ui/button'
+import Link from 'next/link'
+
+export default function CallToAction() {
+  return (
+    <section className="bg-[#1a1a1a] py-16 px-4 text-center">
+      <h3 className="text-3xl font-bold text-white mb-6">
+        Rejoins la communauté BeatsMarket dès maintenant !
+      </h3>
+      <p className="text-gray-400 mb-8 max-w-xl mx-auto">
+        Que tu sois beatmaker ou artiste, découvre des outils innovants pour booster ta carrière musicale.
+      </p>
+      <Link href="/signup">
+        <Button size="lg" className="bg-pink-600 hover:bg-pink-700 text-white">
+          Inscription gratuite
+        </Button>
+      </Link>
+    </section>
+  )
+}

commit a5de20dd3763b3fd4a84b8fa6eecfab81d1bc1a6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:57:47 2025 +0200

    Update footer.tsx

diff --git a/src/components/ui/footer.tsx b/src/components/ui/footer.tsx
index 596ead7..82a00ec 100644
--- a/src/components/ui/footer.tsx
+++ b/src/components/ui/footer.tsx
@@ -1,14 +1,24 @@
+'use client'
+
 import Link from 'next/link'
 
 export default function Footer() {
   return (
-    <footer className="bg-[#121212] text-gray-400 p-6 mt-12 text-center text-sm">
-      <p>© 2025 BeatsMarket. Tous droits réservés.</p>
-      <nav className="mt-2 space-x-4">
-        <Link href="/terms" className="hover:text-pink-400">Conditions Générales</Link>
-        <Link href="/privacy" className="hover:text-pink-400">Politique de confidentialité</Link>
-        <Link href="/contact" className="hover:text-pink-400">Contact</Link>
-      </nav>
+    <footer className="bg-[#121212] border-t border-white/10 py-10 px-6 text-white">
+      <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center gap-6">
+        <div className="flex items-center space-x-4">
+          <Link href="/" className="text-xl font-bold">
+            BeatsMarket
+          </Link>
+          <p className="text-sm text-gray-400">&copy; 2025 BeatsMarket. Tous droits réservés.</p>
+        </div>
+        <nav className="flex space-x-6 text-sm text-gray-400">
+          <Link href="/terms">CGV & Conditions</Link>
+          <Link href="/privacy">Politique de confidentialité</Link>
+          <Link href="/contact">Contact</Link>
+          <Link href="/help">Aide</Link>
+        </nav>
+      </div>
     </footer>
   )
 }

commit 8564eb7646f053fd99744ced9e59748df92e4c7d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:58:37 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 81fd302..2ac74c5 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,53 +1,39 @@
-import * as React from "react"
-import { Slot } from "@radix-ui/react-slot"
-import { cva, type VariantProps } from "class-variance-authority"
+'use client'
 
-import { cn } from "@/lib/utils"
+import { cn } from '@/lib/utils'
+import React from 'react'
 
-const buttonVariants = cva(
-  "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
-  {
-    variants: {
-      variant: {
-        default: "bg-primary text-primary-foreground hover:bg-primary/90",
-        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
-        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
-        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        ghost: "hover:bg-accent hover:text-accent-foreground",
-        link: "text-primary underline-offset-4 hover:underline",
-      },
-      size: {
-        default: "h-10 px-4 py-2",
-        sm: "h-9 rounded-md px-3",
-        lg: "h-11 rounded-md px-8",
-        icon: "h-10 w-10",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-      size: "default",
-    },
-  }
-)
+export const buttonVariants = {
+  default: 'bg-pink-600 text-white hover:bg-pink-700',
+  outline: 'border border-pink-600 text-pink-600 hover:bg-pink-600 hover:text-white',
+  ghost: 'bg-transparent text-white hover:bg-white/10',
+  icon: 'p-2 rounded-md',
+}
 
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
-    VariantProps<typeof buttonVariants> {
-  asChild?: boolean
+type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {
+  variant?: keyof typeof buttonVariants
+  size?: 'sm' | 'md' | 'lg' | 'icon'
+  className?: string
 }
 
-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ className, variant, size, asChild = false, ...props }, ref) => {
-    const Comp = asChild ? Slot : "button"
+export const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
+  ({ variant = 'default', size = 'md', className, ...props }, ref) => {
+    const variantClasses = buttonVariants[variant]
+    const sizeClasses = {
+      sm: 'px-3 py-1 text-sm',
+      md: 'px-4 py-2',
+      lg: 'px-6 py-3 text-lg',
+      icon: 'p-2',
+    }[size]
+
     return (
-      <Comp
-        className={cn(buttonVariants({ variant, size }), className)}
+      <button
         ref={ref}
+        className={`${variantClasses} ${sizeClasses} rounded-md font-semibold transition-colors duration-200 ${className}`}
         {...props}
       />
     )
   }
 )
-Button.displayName = "Button"
 
-export { Button, buttonVariants }
+Button.displayName = 'Button'

commit 8e1d9c541bf2e8ad0e482c6b916e6fa88706a43b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 16:59:38 2025 +0200

    Create CardStat.tsx

diff --git a/src/components/ui/CardStat.tsx b/src/components/ui/CardStat.tsx
new file mode 100644
index 0000000..1a1fcdb
--- /dev/null
+++ b/src/components/ui/CardStat.tsx
@@ -0,0 +1,24 @@
+'use client'
+
+import React from 'react'
+
+type CardStatProps = {
+  title: string
+  value: string | number
+  icon?: React.ReactNode
+  className?: string
+}
+
+export default function CardStat({ title, value, icon, className }: CardStatProps) {
+  return (
+    <div
+      className={`bg-[#1e1e1e] p-6 rounded-lg shadow-md flex items-center space-x-4 ${className}`}
+    >
+      {icon && <div className="text-pink-600">{icon}</div>}
+      <div>
+        <p className="text-gray-400 text-sm">{title}</p>
+        <p className="text-white text-2xl font-bold">{value}</p>
+      </div>
+    </div>
+  )
+}

commit bd4ea897e85a04399621a4632cca0932d887220b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:00:37 2025 +0200

    Create RevenueChart.tsx

diff --git a/src/components/ui/RevenueChart.tsx b/src/components/ui/RevenueChart.tsx
new file mode 100644
index 0000000..5ed372d
--- /dev/null
+++ b/src/components/ui/RevenueChart.tsx
@@ -0,0 +1,60 @@
+'use client'
+
+import React from 'react'
+import {
+  Chart as ChartJS,
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend,
+} from 'chart.js'
+import { Line } from 'react-chartjs-2'
+
+ChartJS.register(
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend
+)
+
+type RevenueChartProps = {
+  data: number[]
+  labels: string[]
+}
+
+export default function RevenueChart({ data, labels }: RevenueChartProps) {
+  const chartData = {
+    labels,
+    datasets: [
+      {
+        label: 'Revenus mensuels (€)',
+        data,
+        fill: false,
+        borderColor: '#ec4899', // rose vif
+        backgroundColor: '#ec4899',
+        tension: 0.3,
+      },
+    ],
+  }
+
+  const options = {
+    responsive: true,
+    plugins: {
+      legend: { position: 'top' as const },
+      title: { display: true, text: 'Revenus du dernier semestre' },
+    },
+    scales: {
+      y: {
+        beginAtZero: true,
+      },
+    },
+  }
+
+  return <Line data={chartData} options={options} />
+}

commit c1e4606004491780229aa58077eed703da65eac3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:01:34 2025 +0200

    Create AdminMenu.tsx

diff --git a/src/components/ui/AdminMenu.tsx b/src/components/ui/AdminMenu.tsx
new file mode 100644
index 0000000..a5f8b85
--- /dev/null
+++ b/src/components/ui/AdminMenu.tsx
@@ -0,0 +1,26 @@
+'use client'
+
+import React from 'react'
+import { Menu, MenuItem, MenuButton } from '@szhsin/react-menu'
+import '@szhsin/react-menu/dist/index.css'
+
+type AdminMenuProps = {
+  onEdit: () => void
+  onDelete: () => void
+  onView: () => void
+}
+
+export default function AdminMenu({ onEdit, onDelete, onView }: AdminMenuProps) {
+  return (
+    <Menu
+      menuButton={<MenuButton className="btn btn-ghost">Actions</MenuButton>}
+      transition
+    >
+      <MenuItem onClick={onView}>Voir</MenuItem>
+      <MenuItem onClick={onEdit}>Modifier</MenuItem>
+      <MenuItem onClick={onDelete} className="text-red-600">
+        Supprimer
+      </MenuItem>
+    </Menu>
+  )
+}

commit 79efb9b4fb8e1c5370decda1f91398bfd335bbd7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:16:06 2025 +0200

    Update status-badge.tsx

diff --git a/src/components/ui/status-badge.tsx b/src/components/ui/status-badge.tsx
index a7c5083..a01f3e6 100644
--- a/src/components/ui/status-badge.tsx
+++ b/src/components/ui/status-badge.tsx
@@ -1,26 +1,30 @@
-import React from "react"
-import { cn } from "@/lib/utils"
+import { Badge } from "@/components/ui/badge"
 
 interface StatusBadgeProps {
-  status: "actif" | "en attente" | "suspendu" | "supprimé"
+  status: "actif" | "en attente" | "refusé" | "brouillon"
 }
 
-const statusColors: Record<StatusBadgeProps["status"], string> = {
-  actif: "bg-green-500 text-white",
-  "en attente": "bg-yellow-400 text-black",
-  suspendu: "bg-red-500 text-white",
-  supprimé: "bg-gray-500 text-white",
-}
+export function StatusBadge({ status }: StatusBadgeProps) {
+  const statusMap: Record<StatusBadgeProps["status"], { label: string; variant: "default" | "secondary" | "destructive" | "outline" }> = {
+    actif: {
+      label: "Actif",
+      variant: "default", // vert ou couleur principale
+    },
+    "en attente": {
+      label: "En attente",
+      variant: "secondary", // gris
+    },
+    refusé: {
+      label: "Refusé",
+      variant: "destructive", // rouge
+    },
+    brouillon: {
+      label: "Brouillon",
+      variant: "outline", // contour simple
+    },
+  }
+
+  const { label, variant } = statusMap[status]
 
-export default function StatusBadge({ status }: StatusBadgeProps) {
-  return (
-    <span
-      className={cn(
-        "px-3 py-1 text-xs font-semibold rounded-full",
-        statusColors[status]
-      )}
-    >
-      {status}
-    </span>
-  )
+  return <Badge variant={variant}>{label}</Badge>
 }

commit 01396590b67ced32361b16a84524bee869f3a79c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:17:12 2025 +0200

    Update badge.tsx

diff --git a/src/components/ui/badge.tsx b/src/components/ui/badge.tsx
index c195cea..729cba5 100644
--- a/src/components/ui/badge.tsx
+++ b/src/components/ui/badge.tsx
@@ -1,20 +1,16 @@
-import * as React from "react"
 import { cva, type VariantProps } from "class-variance-authority"
-
 import { cn } from "@/lib/utils"
+import React from "react"
 
 const badgeVariants = cva(
   "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
   {
     variants: {
       variant: {
-        default: "border-transparent bg-primary text-primary-foreground",
-        secondary: "border-transparent bg-secondary text-secondary-foreground",
-        destructive: "border-transparent bg-destructive text-destructive-foreground",
-        outline: "text-foreground",
-        success: "bg-green-500 text-white",
-        warning: "bg-yellow-500 text-black",
-        info: "bg-blue-500 text-white",
+        default: "bg-primary text-primary-foreground",
+        secondary: "bg-secondary text-secondary-foreground",
+        destructive: "bg-destructive text-destructive-foreground",
+        outline: "border border-border text-foreground",
       },
     },
     defaultVariants: {
@@ -27,8 +23,8 @@ export interface BadgeProps
   extends React.HTMLAttributes<HTMLDivElement>,
     VariantProps<typeof badgeVariants> {}
 
-function Badge({ className, variant, ...props }: BadgeProps) {
-  return <div className={cn(badgeVariants({ variant }), className)} {...props} />
+export function Badge({ className, variant, ...props }: BadgeProps) {
+  return (
+    <div className={cn(badgeVariants({ variant }), className)} {...props} />
+  )
 }
-
-export { Badge, badgeVariants }

commit 7efc06b61993638408ba270dbae9ebc361b4864b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:19:10 2025 +0200

    Create status-toggle.tsx

diff --git a/src/components/ui/status-toggle.tsx b/src/components/ui/status-toggle.tsx
new file mode 100644
index 0000000..6912947
--- /dev/null
+++ b/src/components/ui/status-toggle.tsx
@@ -0,0 +1,16 @@
+import { Switch } from "@/components/ui/switch"
+
+interface StatusToggleProps {
+  checked: boolean
+  onChange: (value: boolean) => void
+  label?: string
+}
+
+export function StatusToggle({ checked, onChange, label }: StatusToggleProps) {
+  return (
+    <div className="flex items-center gap-2">
+      {label && <span className="text-sm text-muted-foreground">{label}</span>}
+      <Switch checked={checked} onCheckedChange={onChange} />
+    </div>
+  )
+}

commit 49bfa1bed5ea0dfa6d5c14af09cc75bfa364910c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:20:15 2025 +0200

    Create table-empty.tsx

diff --git a/src/components/ui/table-empty.tsx b/src/components/ui/table-empty.tsx
new file mode 100644
index 0000000..1d68984
--- /dev/null
+++ b/src/components/ui/table-empty.tsx
@@ -0,0 +1,14 @@
+import { Inbox } from "lucide-react"
+
+interface TableEmptyProps {
+  message?: string
+}
+
+export function TableEmpty({ message = "Aucune donnée à afficher." }: TableEmptyProps) {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Inbox className="mb-4 h-8 w-8" />
+      <p className="text-sm">{message}</p>
+    </div>
+  )
+}

commit 3b4177718539de6d23fdb1c4e201fecf31ee6345
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:21:15 2025 +0200

    Create table-loading.tsx

diff --git a/src/components/ui/table-loading.tsx b/src/components/ui/table-loading.tsx
new file mode 100644
index 0000000..679600a
--- /dev/null
+++ b/src/components/ui/table-loading.tsx
@@ -0,0 +1,10 @@
+import { Loader2 } from "lucide-react"
+
+export function TableLoading() {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Loader2 className="mb-4 h-6 w-6 animate-spin" />
+      <p className="text-sm">Chargement des données...</p>
+    </div>
+  )
+}

commit 795dfb237ea510455af3c7a586c758a963161bb3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:22:41 2025 +0200

    Create table-pagination.tsx

diff --git a/src/components/ui/table-pagination.tsx b/src/components/ui/table-pagination.tsx
new file mode 100644
index 0000000..0b6a379
--- /dev/null
+++ b/src/components/ui/table-pagination.tsx
@@ -0,0 +1,44 @@
+import { Button } from "@/components/ui/button"
+
+interface TablePaginationProps {
+  page: number
+  totalPages: number
+  onPageChange: (page: number) => void
+}
+
+export function TablePagination({ page, totalPages, onPageChange }: TablePaginationProps) {
+  const isFirstPage = page <= 1
+  const isLastPage = page >= totalPages
+
+  const handlePrevious = () => {
+    if (!isFirstPage) onPageChange(page - 1)
+  }
+
+  const handleNext = () => {
+    if (!isLastPage) onPageChange(page + 1)
+  }
+
+  return (
+    <div className="mt-4 flex items-center justify-center gap-2">
+      <Button
+        variant="outline"
+        size="sm"
+        onClick={handlePrevious}
+        disabled={isFirstPage}
+      >
+        Précédent
+      </Button>
+      <span className="text-sm text-muted-foreground">
+        Page {page} sur {totalPages}
+      </span>
+      <Button
+        variant="outline"
+        size="sm"
+        onClick={handleNext}
+        disabled={isLastPage}
+      >
+        Suivant
+      </Button>
+    </div>
+  )
+}

commit 9d7061f1ac613f33badb231fdacb9cc7722a8efc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:23:51 2025 +0200

    Create user-avatar.tsx

diff --git a/src/components/ui/user-avatar.tsx b/src/components/ui/user-avatar.tsx
new file mode 100644
index 0000000..74c26de
--- /dev/null
+++ b/src/components/ui/user-avatar.tsx
@@ -0,0 +1,25 @@
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
+
+interface UserAvatarProps {
+  name: string
+  imageUrl?: string | null
+  className?: string
+}
+
+export function UserAvatar({ name, imageUrl, className }: UserAvatarProps) {
+  const getInitials = (fullName: string) => {
+    const names = fullName.trim().split(" ")
+    const initials = names.map((n) => n[0].toUpperCase())
+    return initials.slice(0, 2).join("")
+  }
+
+  return (
+    <Avatar className={className}>
+      {imageUrl ? (
+        <AvatarImage src={imageUrl} alt={name} />
+      ) : (
+        <AvatarFallback>{getInitials(name)}</AvatarFallback>
+      )}
+    </Avatar>
+  )
+}

commit 8c49be6c129f7d92dbc9a8d752cce6813208ceab
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:24:35 2025 +0200

    Create user-role-badge.tsx

diff --git a/src/components/ui/user-role-badge.tsx b/src/components/ui/user-role-badge.tsx
new file mode 100644
index 0000000..9cb07ec
--- /dev/null
+++ b/src/components/ui/user-role-badge.tsx
@@ -0,0 +1,26 @@
+import { Badge } from "@/components/ui/badge"
+
+interface UserRoleBadgeProps {
+  role: "superadmin" | "admin-artist" | "admin-beatmaker"
+}
+
+export function UserRoleBadge({ role }: UserRoleBadgeProps) {
+  const roleMap: Record<UserRoleBadgeProps["role"], { label: string; variant: "default" | "secondary" | "destructive" }> = {
+    superadmin: {
+      label: "SuperAdmin",
+      variant: "default", // couleur principale
+    },
+    "admin-artist": {
+      label: "Admin Artiste",
+      variant: "secondary", // gris
+    },
+    "admin-beatmaker": {
+      label: "Admin Beatmaker",
+      variant: "destructive", // rouge ou accent
+    },
+  }
+
+  const { label, variant } = roleMap[role]
+
+  return <Badge variant={variant}>{label}</Badge>
+}

commit 58a6055fc4a85a3ce681926734d64aa8ab6911ec
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:25:37 2025 +0200

    Create user-status-badge.tsx

diff --git a/src/components/ui/user-status-badge.tsx b/src/components/ui/user-status-badge.tsx
new file mode 100644
index 0000000..6924461
--- /dev/null
+++ b/src/components/ui/user-status-badge.tsx
@@ -0,0 +1,26 @@
+import { Badge } from "@/components/ui/badge"
+
+interface UserStatusBadgeProps {
+  status: "validé" | "en attente" | "refusé"
+}
+
+export function UserStatusBadge({ status }: UserStatusBadgeProps) {
+  const statusMap: Record<UserStatusBadgeProps["status"], { label: string; variant: "default" | "secondary" | "destructive" }> = {
+    validé: {
+      label: "Validé",
+      variant: "default", // couleur principale (ex : vert ou rose vif)
+    },
+    "en attente": {
+      label: "En attente",
+      variant: "secondary", // gris
+    },
+    refusé: {
+      label: "Refusé",
+      variant: "destructive", // rouge
+    },
+  }
+
+  const { label, variant } = statusMap[status]
+
+  return <Badge variant={variant}>{label}</Badge>
+}

commit 58089d9bcb96ea3a040dd674e0e6126032f0e3c8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:26:31 2025 +0200

    Create filter-input.tsx

diff --git a/src/components/ui/filter-input.tsx b/src/components/ui/filter-input.tsx
new file mode 100644
index 0000000..ea0b674
--- /dev/null
+++ b/src/components/ui/filter-input.tsx
@@ -0,0 +1,19 @@
+import React from "react"
+
+interface FilterInputProps {
+  value: string
+  onChange: (value: string) => void
+  placeholder?: string
+}
+
+export function FilterInput({ value, onChange, placeholder = "Rechercher..." }: FilterInputProps) {
+  return (
+    <input
+      type="text"
+      value={value}
+      onChange={e => onChange(e.target.value)}
+      placeholder={placeholder}
+      className="w-full rounded border border-gray-600 bg-gray-800 px-3 py-2 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary"
+    />
+  )
+}

commit 0418a1a04b2e75ca8762218ade42f283788f4972
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:27:36 2025 +0200

    Update dropdown-menu.tsx

diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx
index f59016e..22c7664 100644
--- a/src/components/ui/dropdown-menu.tsx
+++ b/src/components/ui/dropdown-menu.tsx
@@ -2,174 +2,18 @@
 
 import * as React from "react"
 import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
-import { Check, ChevronRight, Circle } from "lucide-react"
-
 import { cn } from "@/lib/utils"
 
 const DropdownMenu = DropdownMenuPrimitive.Root
-
 const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
-
-const DropdownMenuGroup = DropdownMenuPrimitive.Group
-
-const DropdownMenuPortal = DropdownMenuPrimitive.Portal
-
-const DropdownMenuSub = DropdownMenuPrimitive.Sub
-
+const DropdownMenuContent = DropdownMenuPrimitive.Content
+const DropdownMenuItem = DropdownMenuPrimitive.Item
+const DropdownMenuCheckboxItem = DropdownMenuPrimitive.CheckboxItem
 const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
-
-const DropdownMenuSubTrigger = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
-    inset?: boolean
-  }
->(({ className, inset, children, ...props }, ref) => (
-  <DropdownMenuPrimitive.SubTrigger
-    ref={ref}
-    className={cn(
-      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  >
-    {children}
-    <ChevronRight className="ml-auto h-4 w-4" />
-  </DropdownMenuPrimitive.SubTrigger>
-))
-DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName
-
-const DropdownMenuSubContent = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
->(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.SubContent
-    ref={ref}
-    className={cn(
-      "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in slide-in-from-left-1",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName
-
-const DropdownMenuContent = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
->(({ className, sideOffset = 4, ...props }, ref) => (
-  <DropdownMenuPrimitive.Portal>
-    <DropdownMenuPrimitive.Content
-      ref={ref}
-      sideOffset={sideOffset}
-      className={cn(
-        "z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95",
-        className
-      )}
-      {...props}
-    />
-  </DropdownMenuPrimitive.Portal>
-))
-DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
-
-const DropdownMenuItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <DropdownMenuPrimitive.Item
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
-
-const DropdownMenuCheckboxItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
->(({ className, children, checked, ...props }, ref) => (
-  <DropdownMenuPrimitive.CheckboxItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    checked={checked}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <Check className="h-4 w-4" />
-    </span>
-    {children}
-  </DropdownMenuPrimitive.CheckboxItem>
-))
-DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName
-
-const DropdownMenuRadioItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
->(({ className, children, ...props }, ref) => (
-  <DropdownMenuPrimitive.RadioItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <Circle className="h-2 w-2 fill-current" />
-    </span>
-    {children}
-  </DropdownMenuPrimitive.RadioItem>
-))
-DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
-
-const DropdownMenuLabel = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <DropdownMenuPrimitive.Label
-    ref={ref}
-    className={cn(
-      "px-2 py-1.5 text-sm font-semibold text-foreground",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
-
-const DropdownMenuSeparator = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
->(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.Separator
-    ref={ref}
-    className={cn("my-1 h-px bg-muted", className)}
-    {...props}
-  />
-))
-DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
-
-const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
-  return (
-    <span
-      className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)}
-      {...props}
-    />
-  )
-}
-DropdownMenuShortcut.displayName = "DropdownMenuShortcut"
+const DropdownMenuRadioItem = DropdownMenuPrimitive.RadioItem
+const DropdownMenuLabel = DropdownMenuPrimitive.Label
+const DropdownMenuSeparator = DropdownMenuPrimitive.Separator
+const DropdownMenuGroup = DropdownMenuPrimitive.Group
 
 export {
   DropdownMenu,
@@ -177,14 +21,25 @@ export {
   DropdownMenuContent,
   DropdownMenuItem,
   DropdownMenuCheckboxItem,
+  DropdownMenuRadioGroup,
   DropdownMenuRadioItem,
   DropdownMenuLabel,
   DropdownMenuSeparator,
-  DropdownMenuShortcut,
   DropdownMenuGroup,
-  DropdownMenuPortal,
-  DropdownMenuSub,
-  DropdownMenuSubContent,
-  DropdownMenuSubTrigger,
-  DropdownMenuRadioGroup,
+}
+
+interface DropdownMenuProps extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content> {
+  className?: string
+}
+
+export function CustomDropdownMenuContent({ className, ...props }: DropdownMenuProps) {
+  return (
+    <DropdownMenuContent
+      className={cn(
+        "z-50 min-w-[8rem] rounded-md border border-border bg-background p-1 shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  )
 }

commit 73613d5216ed1ba3a431a62e802a142c8ef7816d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:28:28 2025 +0200

    Update button.tsx

diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
index 2ac74c5..a287f2b 100644
--- a/src/components/ui/button.tsx
+++ b/src/components/ui/button.tsx
@@ -1,39 +1,38 @@
-'use client'
+import React from "react"
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
 
-import { cn } from '@/lib/utils'
-import React from 'react'
-
-export const buttonVariants = {
-  default: 'bg-pink-600 text-white hover:bg-pink-700',
-  outline: 'border border-pink-600 text-pink-600 hover:bg-pink-600 hover:text-white',
-  ghost: 'bg-transparent text-white hover:bg-white/10',
-  icon: 'p-2 rounded-md',
-}
-
-type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {
-  variant?: keyof typeof buttonVariants
-  size?: 'sm' | 'md' | 'lg' | 'icon'
-  className?: string
-}
-
-export const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ variant = 'default', size = 'md', className, ...props }, ref) => {
-    const variantClasses = buttonVariants[variant]
-    const sizeClasses = {
-      sm: 'px-3 py-1 text-sm',
-      md: 'px-4 py-2',
-      lg: 'px-6 py-3 text-lg',
-      icon: 'p-2',
-    }[size]
-
-    return (
-      <button
-        ref={ref}
-        className={`${variantClasses} ${sizeClasses} rounded-md font-semibold transition-colors duration-200 ${className}`}
-        {...props}
-      />
-    )
+const buttonVariants = cva(
+  "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90",
+        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
+        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
+        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "underline-offset-4 hover:underline text-primary",
+      },
+      size: {
+        default: "h-10 px-4 py-2",
+        sm: "h-9 rounded-md px-3",
+        lg: "h-11 rounded-md px-8",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
   }
 )
 
-Button.displayName = 'Button'
+export interface ButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof buttonVariants> {}
+
+export function Button({ className, variant, size, ...props }: ButtonProps) {
+  return (
+    <button className={cn(buttonVariants({ variant, size }), className)} {...props} />
+  )
+}

commit cb8619697813aaf670b3bbd5c6c932320a97aa68
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:29:41 2025 +0200

    Create avatar.tsx

diff --git a/src/components/ui/avatar.tsx b/src/components/ui/avatar.tsx
new file mode 100644
index 0000000..8deac16
--- /dev/null
+++ b/src/components/ui/avatar.tsx
@@ -0,0 +1,48 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+export function Avatar({
+  className,
+  ...props
+}: React.ImgHTMLAttributes<HTMLImageElement> & { className?: string }) {
+  return (
+    <img
+      className={cn(
+        "inline-block h-8 w-8 rounded-full object-cover",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export function AvatarFallback({
+  className,
+  children,
+}: React.HTMLAttributes<HTMLDivElement> & { className?: string }) {
+  return (
+    <div
+      className={cn(
+        "inline-flex h-8 w-8 items-center justify-center rounded-full bg-muted text-xs font-medium text-muted-foreground",
+        className
+      )}
+    >
+      {children}
+    </div>
+  )
+}
+
+export function AvatarImage({
+  className,
+  ...props
+}: React.ImgHTMLAttributes<HTMLImageElement> & { className?: string }) {
+  return (
+    <img
+      className={cn(
+        "h-full w-full rounded-full object-cover",
+        className
+      )}
+      {...props}
+    />
+  )
+}

commit 8cd478c76d408e91d9c5da23958b93032ae08860
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:30:55 2025 +0200

    Create switch.tsx

diff --git a/src/components/ui/switch.tsx b/src/components/ui/switch.tsx
new file mode 100644
index 0000000..02d0f4a
--- /dev/null
+++ b/src/components/ui/switch.tsx
@@ -0,0 +1,27 @@
+"use client"
+
+import * as React from "react"
+import * as SwitchPrimitive from "@radix-ui/react-switch"
+import { cn } from "@/lib/utils"
+
+export const Switch = React.forwardRef<
+  React.ElementRef<typeof SwitchPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root>
+>(({ className, ...props }, ref) => (
+  <SwitchPrimitive.Root
+    className={cn(
+      "relative inline-flex h-[24px] w-[42px] shrink-0 cursor-pointer rounded-full border border-border bg-background transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+    ref={ref}
+  >
+    <SwitchPrimitive.Thumb
+      className={cn(
+        "pointer-events-none block h-5 w-5 rounded-full bg-primary shadow-lg ring-0 transition-transform will-change-transform",
+        "data-[state=checked]:translate-x-5"
+      )}
+    />
+  </SwitchPrimitive.Root>
+))
+Switch.displayName = SwitchPrimitive.Root.displayName

commit b7b368aed8ee31e68c2c88a73f3c3691853cfbee
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:31:52 2025 +0200

    Create modal.tsx

diff --git a/src/components/ui/modal.tsx b/src/components/ui/modal.tsx
new file mode 100644
index 0000000..37e295d
--- /dev/null
+++ b/src/components/ui/modal.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as Dialog from "@radix-ui/react-dialog"
+import { cn } from "@/lib/utils"
+
+export const Modal = ({
+  children,
+  open,
+  onOpenChange,
+}: {
+  children: React.ReactNode
+  open: boolean
+  onOpenChange: (open: boolean) => void
+}) => {
+  return (
+    <Dialog.Root open={open} onOpenChange={onOpenChange}>
+      <Dialog.Overlay className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm" />
+      <Dialog.Content
+        className={cn(
+          "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-lg -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
+        )}
+      >
+        {children}
+      </Dialog.Content>
+    </Dialog.Root>
+  )
+}

commit 473a99029c9e34bd4a7e03ff2890f6667a4c60c2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:32:40 2025 +0200

    Create alert.tsx

diff --git a/src/components/ui/alert.tsx b/src/components/ui/alert.tsx
new file mode 100644
index 0000000..93f45ed
--- /dev/null
+++ b/src/components/ui/alert.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as AlertDialog from "@radix-ui/react-alert-dialog"
+import { cn } from "@/lib/utils"
+
+export const Alert = ({
+  children,
+  open,
+  onOpenChange,
+}: {
+  children: React.ReactNode
+  open: boolean
+  onOpenChange: (open: boolean) => void
+}) => {
+  return (
+    <AlertDialog.Root open={open} onOpenChange={onOpenChange}>
+      <AlertDialog.Overlay className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm" />
+      <AlertDialog.Content
+        className={cn(
+          "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-md -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
+        )}
+      >
+        {children}
+      </AlertDialog.Content>
+    </AlertDialog.Root>
+  )
+}

commit c724b89ec0e62753ec8700f756e55fed9da2628b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:33:18 2025 +0200

    Update textarea.tsx

diff --git a/src/components/ui/textarea.tsx b/src/components/ui/textarea.tsx
index 72d8cc3..d8b8bdf 100644
--- a/src/components/ui/textarea.tsx
+++ b/src/components/ui/textarea.tsx
@@ -1,15 +1,16 @@
-import * as React from "react"
+import React from "react"
 import { cn } from "@/lib/utils"
 
-export interface TextareaProps
-  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}
+interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {
+  className?: string
+}
 
-const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
+export const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
   ({ className, ...props }, ref) => {
     return (
       <textarea
         className={cn(
-          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
+          "w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50",
           className
         )}
         ref={ref}
@@ -18,6 +19,5 @@ const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
     )
   }
 )
-Textarea.displayName = "Textarea"
 
-export { Textarea }
+Textarea.displayName = "Textarea"

commit 864b45455587ee8a9cc417bf297de22dc69c2cee
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:34:18 2025 +0200

    Update input.tsx

diff --git a/src/components/ui/input.tsx b/src/components/ui/input.tsx
index b519054..859ac3b 100644
--- a/src/components/ui/input.tsx
+++ b/src/components/ui/input.tsx
@@ -1,16 +1,16 @@
-import * as React from "react"
-
+import React from "react"
 import { cn } from "@/lib/utils"
 
-export interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}
+interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {
+  className?: string
+}
 
-const Input = React.forwardRef<HTMLInputElement, InputProps>(
-  ({ className, type, ...props }, ref) => {
+export const Input = React.forwardRef<HTMLInputElement, InputProps>(
+  ({ className, ...props }, ref) => {
     return (
       <input
-        type={type}
         className={cn(
-          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+          "w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50",
           className
         )}
         ref={ref}
@@ -19,6 +19,5 @@ const Input = React.forwardRef<HTMLInputElement, InputProps>(
     )
   }
 )
-Input.displayName = "Input"
 
-export { Input }
+Input.displayName = "Input"

commit 1b8c48f51793772001ecf53ee1d315e7d9187461
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:35:16 2025 +0200

    Create select.tsx

diff --git a/src/components/ui/select.tsx b/src/components/ui/select.tsx
new file mode 100644
index 0000000..28d2b0c
--- /dev/null
+++ b/src/components/ui/select.tsx
@@ -0,0 +1,45 @@
+"use client"
+
+import * as React from "react"
+import * as SelectPrimitive from "@radix-ui/react-select"
+import { cn } from "@/lib/utils"
+
+const Select = SelectPrimitive.Root
+const SelectTrigger = SelectPrimitive.Trigger
+const SelectValue = SelectPrimitive.Value
+const SelectIcon = SelectPrimitive.Icon
+const SelectContent = SelectPrimitive.Content
+const SelectViewport = SelectPrimitive.Viewport
+const SelectItem = SelectPrimitive.Item
+const SelectItemText = SelectPrimitive.ItemText
+const SelectScrollUpButton = SelectPrimitive.ScrollUpButton
+const SelectScrollDownButton = SelectPrimitive.ScrollDownButton
+
+export {
+  Select,
+  SelectTrigger,
+  SelectValue,
+  SelectIcon,
+  SelectContent,
+  SelectViewport,
+  SelectItem,
+  SelectItemText,
+  SelectScrollUpButton,
+  SelectScrollDownButton,
+}
+
+interface SelectProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root> {
+  className?: string
+}
+
+export function CustomSelectContent({ className, ...props }: SelectProps) {
+  return (
+    <SelectContent
+      className={cn(
+        "z-50 min-w-[8rem] rounded-md border border-border bg-background p-1 shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  )
+}

commit ccbb4cd8340d65b298fc40e2ff1a97f71aaec706
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:36:17 2025 +0200

    Create checkbox.tsx

diff --git a/src/components/ui/checkbox.tsx b/src/components/ui/checkbox.tsx
new file mode 100644
index 0000000..ed7373c
--- /dev/null
+++ b/src/components/ui/checkbox.tsx
@@ -0,0 +1,27 @@
+"use client"
+
+import * as React from "react"
+import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
+import { Check } from "lucide-react"
+import { cn } from "@/lib/utils"
+
+const Checkbox = React.forwardRef<
+  React.ElementRef<typeof CheckboxPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
+>(({ className, children, ...props }, ref) => (
+  <CheckboxPrimitive.Root
+    ref={ref}
+    className={cn(
+      "peer h-4 w-4 shrink-0 rounded-sm border border-border bg-background ring-offset-background transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <CheckboxPrimitive.Indicator className="flex items-center justify-center text-primary">
+      <Check className="h-4 w-4" />
+    </CheckboxPrimitive.Indicator>
+  </CheckboxPrimitive.Root>
+))
+Checkbox.displayName = CheckboxPrimitive.Root.displayName
+
+export { Checkbox }

commit 648da134fe93ec5d4624054a8560b104df364482
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:37:01 2025 +0200

    Create radio-group.tsx

diff --git a/src/components/ui/radio-group.tsx b/src/components/ui/radio-group.tsx
new file mode 100644
index 0000000..e046edc
--- /dev/null
+++ b/src/components/ui/radio-group.tsx
@@ -0,0 +1,30 @@
+"use client"
+
+import * as React from "react"
+import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
+import { cn } from "@/lib/utils"
+
+const RadioGroup = RadioGroupPrimitive.Root
+
+interface RadioGroupItemProps extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {
+  className?: string
+}
+
+const RadioGroupItem = React.forwardRef<
+  React.ElementRef<typeof RadioGroupPrimitive.Item>,
+  RadioGroupItemProps
+>(({ className, ...props }, ref) => (
+  <RadioGroupPrimitive.Item
+    ref={ref}
+    className={cn(
+      "ring-offset-background focus:ring-ring focus:ring-2 peer relative flex h-4 w-4 cursor-pointer items-center justify-center rounded-full border border-border bg-background focus:outline-none disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <RadioGroupPrimitive.Indicator className="bg-primary peer-checked:block absolute h-2.5 w-2.5 rounded-full" />
+  </RadioGroupPrimitive.Item>
+))
+RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName
+
+export { RadioGroup, RadioGroupItem }

commit 734e385bb7f428e5612ca2d9851efd02d112a2e9
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:37:55 2025 +0200

    Update label.tsx

diff --git a/src/components/ui/label.tsx b/src/components/ui/label.tsx
index 3b58058..cdb0400 100644
--- a/src/components/ui/label.tsx
+++ b/src/components/ui/label.tsx
@@ -1,22 +1,18 @@
-import * as React from "react"
+import React from "react"
 import { cn } from "@/lib/utils"
 
-export interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}
+interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {
+  className?: string
+}
 
-const Label = React.forwardRef<HTMLLabelElement, LabelProps>(
-  ({ className, ...props }, ref) => {
-    return (
-      <label
-        ref={ref}
-        className={cn(
-          "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
-          className
-        )}
-        {...props}
-      />
-    )
-  }
+export const Label = React.forwardRef<HTMLLabelElement, LabelProps>(
+  ({ className, ...props }, ref) => (
+    <label
+      ref={ref}
+      className={cn("mb-2 block text-sm font-medium text-muted-foreground", className)}
+      {...props}
+    />
+  )
 )
-Label.displayName = "Label"
 
-export { Label }
+Label.displayName = "Label"

commit cf65223dc35d814c83b9647269f0c6eb07805d90
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:39:52 2025 +0200

    Update tooltip.tsx

diff --git a/src/components/ui/tooltip.tsx b/src/components/ui/tooltip.tsx
index d1d625e..9a088cc 100644
--- a/src/components/ui/tooltip.tsx
+++ b/src/components/ui/tooltip.tsx
@@ -1,33 +1,35 @@
 "use client"
 
 import * as React from "react"
-import {
-  Tooltip as TooltipPrimitive,
-  TooltipContent,
+import * as TooltipPrimitive from "@radix-ui/react-tooltip"
+import { cn } from "@/lib/utils"
+
+const TooltipProvider = TooltipPrimitive.Provider
+const Tooltip = TooltipPrimitive.Root
+const TooltipTrigger = TooltipPrimitive.Trigger
+const TooltipContent = TooltipPrimitive.Content
+const TooltipArrow = TooltipPrimitive.Arrow
+
+export {
   TooltipProvider,
+  Tooltip,
   TooltipTrigger,
-} from "@/components/ui/tooltip-primitive"
+  TooltipContent,
+  TooltipArrow,
+}
 
-interface TooltipProps {
-  children: React.ReactNode
-  content: React.ReactNode
-  delayDuration?: number
+interface TooltipContentProps extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> {
+  className?: string
 }
 
-function Tooltip({
-  children,
-  content,
-  delayDuration = 300,
-  ...props
-}: TooltipProps) {
+export function CustomTooltipContent({ className, ...props }: TooltipContentProps) {
   return (
-    <TooltipProvider delayDuration={delayDuration}>
-      <TooltipPrimitive>
-        <TooltipTrigger asChild>{children}</TooltipTrigger>
-        <TooltipContent {...props}>{content}</TooltipContent>
-      </TooltipPrimitive>
-    </TooltipProvider>
+    <TooltipContent
+      className={cn(
+        "z-50 rounded-md bg-gray-900 px-3 py-1.5 text-sm text-white shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
   )
 }
-
-export { Tooltip }

commit 11bdbba1e98efc74cc72e0a867675639e8701f35
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:40:28 2025 +0200

    Create loading-spinner.tsx

diff --git a/src/components/ui/loading-spinner.tsx b/src/components/ui/loading-spinner.tsx
new file mode 100644
index 0000000..51ab64f
--- /dev/null
+++ b/src/components/ui/loading-spinner.tsx
@@ -0,0 +1,24 @@
+export function LoadingSpinner() {
+  return (
+    <svg
+      className="animate-spin h-6 w-6 text-primary"
+      xmlns="http://www.w3.org/2000/svg"
+      fill="none"
+      viewBox="0 0 24 24"
+    >
+      <circle
+        className="opacity-25"
+        cx="12"
+        cy="12"
+        r="10"
+        stroke="currentColor"
+        strokeWidth="4"
+      ></circle>
+      <path
+        className="opacity-75"
+        fill="currentColor"
+        d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"
+      ></path>
+    </svg>
+  )
+}

commit fd4d611ff45867ffb304c615c5c9bcb8397902a2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:41:37 2025 +0200

    Create empty-state.tsx

diff --git a/src/components/ui/empty-state.tsx b/src/components/ui/empty-state.tsx
new file mode 100644
index 0000000..d45482d
--- /dev/null
+++ b/src/components/ui/empty-state.tsx
@@ -0,0 +1,14 @@
+import { Inbox } from "lucide-react"
+
+interface EmptyStateProps {
+  message?: string
+}
+
+export function EmptyState({ message = "Aucune donnée disponible." }: EmptyStateProps) {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Inbox className="mb-4 h-8 w-8" />
+      <p className="text-sm">{message}</p>
+    </div>
+  )
+}

commit 50b5a7c4752c7740e9ebc39c72c5330682dc26aa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:42:45 2025 +0200

    Create pagination.tsx

diff --git a/src/components/ui/pagination.tsx b/src/components/ui/pagination.tsx
new file mode 100644
index 0000000..afd4712
--- /dev/null
+++ b/src/components/ui/pagination.tsx
@@ -0,0 +1,35 @@
+import React from "react"
+import { Button } from "@/components/ui/button"
+
+interface PaginationProps {
+  page: number
+  totalPages: number
+  onPageChange: (page: number) => void
+}
+
+export function Pagination({ page, totalPages, onPageChange }: PaginationProps) {
+  const isFirstPage = page <= 1
+  const isLastPage = page >= totalPages
+
+  const handlePrevious = () => {
+    if (!isFirstPage) onPageChange(page - 1)
+  }
+
+  const handleNext = () => {
+    if (!isLastPage) onPageChange(page + 1)
+  }
+
+  return (
+    <div className="mt-4 flex items-center justify-center gap-2">
+      <Button variant="outline" size="sm" onClick={handlePrevious} disabled={isFirstPage}>
+        Précédent
+      </Button>
+      <span className="text-sm text-muted-foreground">
+        Page {page} sur {totalPages}
+      </span>
+      <Button variant="outline" size="sm" onClick={handleNext} disabled={isLastPage}>
+        Suivant
+      </Button>
+    </div>
+  )
+}

commit 272041e099f1e2ff835b649750b9772f189bdb6d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:44:07 2025 +0200

    Create checkbox-group.tsx

diff --git a/src/components/ui/checkbox-group.tsx b/src/components/ui/checkbox-group.tsx
new file mode 100644
index 0000000..8eecaff
--- /dev/null
+++ b/src/components/ui/checkbox-group.tsx
@@ -0,0 +1,38 @@
+"use client"
+
+import * as React from "react"
+import { Checkbox } from "@/components/ui/checkbox"
+import { cn } from "@/lib/utils"
+
+interface CheckboxGroupProps {
+  options: { label: string; value: string }[]
+  selectedValues: string[]
+  onChange: (values: string[]) => void
+}
+
+export function CheckboxGroup({ options, selectedValues, onChange }: CheckboxGroupProps) {
+  const toggleValue = (value: string) => {
+    if (selectedValues.includes(value)) {
+      onChange(selectedValues.filter((v) => v !== value))
+    } else {
+      onChange([...selectedValues, value])
+    }
+  }
+
+  return (
+    <div className="flex flex-col gap-2">
+      {options.map(({ label, value }) => (
+        <label
+          key={value}
+          className="inline-flex cursor-pointer items-center space-x-2"
+        >
+          <Checkbox
+            checked={selectedValues.includes(value)}
+            onCheckedChange={() => toggleValue(value)}
+          />
+          <span>{label}</span>
+        </label>
+      ))}
+    </div>
+  )
+}

commit 48c21937a43a1ac49d761023f7a6b08608ce18c7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:44:50 2025 +0200

    Create rating.tsx

diff --git a/src/components/ui/rating.tsx b/src/components/ui/rating.tsx
new file mode 100644
index 0000000..0cb3289
--- /dev/null
+++ b/src/components/ui/rating.tsx
@@ -0,0 +1,36 @@
+"use client"
+
+import * as React from "react"
+import { Star } from "lucide-react"
+import { cn } from "@/lib/utils"
+
+interface RatingProps {
+  value: number
+  max?: number
+  onChange?: (value: number) => void
+  readOnly?: boolean
+}
+
+export function Rating({ value, max = 5, onChange, readOnly = false }: RatingProps) {
+  const stars = []
+
+  for (let i = 1; i <= max; i++) {
+    stars.push(
+      <button
+        key={i}
+        type="button"
+        disabled={readOnly}
+        onClick={() => onChange?.(i)}
+        className={cn(
+          "cursor-pointer p-1 text-yellow-400",
+          i <= value ? "opacity-100" : "opacity-40"
+        )}
+        aria-label={`Donner ${i} étoiles`}
+      >
+        <Star />
+      </button>
+    )
+  }
+
+  return <div className="flex space-x-1">{stars}</div>
+}

commit 768ad82963a448661c3100845dbfc935562f4f8c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:45:31 2025 +0200

    Create scroll-area.tsx

diff --git a/src/components/ui/scroll-area.tsx b/src/components/ui/scroll-area.tsx
new file mode 100644
index 0000000..0dd0724
--- /dev/null
+++ b/src/components/ui/scroll-area.tsx
@@ -0,0 +1,32 @@
+"use client"
+
+import * as React from "react"
+import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"
+import { cn } from "@/lib/utils"
+
+const ScrollArea = ScrollAreaPrimitive.Root
+const ScrollAreaViewport = ScrollAreaPrimitive.Viewport
+const ScrollAreaScrollbar = ScrollAreaPrimitive.Scrollbar
+const ScrollAreaThumb = ScrollAreaPrimitive.Thumb
+const ScrollAreaCorner = ScrollAreaPrimitive.Corner
+
+export {
+  ScrollArea,
+  ScrollAreaViewport,
+  ScrollAreaScrollbar,
+  ScrollAreaThumb,
+  ScrollAreaCorner,
+}
+
+interface ScrollAreaProps extends React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> {
+  className?: string
+}
+
+export function CustomScrollArea({ className, ...props }: ScrollAreaProps) {
+  return (
+    <ScrollArea
+      className={cn("relative overflow-hidden rounded-md", className)}
+      {...props}
+    />
+  )
+}

commit d3ba131a72bc3aa6295350e069e65c9f3bdd4550
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:46:12 2025 +0200

    Create progress.tsx

diff --git a/src/components/ui/progress.tsx b/src/components/ui/progress.tsx
new file mode 100644
index 0000000..0fc01e1
--- /dev/null
+++ b/src/components/ui/progress.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as ProgressPrimitive from "@radix-ui/react-progress"
+import { cn } from "@/lib/utils"
+
+const Progress = ProgressPrimitive.Root
+const ProgressIndicator = ProgressPrimitive.Indicator
+
+interface ProgressProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {
+  className?: string
+  value: number
+}
+
+export function CustomProgress({ className, value, ...props }: ProgressProps) {
+  return (
+    <Progress
+      className={cn("relative h-2 w-full overflow-hidden rounded-full bg-muted", className)}
+      value={value}
+      {...props}
+    >
+      <ProgressIndicator
+        className="h-full bg-primary transition-all"
+        style={{ width: `${value}%` }}
+      />
+    </Progress>
+  )
+}

commit 13d287a1aee8409792b716cbdadbb401e142d674
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:46:58 2025 +0200

    Create toast.tsx

diff --git a/src/components/ui/toast.tsx b/src/components/ui/toast.tsx
new file mode 100644
index 0000000..3e6b871
--- /dev/null
+++ b/src/components/ui/toast.tsx
@@ -0,0 +1,37 @@
+"use client"
+
+import * as React from "react"
+import * as ToastPrimitive from "@radix-ui/react-toast"
+import { cn } from "@/lib/utils"
+
+const ToastProvider = ToastPrimitive.Provider
+const ToastRoot = ToastPrimitive.Root
+const ToastTitle = ToastPrimitive.Title
+const ToastDescription = ToastPrimitive.Description
+const ToastAction = ToastPrimitive.Action
+const ToastViewport = ToastPrimitive.Viewport
+
+export {
+  ToastProvider,
+  ToastRoot,
+  ToastTitle,
+  ToastDescription,
+  ToastAction,
+  ToastViewport,
+}
+
+interface ToastProps extends React.ComponentPropsWithoutRef<typeof ToastRoot> {
+  className?: string
+}
+
+export function CustomToastRoot({ className, ...props }: ToastProps) {
+  return (
+    <ToastRoot
+      className={cn(
+        "group pointer-events-auto relative mb-4 w-full max-w-sm rounded-md border border-border bg-background p-4 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+        className
+      )}
+      {...props}
+    />
+  )
+}

commit a16dfeb7157297d05d02047a398f9dc8cdd82d36
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:48:43 2025 +0200

    Create dialog.tsx

diff --git a/src/components/ui/dialog.tsx b/src/components/ui/dialog.tsx
new file mode 100644
index 0000000..0563bec
--- /dev/null
+++ b/src/components/ui/dialog.tsx
@@ -0,0 +1,41 @@
+"use client"
+
+import * as React from "react"
+import * as Dialog from "@radix-ui/react-dialog"
+import { cn } from "@/lib/utils"
+
+const DialogRoot = Dialog.Root
+const DialogTrigger = Dialog.Trigger
+const DialogPortal = Dialog.Portal
+const DialogOverlay = Dialog.Overlay
+const DialogContent = Dialog.Content
+const DialogTitle = Dialog.Title
+const DialogDescription = Dialog.Description
+const DialogClose = Dialog.Close
+
+export {
+  DialogRoot,
+  DialogTrigger,
+  DialogPortal,
+  DialogOverlay,
+  DialogContent,
+  DialogTitle,
+  DialogDescription,
+  DialogClose,
+}
+
+interface DialogContentProps extends React.ComponentPropsWithoutRef<typeof Dialog.Content> {
+  className?: string
+}
+
+export function CustomDialogContent({ className, ...props }: DialogContentProps) {
+  return (
+    <DialogContent
+      className={cn(
+        "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-lg -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+        className
+      )}
+      {...props}
+    />
+  )
+}

commit 274afa14679545c38ea632a831d00ee3b8e8e718
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:49:50 2025 +0200

    Create collapse.tsx

diff --git a/src/components/ui/collapse.tsx b/src/components/ui/collapse.tsx
new file mode 100644
index 0000000..96b8657
--- /dev/null
+++ b/src/components/ui/collapse.tsx
@@ -0,0 +1,46 @@
+"use client"
+
+import * as React from "react"
+import * as Collapsible from "@radix-ui/react-collapsible"
+import { cn } from "@/lib/utils"
+
+const Collapse = Collapsible.Root
+
+interface CollapseTriggerProps extends React.ComponentPropsWithoutRef<typeof Collapsible.Trigger> {
+  className?: string
+}
+
+const CollapseTrigger = React.forwardRef<
+  React.ElementRef<typeof Collapsible.Trigger>,
+  CollapseTriggerProps
+>(({ className, ...props }, ref) => (
+  <Collapsible.Trigger
+    ref={ref}
+    className={cn(
+      "inline-flex items-center justify-between rounded-md bg-muted px-3 py-2 text-sm font-medium text-muted-foreground hover:bg-accent hover:text-accent-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+
+CollapseTrigger.displayName = Collapsible.Trigger.displayName
+
+interface CollapseContentProps extends React.ComponentPropsWithoutRef<typeof Collapsible.Content> {
+  className?: string
+}
+
+const CollapseContent = React.forwardRef<
+  React.ElementRef<typeof Collapsible.Content>,
+  CollapseContentProps
+>(({ className, ...props }, ref) => (
+  <Collapsible.Content
+    ref={ref}
+    className={cn("overflow-hidden text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+
+CollapseContent.displayName = Collapsible.Content.displayName
+
+export { Collapse, CollapseTrigger, CollapseContent }

commit 2f07902e13ffcaeadf974c1229d7e0943838d2b1
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 17:50:31 2025 +0200

    Create scroll-to-top.tsx

diff --git a/src/components/ui/scroll-to-top.tsx b/src/components/ui/scroll-to-top.tsx
new file mode 100644
index 0000000..ed7f5f0
--- /dev/null
+++ b/src/components/ui/scroll-to-top.tsx
@@ -0,0 +1,35 @@
+"use client"
+
+import React, { useState, useEffect } from "react"
+import { Button } from "@/components/ui/button"
+import { ArrowUp } from "lucide-react"
+
+export function ScrollToTop() {
+  const [visible, setVisible] = useState(false)
+
+  useEffect(() => {
+    const onScroll = () => {
+      setVisible(window.scrollY > 300)
+    }
+    window.addEventListener("scroll", onScroll)
+    return () => window.removeEventListener("scroll", onScroll)
+  }, [])
+
+  const scrollToTop = () => {
+    window.scrollTo({ top: 0, behavior: "smooth" })
+  }
+
+  if (!visible) return null
+
+  return (
+    <Button
+      onClick={scrollToTop}
+      variant="ghost"
+      size="sm"
+      className="fixed bottom-5 right-5 z-50"
+      aria-label="Remonter en haut de la page"
+    >
+      <ArrowUp />
+    </Button>
+  )
+}

commit da5a2b4a335b6d920b2923279522dfa7efc3e406
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:25:01 2025 +0200

    Create .keep

diff --git a/public/images/.keep b/public/images/.keep
new file mode 100644
index 0000000..8b13789
--- /dev/null
+++ b/public/images/.keep
@@ -0,0 +1 @@
+

commit 8d7b4798117260c36a4e390d16d885d781161796
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:26:02 2025 +0200

    Add files via upload

diff --git a/public/images/Footer BeatsMarket.jpg b/public/images/Footer BeatsMarket.jpg
new file mode 100644
index 0000000..34da259
Binary files /dev/null and b/public/images/Footer BeatsMarket.jpg differ

commit 490d2bc74f2f01c1446ddd35c87c915d6549352b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:28:36 2025 +0200

    Update Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
index 6e12a85..d51fb39 100644
--- a/src/components/Footer.tsx
+++ b/src/components/Footer.tsx
@@ -1,43 +1,26 @@
 import React from "react";
-import Link from "next/link";
 
-export default function Footer() {
+export function Footer() {
   return (
-    <footer className="bg-darkbg2 text-white py-8">
-      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-8 px-4">
-        <div>
-          <h2 className="text-primary font-bold text-lg mb-2">BeatsMarket</h2>
-          <p className="text-gray-400">
-            La plateforme ultime pour acheter, vendre et distribuer vos beats.
-          </p>
-        </div>
-        <div>
-          <h3 className="font-semibold mb-2">Navigation</h3>
-          <ul className="space-y-1">
-            <li>
-              <Link href="/" className="hover:text-pink-500 transition">
-                Accueil
-              </Link>
-            </li>
-            <li>
-              <Link href="/pricing" className="hover:text-pink-500 transition">
-                Tarifs
-              </Link>
-            </li>
-            <li>
-              <Link href="/about" className="hover:text-pink-500 transition">
-                À Propos
-              </Link>
-            </li>
-            <li>
-              <Link href="/terms" className="hover:text-pink-500 transition">
-                CGV / CGU
-              </Link>
-            </li>
-          </ul>
+    <footer className="bg-[#121212] text-white py-8 px-4 text-center">
+      {/* Contenu principal du footer */}
+      <div className="max-w-7xl mx-auto">
+        {/* Ici tu peux ajouter d'autres éléments du footer comme liens, logo, etc. */}
+
+        {/* Image en bas du footer */}
+        <div className="mt-6">
+          <img
+            src="/images/footer-beatsmarket.jpg"
+            alt="Footer BeatsMarket"
+            className="mx-auto max-w-full h-auto rounded-md shadow-lg"
+          />
         </div>
-        <div>
-          <h3 className="font-semibold mb-2">Réseaux</h3>
-          <ul className="space-y-1">
-            <li>
-              <a href="#" className="hover:text-pink-500 transition">
+
+        {/* Texte en dessous de l'image */}
+        <p className="mt-4 text-sm opacity-70">
+          © 2025 BeatsMarket - Tous droits réservés.
+        </p>
+      </div>
+    </footer>
+  );
+}

commit 46442f103495fb6f34bd03a710a94144c9bc458e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:31:52 2025 +0200

    Delete public/images/Footer BeatsMarket.jpg

diff --git a/public/images/Footer BeatsMarket.jpg b/public/images/Footer BeatsMarket.jpg
deleted file mode 100644
index 34da259..0000000
Binary files a/public/images/Footer BeatsMarket.jpg and /dev/null differ

commit 0ff5b4ff470b378788845f1066b5fa2503d5b001
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:33:36 2025 +0200

    Add files via upload

diff --git a/public/images/footerbeatsmarket.jpg b/public/images/footerbeatsmarket.jpg
new file mode 100644
index 0000000..34da259
Binary files /dev/null and b/public/images/footerbeatsmarket.jpg differ

commit 2ed714f578927d3e9d67b2171dc6e28a95d9dd26
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:35:23 2025 +0200

    Update Footer.tsx

diff --git a/src/components/Footer.tsx b/src/components/Footer.tsx
index d51fb39..d228e26 100644
--- a/src/components/Footer.tsx
+++ b/src/components/Footer.tsx
@@ -10,7 +10,7 @@ export function Footer() {
         {/* Image en bas du footer */}
         <div className="mt-6">
           <img
-            src="/images/footer-beatsmarket.jpg"
+            src="/images/footerbeatsmarket.jpg"
             alt="Footer BeatsMarket"
             className="mx-auto max-w-full h-auto rounded-md shadow-lg"
           />

commit 07c0797b63248c86130d9e34fd2cb389429c584b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:21:09 2025 +0200

    Mise à jour de la config et ajout de fichiers

diff --git a/commits.txt b/commits.txt
new file mode 100644
index 0000000..2c77b79
--- /dev/null
+++ b/commits.txt
@@ -0,0 +1,211 @@
+* b3892e3 (HEAD -> main, origin/main, origin/HEAD) Update Footer.tsx
+* 3685a8d Update Footer.tsx
+* 7c4e7f9 Update Footer.tsx
+* 186945e Update Footer.tsx
+* b02188a Update Header.tsx
+* 9a3b76a Update Footer.tsx
+* b0f865c Update page.tsx
+* 3436fcc Update footer.tsx
+* 89c4336 Update page.tsx
+* bdea0dd Create beatmakers-table.tsx
+* f05fbbc Create artists-table.tsx
+* 9cd50f9 Create page.tsx
+* c6dc9fe Create content-moderation.tsx
+* a4a89c0 Create recent-sales.tsx
+* 0cd4de6 Create revenue-chart.tsx
+* 1460b82 Create page.tsx
+* ac02a1a Create page.tsx
+* 689f145 Create page.tsx
+* 2c9b081 Create page.tsx
+* 62bb191 Update Footer.tsx
+* 39e563f Update page.tsx
+* dfa7023 Create footer.tsx
+* 26243f4 Update BeatForm.tsx
+* 8f59220 Create BeatActionsMenu.tsx
+* cef0b0b Create BeatTable.tsx
+* 46c0b30 Update page.tsx
+* 166641e Create BeatForm.tsx
+* d7d9460 Update page.tsx
+* 8567691 Update page.tsx
+* 9ebd8ac Update page.tsx
+* 93352b0 Create BeatStatusBadge.tsx
+* ca1c168 Create Link.tsx
+* e3ba843 Update page.tsx
+* 4100bf4 Update Footer.tsx
+* 470c020 Update page.tsx
+* 4b580af Create page.tsx
+* 8594e9b Create page.tsx
+* 6e466d1 Update page.tsx
+* 89c21ac Create AuthForm.tsx
+* 987a967 Create useAuth.ts
+* 290d7d7 Create users.tsx
+* cafdf16 Create api.ts
+* b68d59c Update supabase.ts
+* ce52e5f Create supabase.ts
+* ec1475d Update .env.local
+* d55ff98 Update AuthProfile.tsx
+* 53a68ad Create supabaseClient.ts
+* 1192863 Create AuthProfile.tsx
+* f7560a4 Create saveFiles.ts
+* 7452313 Create beatmaker.tsx
+* cc5ca39 Create BeatmakerUpload.tsx
+* 71b1c93 Update upload.ts
+* f566a6f Create upload.ts
+* 653396f Create upload-image.tsx
+* d7036a4 Create upload.ts
+* bf19315 Update page.tsx
+* f2cd8fc Update page.tsx
+* 7a62b66 Create beats.ts
+* afaf0e4 Create page.tsx
+* 02b7b4c Create page.tsx
+* 2034973 Create page.tsx
+* 8c917f6 Create revenueCalculator.ts
+* c9272f5 Create EditLicensesTable.tsx
+* eb4ac75 Create calculateEarnings.ts
+* 67be016 Create EditBeatForm.tsx
+* 86f7bc7 Create [beatId].tsx
+* b9d79e8 Create [id].tsx
+* ef8381f Create index.tsx
+* 531d0be Create content-manager.tsx
+* b65be1e Create finance.tsx
+* 6e98cbb Create dashboard.tsx
+* 4390308 Update superadmin.tsx
+* e847889 Update openai.ts
+* d1d3de9 Update package.json
+* aa15f64 Create openai.ts
+* 2c38987 Update superadmin.tsx
+* 322693d Update superadmin.tsx
+* 29aeefd Create superadmin.tsx
+* 906b3cc Update package.json
+* 6885dae Update openai.js
+* 9d765ca Create openai.js
+* 789949d Update .env.local
+* c70f1a5 Create .gitignore
+* 88cc8df Update .env.local
+* 5910bfd Update .env.local
+* cf3252c Create .env.local
+* 0007c19 Create assistant-ia.ts
+* 3d2b612 Update AssistantIA.tsx
+* 0161d5a Update TextEditor.tsx
+* 8a03461 Create page.tsx
+* 278e9b1 Create AssistantIA.tsx
+* 7d57d3c Create TextEditor.tsx
+* 6e9ea6f Update page.tsx
+* ff64ce5 Create page.tsx
+* c3a0d54 Create page.tsx
+* 7978d71 Update README.md
+* 9a949c3 Update deploy-vercel.yml
+* 7b420f6 Create deploy-vercel.yml
+* 03fb59a Create ci.yml
+* 1d19f97 Update package.json
+* 97a1fde Create generate-ui-index.js
+* 4823f31 Update package.json
+* 77db6c0 Create generate-ui-index.js
+* 80bd0aa Update README.md
+* cfd1901 Create index.ts
+* 547cf2a Create tooltip.tsx
+* c3a2350 Update textarea.tsx
+* a33ef65 Update status-badge.tsx
+* 36955ca Update stat-card.tsx
+* 39f8369 Update dropdown-menu.tsx
+* 167b488 Update dropdown-menu.tsx
+* 415a578 Update card.tsx
+* d709aa1 Update button.tsx
+* 99ef145 Create BadgeExample.tsx
+* 62d24d5 Create ActionMenuExample.tsx
+* 169c9c9 Create AccordionExample.tsx
+* c483114 Create README.md
+* d55cc5d Update button.tsx
+* 1cf60e5 Update utils.ts
+* f1d79cd Update button.tsx
+* f9ce4a2 Update postcss.config.js
+* 2dbf4b5 Create tailwind.config.js
+* 1aa714e Update jsconfig.json
+* e617c5c Update package.json
+* 5c106a5 Update button.tsx
+* deab655 Update status-badge.tsx
+* 51db4c1 Update badge.tsx
+* b01a215 Update accordion.tsx
+* 7742dd7 Create utils.ts
+* 313c843 Update package.json
+* ebb4cfb Update tsconfig.json
+* 001d41d Update jsconfig.json
+* a151c1a Update stat-card.tsx
+* 2c47cf6 Update action-menu.tsx
+* 2818bd2 Update accordion.tsx
+* 54fcbc6 Update input.tsx
+* 85d4688 Create stat-card.tsx
+* 74274b6 Update status-badge.tsx
+* 85c9638 Create label.tsx
+* 5d5e101 Update textarea.tsx
+* b54184a Update input.tsx
+* 6fdafd1 Create dropdown-menu.tsx
+* ad070e7 Update button.tsx
+* c20466d Create badge.tsx
+* 6dac407 Create card.tsx
+* 79bd033 Create action-menu.tsx
+* e069927 Create status-badge.tsx
+* cccb2a0 Create accordion.tsx
+* cc202ee Create textarea.tsx
+* cf6834c Create input.tsx
+* 343864e Create button.tsx
+* 9e5b9d0 Create jsconfig.json
+* 9527497 Update tsconfig.json
+* c0df1c4 Update tsconfig.json
+* 5d88940 Delete src/pages directory
+* ca69ee0 Update page.tsx
+* 1660af7 Create page.tsx
+* 88c0987 Update next.config.js
+* 397624d Update pricing.tsx
+* dc733ee Create SubscriptionForm.tsx
+* 37cc9da Update PricingPlan.tsx
+* ba2a552 Update pricing.tsx
+* a2f5bf5 Create Footer.tsx
+* 473d522 Update pricing.tsx
+* b94dd23 Update pricing.tsx
+* dd57607 Create pricing.tsx
+* f40ff02 Create PricingPlan.tsx
+* ec11a75 Update page.tsx
+* a538d6c Update page.tsx
+* 5dad86c Update page.tsx
+* c25e885 Update page.tsx
+* aecd906 Create Services.tsx
+* 5d7db09 Create Licenses.tsx
+* fe088af Update plans.tsx
+* 7564418 Update page.tsx
+* 9f11bd8 Update plans.tsx
+* 92d1e75 Update plans.tsx
+* 14930b7 Create plans.tsx
+* 8d214ca Create page.tsx
+* 41714ed Update page.tsx
+* 459eccc Create page.tsx
+* 5cdc2dc Create stat-card.tsx
+* 277297f Create page.tsx
+* 9ce1ebd Update page.tsx
+* 1366a82 Update page.tsx
+* bde1227 Create action-menu.tsx
+* e5cda9d Create status-badge.tsx
+* 4fbf1c8 Create page.tsx
+* ecc5a33 Create page.tsx
+* 8941cf0 Create page.tsx
+* 5d4ef2d Update page.tsx
+* 309d45c Update page.tsx
+* 25874bd Create page.tsx
+* 6759008 Update page.tsx
+* d3069dd Create page.tsx
+* a4a8481 Create page.tsx
+* afca515 Create page.tsx
+* 22916e6 Update layout.tsx
+* ab92d7d Create Footer.tsx
+* bf75338 Update layout.tsx
+* 4084223 Create Header.tsx
+* 054b459 Create layout.tsx
+* a13409c Create README.md
+* 4df53a7 Create next-env.d.ts
+* 99ff85b Create tsconfig.json
+* 0b44fee Create page.tsx
+* ed4f172 Create globals.css
+* 09227cb Create postcss.config.js
+* f84b6b8 Create tailwind.config.ts
+* eca7b8f Create next.config.js
+* bf7a422 Create package.json
diff --git a/fix-link-usage.sh b/fix-link-usage.sh
new file mode 100755
index 0000000..8b13789
--- /dev/null
+++ b/fix-link-usage.sh
@@ -0,0 +1 @@
+
diff --git a/next-env.d.ts b/next-env.d.ts
index 0b90e22..3cd7048 100644
--- a/next-env.d.ts
+++ b/next-env.d.ts
@@ -1,5 +1,6 @@
 /// <reference types="next" />
-/// <reference types="next/types/global" />
 /// <reference types="next/image-types/global" />
+/// <reference types="next/navigation-types/compat/navigation" />
 
 // NOTE: This file should not be edited
+// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
diff --git a/next.config.js b/next.config.js
index 210c266..73b610f 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,9 +1,12 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
+<<<<<<< HEAD
   reactStrictMode: true,
   experimental: {
     disableCssModulesLightningCss: true
   },
+=======
+>>>>>>> 66524c8 (Mise à jour de la config et ajout de fichiers)
   images: {
     domains: ['yourdomain.com'],
   },
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..f6076ce
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,2633 @@
+{
+  "name": "beatsmarket",
+  "version": "1.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "beatsmarket",
+      "version": "1.0.0",
+      "dependencies": {
+        "@radix-ui/react-accordion": "^1.2.11",
+        "lucide-react": "^0.525.0",
+        "next": "^15.4.2",
+        "openai": "^4.12.0",
+        "react": "^18.2.0",
+        "react-dom": "^18.2.0",
+        "typescript": "^5.1.3"
+      },
+      "devDependencies": {
+        "@tailwindcss/postcss": "^4.1.11",
+        "@types/node": "^20.2.5",
+        "@types/react": "^18.2.6",
+        "autoprefixer": "^10.4.21",
+        "postcss": "^8.5.6",
+        "tailwindcss": "^4.1.11"
+      }
+    },
+    "node_modules/@alloc/quick-lru": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
+      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@ampproject/remapping": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
+      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@emnapi/runtime": {
+      "version": "1.4.5",
+      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.5.tgz",
+      "integrity": "sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "tslib": "^2.4.0"
+      }
+    },
+    "node_modules/@img/sharp-darwin-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
+      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-darwin-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-darwin-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
+      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-darwin-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-libvips-darwin-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
+      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-darwin-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
+      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-arm": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
+      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
+      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-ppc64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
+      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-s390x": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
+      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
+      "cpu": [
+        "s390x"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
+      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
+      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
+      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-linux-arm": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
+      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-arm": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
+      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-ppc64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
+      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-ppc64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-s390x": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
+      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
+      "cpu": [
+        "s390x"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-s390x": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
+      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linuxmusl-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
+      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linuxmusl-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
+      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-wasm32": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
+      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
+      "cpu": [
+        "wasm32"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/runtime": "^1.4.4"
+      },
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
+      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-ia32": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
+      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
+      "cpu": [
+        "ia32"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
+      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@isaacs/fs-minipass": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
+      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "minipass": "^7.0.4"
+      },
+      "engines": {
+        "node": ">=18.0.0"
+      }
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.12",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
+      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.0",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
+      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.5.4",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
+      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.29",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
+      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/@next/env": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.2.tgz",
+      "integrity": "sha512-kd7MvW3pAP7tmk1NaiX4yG15xb2l4gNhteKQxt3f+NGR22qwPymn9RBuv26QKfIKmfo6z2NpgU8W2RT0s0jlvg==",
+      "license": "MIT"
+    },
+    "node_modules/@next/swc-darwin-arm64": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.2.tgz",
+      "integrity": "sha512-ovqjR8NjCBdBf1U+R/Gvn0RazTtXS9n6wqs84iFaCS1NHbw9ksVE4dfmsYcLoyUVd9BWE0bjkphOWrrz8uz/uw==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-darwin-x64": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.2.tgz",
+      "integrity": "sha512-I8d4W7tPqbdbHRI4z1iBfaoJIBrEG4fnWKIe+Rj1vIucNZ5cEinfwkBt3RcDF00bFRZRDpvKuDjgMFD3OyRBnw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-arm64-gnu": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.2.tgz",
+      "integrity": "sha512-lvhz02dU3Ec5thzfQ2RCUeOFADjNkS/px1W7MBt7HMhf0/amMfT8Z/aXOwEA+cVWN7HSDRSUc8hHILoHmvajsg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-arm64-musl": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.2.tgz",
+      "integrity": "sha512-v+5PPfL8UP+KKHS3Mox7QMoeFdMlaV0zeNMIF7eLC4qTiVSO0RPNnK0nkBZSD5BEkkf//c+vI9s/iHxddCZchA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-x64-gnu": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.2.tgz",
+      "integrity": "sha512-PHLYOC9W2cu6I/JEKo77+LW4uPNvyEQiSkVRUQPsOIsf01PRr8PtPhwtz3XNnC9At8CrzPkzqQ9/kYDg4R4Inw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-x64-musl": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.2.tgz",
+      "integrity": "sha512-lpmUF9FfLFns4JbTu+5aJGA8aR9dXaA12eoNe9CJbVkGib0FDiPa4kBGTwy0xDxKNGlv3bLDViyx1U+qafmuJQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-win32-arm64-msvc": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.2.tgz",
+      "integrity": "sha512-aMjogoGnRepas0LQ/PBPsvvUzj+IoXw2IoDSEShEtrsu2toBiaxEWzOQuPZ8nie8+1iF7TA63S7rlp3YWAjNEg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-win32-x64-msvc": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.2.tgz",
+      "integrity": "sha512-FxwauyexSFu78wEqR/+NB9MnqXVj6SxJKwcVs2CRjeSX/jBagDCgtR2W36PZUYm0WPgY1pQ3C1+nn7zSnwROuw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@radix-ui/primitive": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
+      "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==",
+      "license": "MIT"
+    },
+    "node_modules/@radix-ui/react-accordion": {
+      "version": "1.2.11",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.11.tgz",
+      "integrity": "sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/primitive": "1.1.2",
+        "@radix-ui/react-collapsible": "1.1.11",
+        "@radix-ui/react-collection": "1.1.7",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-direction": "1.1.1",
+        "@radix-ui/react-id": "1.1.1",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-controllable-state": "1.2.2"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collapsible": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.11.tgz",
+      "integrity": "sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/primitive": "1.1.2",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-id": "1.1.1",
+        "@radix-ui/react-presence": "1.1.4",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-controllable-state": "1.2.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collapsible/node_modules/@radix-ui/react-presence": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz",
+      "integrity": "sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collection": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
+      "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-slot": "1.2.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-primitive": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
+      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-slot": "1.2.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-compose-refs": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
+      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-context": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
+      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-direction": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
+      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-id": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
+      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-slot": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
+      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-controllable-state": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
+      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-effect-event": "0.0.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-effect-event": {
+      "version": "0.0.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
+      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-layout-effect": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
+      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@swc/helpers": {
+      "version": "0.5.15",
+      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
+      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "tslib": "^2.8.0"
+      }
+    },
+    "node_modules/@tailwindcss/node": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.11.tgz",
+      "integrity": "sha512-yzhzuGRmv5QyU9qLNg4GTlYI6STedBWRE7NjxP45CsFYYq9taI0zJXZBMqIC/c8fViNLhmrbpSFS57EoxUmD6Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@ampproject/remapping": "^2.3.0",
+        "enhanced-resolve": "^5.18.1",
+        "jiti": "^2.4.2",
+        "lightningcss": "1.30.1",
+        "magic-string": "^0.30.17",
+        "source-map-js": "^1.2.1",
+        "tailwindcss": "4.1.11"
+      }
+    },
+    "node_modules/@tailwindcss/oxide": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.11.tgz",
+      "integrity": "sha512-Q69XzrtAhuyfHo+5/HMgr1lAiPP/G40OMFAnws7xcFEYqcypZmdW8eGXaOUIeOl1dzPJBPENXgbjsOyhg2nkrg==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "detect-libc": "^2.0.4",
+        "tar": "^7.4.3"
+      },
+      "engines": {
+        "node": ">= 10"
+      },
+      "optionalDependencies": {
+        "@tailwindcss/oxide-android-arm64": "4.1.11",
+        "@tailwindcss/oxide-darwin-arm64": "4.1.11",
+        "@tailwindcss/oxide-darwin-x64": "4.1.11",
+        "@tailwindcss/oxide-freebsd-x64": "4.1.11",
+        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.11",
+        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.11",
+        "@tailwindcss/oxide-linux-arm64-musl": "4.1.11",
+        "@tailwindcss/oxide-linux-x64-gnu": "4.1.11",
+        "@tailwindcss/oxide-linux-x64-musl": "4.1.11",
+        "@tailwindcss/oxide-wasm32-wasi": "4.1.11",
+        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.11",
+        "@tailwindcss/oxide-win32-x64-msvc": "4.1.11"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-android-arm64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.11.tgz",
+      "integrity": "sha512-3IfFuATVRUMZZprEIx9OGDjG3Ou3jG4xQzNTvjDoKmU9JdmoCohQJ83MYd0GPnQIu89YoJqvMM0G3uqLRFtetg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-arm64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.11.tgz",
+      "integrity": "sha512-ESgStEOEsyg8J5YcMb1xl8WFOXfeBmrhAwGsFxxB2CxY9evy63+AtpbDLAyRkJnxLy2WsD1qF13E97uQyP1lfQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-x64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.11.tgz",
+      "integrity": "sha512-EgnK8kRchgmgzG6jE10UQNaH9Mwi2n+yw1jWmof9Vyg2lpKNX2ioe7CJdf9M5f8V9uaQxInenZkOxnTVL3fhAw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-freebsd-x64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.11.tgz",
+      "integrity": "sha512-xdqKtbpHs7pQhIKmqVpxStnY1skuNh4CtbcyOHeX1YBE0hArj2romsFGb6yUmzkq/6M24nkxDqU8GYrKrz+UcA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.11.tgz",
+      "integrity": "sha512-ryHQK2eyDYYMwB5wZL46uoxz2zzDZsFBwfjssgB7pzytAeCCa6glsiJGjhTEddq/4OsIjsLNMAiMlHNYnkEEeg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.11.tgz",
+      "integrity": "sha512-mYwqheq4BXF83j/w75ewkPJmPZIqqP1nhoghS9D57CLjsh3Nfq0m4ftTotRYtGnZd3eCztgbSPJ9QhfC91gDZQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.11.tgz",
+      "integrity": "sha512-m/NVRFNGlEHJrNVk3O6I9ggVuNjXHIPoD6bqay/pubtYC9QIdAMpS+cswZQPBLvVvEF6GtSNONbDkZrjWZXYNQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.11.tgz",
+      "integrity": "sha512-YW6sblI7xukSD2TdbbaeQVDysIm/UPJtObHJHKxDEcW2exAtY47j52f8jZXkqE1krdnkhCMGqP3dbniu1Te2Fg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.11.tgz",
+      "integrity": "sha512-e3C/RRhGunWYNC3aSF7exsQkdXzQ/M+aYuZHKnw4U7KQwTJotnWsGOIVih0s2qQzmEzOFIJ3+xt7iq67K/p56Q==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.11.tgz",
+      "integrity": "sha512-Xo1+/GU0JEN/C/dvcammKHzeM6NqKovG+6921MR6oadee5XPBaKOumrJCXvopJ/Qb5TH7LX/UAywbqrP4lax0g==",
+      "bundleDependencies": [
+        "@napi-rs/wasm-runtime",
+        "@emnapi/core",
+        "@emnapi/runtime",
+        "@tybys/wasm-util",
+        "@emnapi/wasi-threads",
+        "tslib"
+      ],
+      "cpu": [
+        "wasm32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/core": "^1.4.3",
+        "@emnapi/runtime": "^1.4.3",
+        "@emnapi/wasi-threads": "^1.0.2",
+        "@napi-rs/wasm-runtime": "^0.2.11",
+        "@tybys/wasm-util": "^0.9.0",
+        "tslib": "^2.8.0"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.11.tgz",
+      "integrity": "sha512-UgKYx5PwEKrac3GPNPf6HVMNhUIGuUh4wlDFR2jYYdkX6pL/rn73zTq/4pzUm8fOjAn5L8zDeHp9iXmUGOXZ+w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.11.tgz",
+      "integrity": "sha512-YfHoggn1j0LK7wR82TOucWc5LDCguHnoS879idHekmmiR7g9HUtMw9MI0NHatS28u/Xlkfi9w5RJWgz2Dl+5Qg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/postcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.11.tgz",
+      "integrity": "sha512-q/EAIIpF6WpLhKEuQSEVMZNMIY8KhWoAemZ9eylNAih9jxMGAYPPWBn3I9QL/2jZ+e7OEz/tZkX5HwbBR4HohA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@alloc/quick-lru": "^5.2.0",
+        "@tailwindcss/node": "4.1.11",
+        "@tailwindcss/oxide": "4.1.11",
+        "postcss": "^8.4.41",
+        "tailwindcss": "4.1.11"
+      }
+    },
+    "node_modules/@types/node": {
+      "version": "20.19.9",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
+      "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
+      "license": "MIT",
+      "dependencies": {
+        "undici-types": "~6.21.0"
+      }
+    },
+    "node_modules/@types/node-fetch": {
+      "version": "2.6.12",
+      "resolved": "https://registry.npmjs.org/@types/node-fetch/-/node-fetch-2.6.12.tgz",
+      "integrity": "sha512-8nneRWKCg3rMtF69nLQJnOYUcbafYeFSjqkw3jCRLsqkWFlHaoQrr5mXmofFGOx3DKn7UfmBMyov8ySvLRVldA==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/node": "*",
+        "form-data": "^4.0.0"
+      }
+    },
+    "node_modules/@types/prop-types": {
+      "version": "15.7.15",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
+      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
+      "devOptional": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/react": {
+      "version": "18.3.23",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz",
+      "integrity": "sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==",
+      "devOptional": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/prop-types": "*",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/abort-controller": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
+      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
+      "license": "MIT",
+      "dependencies": {
+        "event-target-shim": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=6.5"
+      }
+    },
+    "node_modules/agentkeepalive": {
+      "version": "4.6.0",
+      "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.6.0.tgz",
+      "integrity": "sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==",
+      "license": "MIT",
+      "dependencies": {
+        "humanize-ms": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 8.0.0"
+      }
+    },
+    "node_modules/asynckit": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
+      "license": "MIT"
+    },
+    "node_modules/autoprefixer": {
+      "version": "10.4.21",
+      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
+      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "browserslist": "^4.24.4",
+        "caniuse-lite": "^1.0.30001702",
+        "fraction.js": "^4.3.7",
+        "normalize-range": "^0.1.2",
+        "picocolors": "^1.1.1",
+        "postcss-value-parser": "^4.2.0"
+      },
+      "bin": {
+        "autoprefixer": "bin/autoprefixer"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      },
+      "peerDependencies": {
+        "postcss": "^8.1.0"
+      }
+    },
+    "node_modules/browserslist": {
+      "version": "4.25.1",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
+      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001726",
+        "electron-to-chromium": "^1.5.173",
+        "node-releases": "^2.0.19",
+        "update-browserslist-db": "^1.1.3"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      }
+    },
+    "node_modules/call-bind-apply-helpers": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
+      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001727",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
+      "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "CC-BY-4.0"
+    },
+    "node_modules/chownr": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
+      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
+      "dev": true,
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/client-only": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
+      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
+      "license": "MIT"
+    },
+    "node_modules/color": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
+      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "color-convert": "^2.0.1",
+        "color-string": "^1.9.0"
+      },
+      "engines": {
+        "node": ">=12.5.0"
+      }
+    },
+    "node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "license": "MIT",
+      "optional": true
+    },
+    "node_modules/color-string": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
+      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "color-name": "^1.0.0",
+        "simple-swizzle": "^0.2.2"
+      }
+    },
+    "node_modules/combined-stream": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
+      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
+      "license": "MIT",
+      "dependencies": {
+        "delayed-stream": "~1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
+      "devOptional": true,
+      "license": "MIT"
+    },
+    "node_modules/delayed-stream": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/detect-libc": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
+      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
+      "devOptional": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/dunder-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
+      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.2.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.5.189",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.189.tgz",
+      "integrity": "sha512-y9D1ntS1ruO/pZ/V2FtLE+JXLQe28XoRpZ7QCCo0T8LdQladzdcOVQZH/IWLVJvCw12OGMb6hYOeOAjntCmJRQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/enhanced-resolve": {
+      "version": "5.18.2",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
+      "integrity": "sha512-6Jw4sE1maoRJo3q8MsSIn2onJFbLTOjY9hlx4DZXmOKvLRd1Ok2kXmAGXaafL2+ijsJZ1ClYbl/pmqr9+k4iUQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "graceful-fs": "^4.2.4",
+        "tapable": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/es-define-property": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
+      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-errors": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
+      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
+      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-set-tostringtag": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
+      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/escalade": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
+      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/event-target-shim": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
+      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/form-data": {
+      "version": "4.0.4",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
+      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
+      "license": "MIT",
+      "dependencies": {
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.8",
+        "es-set-tostringtag": "^2.1.0",
+        "hasown": "^2.0.2",
+        "mime-types": "^2.1.12"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/form-data-encoder": {
+      "version": "1.7.2",
+      "resolved": "https://registry.npmjs.org/form-data-encoder/-/form-data-encoder-1.7.2.tgz",
+      "integrity": "sha512-qfqtYan3rxrnCk1VYaA4H+Ms9xdpPqvLZa6xmMgFvhO32x7/3J/ExcTd6qpxM0vH2GdMI+poehyBZvqfMTto8A==",
+      "license": "MIT"
+    },
+    "node_modules/formdata-node": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/formdata-node/-/formdata-node-4.4.1.tgz",
+      "integrity": "sha512-0iirZp3uVDjVGt9p49aTaqjk84TrglENEDuqfdlZQ1roC9CWlPk6Avf8EEnZNcAqPonwkG35x4n3ww/1THYAeQ==",
+      "license": "MIT",
+      "dependencies": {
+        "node-domexception": "1.0.0",
+        "web-streams-polyfill": "4.0.0-beta.3"
+      },
+      "engines": {
+        "node": ">= 12.20"
+      }
+    },
+    "node_modules/fraction.js": {
+      "version": "4.3.7",
+      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
+      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "type": "patreon",
+        "url": "https://github.com/sponsors/rawify"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-intrinsic": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
+      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "es-define-property": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
+        "function-bind": "^1.1.2",
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "math-intrinsics": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
+      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/gopd": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
+      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/graceful-fs": {
+      "version": "4.2.11",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
+      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/has-symbols": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
+      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-tostringtag": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
+      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
+      "license": "MIT",
+      "dependencies": {
+        "has-symbols": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "license": "MIT",
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/humanize-ms": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
+      "integrity": "sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==",
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.0.0"
+      }
+    },
+    "node_modules/is-arrayish": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
+      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
+      "license": "MIT",
+      "optional": true
+    },
+    "node_modules/jiti": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
+      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jiti": "lib/jiti-cli.mjs"
+      }
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
+      "license": "MIT"
+    },
+    "node_modules/lightningcss": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
+      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
+      "dev": true,
+      "license": "MPL-2.0",
+      "dependencies": {
+        "detect-libc": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      },
+      "optionalDependencies": {
+        "lightningcss-darwin-arm64": "1.30.1",
+        "lightningcss-darwin-x64": "1.30.1",
+        "lightningcss-freebsd-x64": "1.30.1",
+        "lightningcss-linux-arm-gnueabihf": "1.30.1",
+        "lightningcss-linux-arm64-gnu": "1.30.1",
+        "lightningcss-linux-arm64-musl": "1.30.1",
+        "lightningcss-linux-x64-gnu": "1.30.1",
+        "lightningcss-linux-x64-musl": "1.30.1",
+        "lightningcss-win32-arm64-msvc": "1.30.1",
+        "lightningcss-win32-x64-msvc": "1.30.1"
+      }
+    },
+    "node_modules/lightningcss-darwin-arm64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
+      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-darwin-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
+      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-freebsd-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
+      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm-gnueabihf": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
+      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
+      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
+      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-x64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
+      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-x64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
+      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-win32-arm64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
+      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-win32-x64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
+      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "license": "MIT",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
+    "node_modules/lucide-react": {
+      "version": "0.525.0",
+      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.525.0.tgz",
+      "integrity": "sha512-Tm1txJ2OkymCGkvwoHt33Y2JpN5xucVq1slHcgE6Lk0WjDfjgKWor5CdVER8U6DvcfMwh4M8XxmpTiyzfmfDYQ==",
+      "license": "ISC",
+      "peerDependencies": {
+        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      }
+    },
+    "node_modules/magic-string": {
+      "version": "0.30.17",
+      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
+      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.0"
+      }
+    },
+    "node_modules/math-intrinsics": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
+      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/mime-db": {
+      "version": "1.52.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
+      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mime-types": {
+      "version": "2.1.35",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
+      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "license": "MIT",
+      "dependencies": {
+        "mime-db": "1.52.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/minipass": {
+      "version": "7.1.2",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
+      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
+      "dev": true,
+      "license": "ISC",
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      }
+    },
+    "node_modules/minizlib": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
+      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "minipass": "^7.1.2"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
+    "node_modules/mkdirp": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
+      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "mkdirp": "dist/cjs/src/bin.js"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.11",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
+      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/next": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/next/-/next-15.4.2.tgz",
+      "integrity": "sha512-oH1rmFso+84NIkocfuxaGKcXIjMUTmnzV2x0m8qsYtB4gD6iflLMESXt5XJ8cFgWMBei4v88rNr/j+peNg72XA==",
+      "license": "MIT",
+      "dependencies": {
+        "@next/env": "15.4.2",
+        "@swc/helpers": "0.5.15",
+        "caniuse-lite": "^1.0.30001579",
+        "postcss": "8.4.31",
+        "styled-jsx": "5.1.6"
+      },
+      "bin": {
+        "next": "dist/bin/next"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
+      },
+      "optionalDependencies": {
+        "@next/swc-darwin-arm64": "15.4.2",
+        "@next/swc-darwin-x64": "15.4.2",
+        "@next/swc-linux-arm64-gnu": "15.4.2",
+        "@next/swc-linux-arm64-musl": "15.4.2",
+        "@next/swc-linux-x64-gnu": "15.4.2",
+        "@next/swc-linux-x64-musl": "15.4.2",
+        "@next/swc-win32-arm64-msvc": "15.4.2",
+        "@next/swc-win32-x64-msvc": "15.4.2",
+        "sharp": "^0.34.3"
+      },
+      "peerDependencies": {
+        "@opentelemetry/api": "^1.1.0",
+        "@playwright/test": "^1.51.1",
+        "babel-plugin-react-compiler": "*",
+        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
+        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
+        "sass": "^1.3.0"
+      },
+      "peerDependenciesMeta": {
+        "@opentelemetry/api": {
+          "optional": true
+        },
+        "@playwright/test": {
+          "optional": true
+        },
+        "babel-plugin-react-compiler": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/next/node_modules/postcss": {
+      "version": "8.4.31",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
+      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.6",
+        "picocolors": "^1.0.0",
+        "source-map-js": "^1.0.2"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/node-domexception": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
+      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
+      "deprecated": "Use your platform's native DOMException instead",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/jimmywarting"
+        },
+        {
+          "type": "github",
+          "url": "https://paypal.me/jimmywarting"
+        }
+      ],
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.5.0"
+      }
+    },
+    "node_modules/node-fetch": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
+      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
+      "license": "MIT",
+      "dependencies": {
+        "whatwg-url": "^5.0.0"
+      },
+      "engines": {
+        "node": "4.x || >=6.0.0"
+      },
+      "peerDependencies": {
+        "encoding": "^0.1.0"
+      },
+      "peerDependenciesMeta": {
+        "encoding": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/node-releases": {
+      "version": "2.0.19",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
+      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/normalize-range": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
+      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/openai": {
+      "version": "4.104.0",
+      "resolved": "https://registry.npmjs.org/openai/-/openai-4.104.0.tgz",
+      "integrity": "sha512-p99EFNsA/yX6UhVO93f5kJsDRLAg+CTA2RBqdHK4RtK8u5IJw32Hyb2dTGKbnnFmnuoBv5r7Z2CURI9sGZpSuA==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/node": "^18.11.18",
+        "@types/node-fetch": "^2.6.4",
+        "abort-controller": "^3.0.0",
+        "agentkeepalive": "^4.2.1",
+        "form-data-encoder": "1.7.2",
+        "formdata-node": "^4.3.2",
+        "node-fetch": "^2.6.7"
+      },
+      "bin": {
+        "openai": "bin/cli"
+      },
+      "peerDependencies": {
+        "ws": "^8.18.0",
+        "zod": "^3.23.8"
+      },
+      "peerDependenciesMeta": {
+        "ws": {
+          "optional": true
+        },
+        "zod": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/openai/node_modules/@types/node": {
+      "version": "18.19.120",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.19.120.tgz",
+      "integrity": "sha512-WtCGHFXnVI8WHLxDAt5TbnCM4eSE+nI0QN2NJtwzcgMhht2eNz6V9evJrk+lwC8bCY8OWV5Ym8Jz7ZEyGnKnMA==",
+      "license": "MIT",
+      "dependencies": {
+        "undici-types": "~5.26.4"
+      }
+    },
+    "node_modules/openai/node_modules/undici-types": {
+      "version": "5.26.5",
+      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz",
+      "integrity": "sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==",
+      "license": "MIT"
+    },
+    "node_modules/picocolors": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
+      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
+      "license": "ISC"
+    },
+    "node_modules/postcss": {
+      "version": "8.5.6",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
+      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.11",
+        "picocolors": "^1.1.1",
+        "source-map-js": "^1.2.1"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/postcss-value-parser": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
+      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/react": {
+      "version": "18.2.0",
+      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
+      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "18.2.0",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
+      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0",
+        "scheduler": "^0.23.0"
+      },
+      "peerDependencies": {
+        "react": "^18.2.0"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.23.2",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
+      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      }
+    },
+    "node_modules/semver": {
+      "version": "7.7.2",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
+      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "license": "ISC",
+      "optional": true,
+      "bin": {
+        "semver": "bin/semver.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/sharp": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
+      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
+      "hasInstallScript": true,
+      "license": "Apache-2.0",
+      "optional": true,
+      "dependencies": {
+        "color": "^4.2.3",
+        "detect-libc": "^2.0.4",
+        "semver": "^7.7.2"
+      },
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-darwin-arm64": "0.34.3",
+        "@img/sharp-darwin-x64": "0.34.3",
+        "@img/sharp-libvips-darwin-arm64": "1.2.0",
+        "@img/sharp-libvips-darwin-x64": "1.2.0",
+        "@img/sharp-libvips-linux-arm": "1.2.0",
+        "@img/sharp-libvips-linux-arm64": "1.2.0",
+        "@img/sharp-libvips-linux-ppc64": "1.2.0",
+        "@img/sharp-libvips-linux-s390x": "1.2.0",
+        "@img/sharp-libvips-linux-x64": "1.2.0",
+        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
+        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
+        "@img/sharp-linux-arm": "0.34.3",
+        "@img/sharp-linux-arm64": "0.34.3",
+        "@img/sharp-linux-ppc64": "0.34.3",
+        "@img/sharp-linux-s390x": "0.34.3",
+        "@img/sharp-linux-x64": "0.34.3",
+        "@img/sharp-linuxmusl-arm64": "0.34.3",
+        "@img/sharp-linuxmusl-x64": "0.34.3",
+        "@img/sharp-wasm32": "0.34.3",
+        "@img/sharp-win32-arm64": "0.34.3",
+        "@img/sharp-win32-ia32": "0.34.3",
+        "@img/sharp-win32-x64": "0.34.3"
+      }
+    },
+    "node_modules/simple-swizzle": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
+      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "is-arrayish": "^0.3.1"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
+      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/styled-jsx": {
+      "version": "5.1.6",
+      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
+      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
+      "license": "MIT",
+      "dependencies": {
+        "client-only": "0.0.1"
+      },
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "peerDependencies": {
+        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
+      },
+      "peerDependenciesMeta": {
+        "@babel/core": {
+          "optional": true
+        },
+        "babel-plugin-macros": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/tailwindcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
+      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/tapable": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.2.tgz",
+      "integrity": "sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/tar": {
+      "version": "7.4.3",
+      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
+      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "@isaacs/fs-minipass": "^4.0.0",
+        "chownr": "^3.0.0",
+        "minipass": "^7.1.2",
+        "minizlib": "^3.0.1",
+        "mkdirp": "^3.0.1",
+        "yallist": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/tr46": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
+      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
+      "license": "MIT"
+    },
+    "node_modules/tslib": {
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
+      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
+      "license": "0BSD"
+    },
+    "node_modules/typescript": {
+      "version": "5.8.3",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
+      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
+      "license": "Apache-2.0",
+      "bin": {
+        "tsc": "bin/tsc",
+        "tsserver": "bin/tsserver"
+      },
+      "engines": {
+        "node": ">=14.17"
+      }
+    },
+    "node_modules/undici-types": {
+      "version": "6.21.0",
+      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
+      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
+      "license": "MIT"
+    },
+    "node_modules/update-browserslist-db": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
+      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "escalade": "^3.2.0",
+        "picocolors": "^1.1.1"
+      },
+      "bin": {
+        "update-browserslist-db": "cli.js"
+      },
+      "peerDependencies": {
+        "browserslist": ">= 4.21.0"
+      }
+    },
+    "node_modules/web-streams-polyfill": {
+      "version": "4.0.0-beta.3",
+      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz",
+      "integrity": "sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 14"
+      }
+    },
+    "node_modules/webidl-conversions": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
+      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/whatwg-url": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
+      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
+      "license": "MIT",
+      "dependencies": {
+        "tr46": "~0.0.3",
+        "webidl-conversions": "^3.0.0"
+      }
+    },
+    "node_modules/yallist": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
+      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
+      "dev": true,
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    }
+  }
+}
diff --git a/package.json b/package.json
index cc014d4..f0485c6 100644
--- a/package.json
+++ b/package.json
@@ -8,15 +8,20 @@
     "start": "next start"
   },
   "dependencies": {
-    "next": "13.4.10",
-    "react": "18.2.0",
-    "react-dom": "18.2.0",
+    "@radix-ui/react-accordion": "^1.2.11",
+    "lucide-react": "^0.525.0",
+    "next": "^15.4.2",
     "openai": "^4.12.0",
-    "tailwindcss": "^3.3.2",
+    "react": "^18.2.0",
+    "react-dom": "^18.2.0",
     "typescript": "^5.1.3"
   },
   "devDependencies": {
+    "@tailwindcss/postcss": "^4.1.11",
+    "@types/node": "^20.2.5",
     "@types/react": "^18.2.6",
-    "@types/node": "^20.2.5"
+    "autoprefixer": "^10.4.21",
+    "postcss": "^8.5.6",
+    "tailwindcss": "^4.1.11"
   }
 }
diff --git a/postcss.config.js b/postcss.config.js
index 4b5920a..060f421 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,7 +1,10 @@
 module.exports = {
   plugins: {
+<<<<<<< HEAD
     'tailwindcss/nesting': {},
     '@tailwindcss/postcss': {},
+=======
+>>>>>>> 66524c8 (Mise à jour de la config et ajout de fichiers)
     autoprefixer: {},
   },
 }
diff --git a/tsconfig.json b/tsconfig.json
index 6cf4856..e6584b2 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,7 +1,11 @@
 {
   "compilerOptions": {
     "target": "esnext",
-    "lib": ["dom", "dom.iterable", "esnext"],
+    "lib": [
+      "dom",
+      "dom.iterable",
+      "esnext"
+    ],
     "allowJs": true,
     "skipLibCheck": true,
     "strict": true,
@@ -15,8 +19,25 @@
     "jsx": "preserve",
     "baseUrl": ".",
     "paths": {
-      "@/*": ["src/*"]
-    }
+      "@/*": [
+        "src/*"
+      ]
+    },
+    "incremental": true,
+    "plugins": [
+      {
+        "name": "next"
+      }
+    ]
   },
-  "exclude": ["node_modules", ".next"]
+  "exclude": [
+    "node_modules",
+    ".next"
+  ],
+  "include": [
+    "next-env.d.ts",
+    ".next/types/**/*.ts",
+    "**/*.ts",
+    "**/*.tsx"
+  ]
 }

commit 9ba88fe187a8a7a7783f4c6a95d0acdb86c916d2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:57:02 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 73b610f..80d0ac8 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,12 +1,9 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
-<<<<<<< HEAD
   reactStrictMode: true,
   experimental: {
-    disableCssModulesLightningCss: true
+    disableCssModulesLightningCss: true,
   },
-=======
->>>>>>> 66524c8 (Mise à jour de la config et ajout de fichiers)
   images: {
     domains: ['yourdomain.com'],
   },

commit bea6285248dc4ed87e533b25d49f7dbdd719918f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 18:57:57 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 060f421..33ad091 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,10 +1,6 @@
 module.exports = {
   plugins: {
-<<<<<<< HEAD
-    'tailwindcss/nesting': {},
-    '@tailwindcss/postcss': {},
-=======
->>>>>>> 66524c8 (Mise à jour de la config et ajout de fichiers)
+    tailwindcss: {},
     autoprefixer: {},
   },
 }

commit f20eaddca06dc6c59344d3e6bb209a541e9a3bdd
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:05:45 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 80d0ac8..1da1b98 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,11 +1,8 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  experimental: {
-    disableCssModulesLightningCss: true,
-  },
   images: {
-    domains: ['yourdomain.com'],
+    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par ton domaine réel ou supprime cette ligne si inutile
   },
 }
 

commit 4bd823ad35f7a57ed7b9876aa562e803766a247c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:07:11 2025 +0200

    Update next.config.js
    
    Mise a jour code

diff --git a/next.config.js b/next.config.js
index 1da1b98..7bb2b8b 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par ton domaine réel ou supprime cette ligne si inutile
+    domains: ['yourdomain.com'], // adapte ce domaine si besoin
   },
 }
 

commit bc3a485b4614800b804072aeac7c461fba8ea4fa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:08:50 2025 +0200

    Update next.config.js
    
    Mise a jour

diff --git a/next.config.js b/next.config.js
index 7bb2b8b..43bf70a 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // adapte ce domaine si besoin
+    domains: ['yourdomain.com'], // remplace par ton domaine si besoin
   },
 }
 

commit 17ed5b55b03ad098fa22e74502737add4b5b0cc5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:11:00 2025 +0200

    Update next.config.js
    
    Mise a jour corrigé

diff --git a/next.config.js b/next.config.js
index 43bf70a..19fb2cf 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,8 +2,8 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // remplace par ton domaine si besoin
+    domains: ['yourdomain.com'], // adapte si besoin
   },
-}
+};
 
-module.exports = nextConfig
+module.exports = nextConfig;

commit da7300cbc7453ec3589a3e0caabad0a353ed381c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:12:00 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 19fb2cf..dbf1d8f 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // adapte si besoin
+    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par tes domaines d'images autorisés
   },
 };
 

commit c00396a0c7013be26ac2d050d086e3b2347a38bc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:19:01 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index dbf1d8f..889aab2 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,10 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par tes domaines d'images autorisés
+    domains: ['yourdomain.com'],
+  },
+  experimental: {
+    disableCssModulesLightningCss: true,
   },
 };
 

commit 532bf3323755c222a5eedd2c3823dcbc6a84ca29
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:21:51 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 889aab2..ae164cd 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,10 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'],
-  },
-  experimental: {
-    disableCssModulesLightningCss: true,
+    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par les domaines d'images autorisés (ex: 'localhost', 'vercel.app', etc.)
   },
 };
 

commit 43c36fea08e10b438b95c9c5328fcb324853bd3b
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:34:23 2025 +0200

    Delete public/images/.keep

diff --git a/public/images/.keep b/public/images/.keep
deleted file mode 100644
index 8b13789..0000000
--- a/public/images/.keep
+++ /dev/null
@@ -1 +0,0 @@
-

commit a7e061335cffc414e9807882d85ba5de9dc0e327
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:35:03 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index ae164cd..e131991 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par les domaines d'images autorisés (ex: 'localhost', 'vercel.app', etc.)
+    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par ton ou tes domaines réels, ex: 'localhost', 'vercel.app'
   },
 };
 

commit 3b319d00028790cb073b8eca09d4e8724a1097d6
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:42:54 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 33ad091..668a5b9 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    tailwindcss: {},
+    '@tailwindcss/postcss': {},
     autoprefixer: {},
   },
 }

commit 17c5f92cfb3623da6fb3d2a4663868d961036c37
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:46:32 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index 668a5b9..b4bee66 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -3,4 +3,4 @@ module.exports = {
     '@tailwindcss/postcss': {},
     autoprefixer: {},
   },
-}
+};

commit 8aee003e6c9c2b85cd4492f1155ece6d80bbb300
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:47:11 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 75167b6..87aedba 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -9,4 +9,4 @@ module.exports = {
     extend: {},
   },
   plugins: [],
-}
+};

commit a2e87cbb17cb9a5a134983e31966d8bbb8c6ba08
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:48:02 2025 +0200

    Update globals.css

commit 44a725dc3fa51b9c6330324ea41662638659a1a8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:50:03 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index e131991..95d0b08 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,9 +1,10 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  images: {
-    domains: ['yourdomain.com'], // Remplace 'yourdomain.com' par ton ou tes domaines réels, ex: 'localhost', 'vercel.app'
-  },
+  swcMinify: true,
+  // experimental: {
+  //   disableCssModulesLightningCss: true, // ❌ À retirer
+  // },
 };
 
 module.exports = nextConfig;

commit 0728b9a1527d80724e03edc1b2abb1b61099f7c0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 19:54:08 2025 +0200

    Fix next.config.js

diff --git a/next.config.js b/next.config.js
index 95d0b08..ed428fa 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,10 +1,9 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   reactStrictMode: true,
-  swcMinify: true,
-  // experimental: {
-  //   disableCssModulesLightningCss: true, // ❌ À retirer
-  // },
+  images: {
+    domains: ['yourdomain.com'], // Remplace par tes domaines d'images autorisés (ex: 'localhost', 'vercel.app', etc.)
+  },
 };
 
 module.exports = nextConfig;

commit 3c41a863e6f0c9dc6a3eb551d8cc95857ede65bc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Wed Jul 23 20:00:14 2025 +0200

    Fix next.config.js
    
    Fix

diff --git a/next.config.js b/next.config.js
index ed428fa..7a96842 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
 const nextConfig = {
   reactStrictMode: true,
   images: {
-    domains: ['yourdomain.com'], // Remplace par tes domaines d'images autorisés (ex: 'localhost', 'vercel.app', etc.)
+    domains: ['yourdomain.com'], // adapte à ton besoin
   },
 };
 

commit 041bb98adcfcf2fe4ad922f5fbd621d81c130055
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 08:36:59 2025 +0200

    Update page.tsx

diff --git a/src/app/beatmaker/admin/beat-edit/page.tsx b/src/app/beatmaker/admin/beat-edit/page.tsx
index 6e89d3a..147b189 100644
--- a/src/app/beatmaker/admin/beat-edit/page.tsx
+++ b/src/app/beatmaker/admin/beat-edit/page.tsx
@@ -1,93 +1,85 @@
-"use client"
+'use client'
 
-import { useRouter } from "next/navigation"
-import { useEffect, useState } from "react"
-import { useParams } from "next/navigation"
-import { Input } from "@/components/ui/input"
-import { Button } from "@/components/ui/button"
-import { Label } from "@/components/ui/label"
-import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select"
-import { toast } from "sonner"
-import BeatStatusBadge from "@/components/beat/BeatStatusBadge"
+import { useEffect, useState } from 'react'
+import { useParams } from 'next/navigation'
+import { Input } from '@/components/ui/input'
+import { Label } from '@/components/ui/label'
+import { Button } from '@/components/ui/button'
+import { Textarea } from '@/components/ui/textarea'
+import { toast } from 'sonner'
 
 export default function BeatEditPage() {
-  const router = useRouter()
-  const params = useParams()
-  const beatId = params?.id
-
-  const [title, setTitle] = useState("")
-  const [status, setStatus] = useState<"draft" | "published" | "disabled" | "blocked">("draft")
-  const [loading, setLoading] = useState(false)
+  const { beatId } = useParams() as { beatId: string }
+  const [title, setTitle] = useState('')
+  const [description, setDescription] = useState('')
+  const [isLoading, setIsLoading] = useState(false)
 
   useEffect(() => {
-    if (!beatId) return
     async function fetchBeat() {
-      const res = await fetch(`/api/beatmaker/beats/${beatId}`)
-      if (res.ok) {
+      try {
+        const res = await fetch(`/api/beatmaker/beats/${beatId}`)
+        if (!res.ok) throw new Error('Erreur lors du chargement du beat')
         const data = await res.json()
         setTitle(data.title)
-        setStatus(data.status)
-      } else {
-        toast.error("Beat introuvable.")
-        router.push("/beatmaker/admin/beat-list")
+        setDescription(data.description)
+      } catch (err) {
+        toast.error('Impossible de charger le beat')
+        console.error(err)
       }
     }
-    fetchBeat()
+
+    if (beatId) fetchBeat()
   }, [beatId])
 
-  const handleSave = async () => {
-    setLoading(true)
+  async function handleSave() {
+    setIsLoading(true)
     try {
       const res = await fetch(`/api/beatmaker/beats/${beatId}`, {
-        method: "PUT",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify({ title, status }),
+        method: 'PUT',
+        headers: {
+          'Content-Type': 'application/json',
+        },
+        body: JSON.stringify({ title, description }),
       })
-      if (!res.ok) throw new Error()
-      toast.success("Beat mis à jour.")
-    } catch {
-      toast.error("Erreur lors de la mise à jour.")
+
+      if (!res.ok) throw new Error('Échec de la mise à jour')
+
+      toast.success('Beat mis à jour avec succès')
+    } catch (err) {
+      toast.error('Erreur lors de la mise à jour')
+      console.error(err)
     } finally {
-      setLoading(false)
+      setIsLoading(false)
     }
   }
 
   return (
-    <div className="max-w-xl mx-auto p-6 space-y-6">
-      <h1 className="text-2xl font-bold text-white">Modifier le beat</h1>
+    <div className="max-w-2xl mx-auto py-8">
+      <h1 className="text-2xl font-bold mb-4">Modifier le beat</h1>
 
-      <div className="space-y-2">
-        <Label htmlFor="title">Titre du beat</Label>
-        <Input
-          id="title"
-          value={title}
-          onChange={(e) => setTitle(e.target.value)}
-          placeholder="Titre"
-        />
-      </div>
+      <div className="space-y-4">
+        <div>
+          <Label htmlFor="title">Titre</Label>
+          <Input
+            id="title"
+            value={title}
+            onChange={(e) => setTitle(e.target.value)}
+          />
+        </div>
 
-      <div className="space-y-2">
-        <Label htmlFor="status">Statut</Label>
-        <Select value={status} onValueChange={(v) => setStatus(v as any)}>
-          <SelectTrigger>
-            <SelectValue placeholder="Statut" />
-          </SelectTrigger>
-          <SelectContent>
-            <SelectItem value="draft">Brouillon</SelectItem>
-            <SelectItem value="published">En ligne</SelectItem>
-            <SelectItem value="disabled">Retiré</SelectItem>
-            {/* Le statut "blocked" est réservé au SuperAdmin, donc pas dans cette liste */}
-          </SelectContent>
-        </Select>
-      </div>
+        <div>
+          <Label htmlFor="description">Description</Label>
+          <Textarea
+            id="description"
+            value={description}
+            onChange={(e) => setDescription(e.target.value)}
+          />
+        </div>
 
-      <div>
-        <BeatStatusBadge status={status} />
+        <Button onClick={handleSave} disabled={isLoading}>
+          {isLoading ? 'Enregistrement...' : 'Enregistrer'}
+        </Button>
       </div>
-
-      <Button disabled={loading} onClick={handleSave}>
-        Sauvegarder
-      </Button>
     </div>
   )
 }

commit 8a81ace03bd9c2a04fd0c1cccba3b687a706bbdf
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 08:40:15 2025 +0200

    Create page.tsx

diff --git a/src/app/beatmaker/page.tsx b/src/app/beatmaker/page.tsx
new file mode 100644
index 0000000..3ac18d3
--- /dev/null
+++ b/src/app/beatmaker/page.tsx
@@ -0,0 +1,31 @@
+import { redirect } from 'next/navigation'
+import { cookies } from 'next/headers'
+
+export default async function BeatmakerPage() {
+  const cookieStore = cookies()
+  const token = cookieStore.get('auth_token')?.value
+
+  if (!token) {
+    redirect('/login')
+  }
+
+  const res = await fetch('http://localhost:3000/api/beatmaker/profile', {
+    headers: {
+      Cookie: `auth_token=${token}`,
+    },
+    cache: 'no-store',
+  })
+
+  if (!res.ok) {
+    throw new Error('Échec du chargement du profil beatmaker')
+  }
+
+  const profile = await res.json()
+
+  return (
+    <div className="p-8">
+      <h1 className="text-2xl font-bold">Bienvenue, {profile.name} !</h1>
+      {/* D’autres infos sur le profil ici */}
+    </div>
+  )
+}

commit 0fec95dcfd13dd90b50d1f734f60871741b5ecf0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 08:42:12 2025 +0200

    Create page.tsx

diff --git a/src/app/artist/page.tsx b/src/app/artist/page.tsx
new file mode 100644
index 0000000..6bb1308
--- /dev/null
+++ b/src/app/artist/page.tsx
@@ -0,0 +1,31 @@
+import { redirect } from 'next/navigation'
+import { cookies } from 'next/headers'
+
+export default async function ArtistPage() {
+  const cookieStore = cookies()
+  const token = cookieStore.get('auth_token')?.value
+
+  if (!token) {
+    redirect('/login')
+  }
+
+  const res = await fetch('http://localhost:3000/api/artist/profile', {
+    headers: {
+      Cookie: `auth_token=${token}`,
+    },
+    cache: 'no-store',
+  })
+
+  if (!res.ok) {
+    throw new Error('Échec du chargement du profil artiste')
+  }
+
+  const profile = await res.json()
+
+  return (
+    <div className="p-8">
+      <h1 className="text-2xl font-bold">Bienvenue, {profile.name} !</h1>
+      {/* D’autres infos sur le profil ici */}
+    </div>
+  )
+}

commit 64ac3c636964158fd3779a86da37c626c7ef2e70
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 08:46:19 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 6a26b8a..3462638 100644
--- a/.env.local
+++ b/.env.local
@@ -1,3 +1,3 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
-
+NEXT_PUBLIC_SITE_URL=http://localhost:3000

commit 30a2eb660daac386115f11f1353f031ac34e5a77
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:01:22 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 7a96842..f8e6a75 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,9 +1,8 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
-  reactStrictMode: true,
-  images: {
-    domains: ['yourdomain.com'], // adapte à ton besoin
+  experimental: {
+    optimizeCss: false, // Désactive lightningcss
   },
-};
+}
 
-module.exports = nextConfig;
+module.exports = nextConfig

commit 9425ce5abc11518e6f3c1f39c8db0b3b1aabb8b8
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:06:09 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index f8e6a75..6c2aae5 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,7 +1,7 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   experimental: {
-    optimizeCss: false, // Désactive lightningcss
+    optimizeCss: false, // On désactive Lightning CSS pour éviter les erreurs natives
   },
 }
 

commit 01ff28b195483615061cf71ce251b82c66281a2a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:19:18 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 6c2aae5..5a0b024 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,8 +1,10 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   experimental: {
-    optimizeCss: false, // On désactive Lightning CSS pour éviter les erreurs natives
+    // Désactive l'utilisation de lightningcss
+    swcPlugins: [],
+    optimizeCss: false,
   },
-}
+};
 
-module.exports = nextConfig
+module.exports = nextConfig;

commit 0f290834ed1d0ca095653c6c0220131decb5b399
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:42:44 2025 +0200

    Update next.config.js

diff --git a/next.config.js b/next.config.js
index 5a0b024..0512277 100644
--- a/next.config.js
+++ b/next.config.js
@@ -1,9 +1,7 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   experimental: {
-    // Désactive l'utilisation de lightningcss
-    swcPlugins: [],
-    optimizeCss: false,
+    optimizeCss: false, // Désactive l'optimisation CSS native (LightningCSS)
   },
 };
 

commit 09b43187c3d04d78ff6efca671f32f4ed4ffdb7d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:48:22 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 87aedba..98e9954 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,12 +1,8 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
-  content: [
-    "./app/**/*.{js,ts,jsx,tsx}",
-    "./pages/**/*.{js,ts,jsx,tsx}",
-    "./components/**/*.{js,ts,jsx,tsx}",
-  ],
+  content: ["./src/**/*.{js,ts,jsx,tsx}"],
   theme: {
     extend: {},
   },
   plugins: [],
-};
+}

commit 14e0f612303b432f51cc017bc033ba69502fb92a
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:49:27 2025 +0200

    Update postcss.config.js

diff --git a/postcss.config.js b/postcss.config.js
index b4bee66..33ad091 100644
--- a/postcss.config.js
+++ b/postcss.config.js
@@ -1,6 +1,6 @@
 module.exports = {
   plugins: {
-    '@tailwindcss/postcss': {},
+    tailwindcss: {},
     autoprefixer: {},
   },
-};
+}

commit c0fea2f01e697f8fbcdc21121418443a44231707
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:52:32 2025 +0200

    Create vite.config.js

diff --git a/vite.config.js b/vite.config.js
new file mode 100644
index 0000000..4015092
--- /dev/null
+++ b/vite.config.js
@@ -0,0 +1,7 @@
+export default {
+  css: {
+    postcss: {
+      plugins: []
+    }
+  }
+}

commit 514cfa70f3c04bea8a5982d63e1f69329b43f14d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 09:53:30 2025 +0200

    Update vite.config.js

diff --git a/vite.config.js b/vite.config.js
index 4015092..80d8467 100644
--- a/vite.config.js
+++ b/vite.config.js
@@ -1,7 +1,10 @@
-export default {
-  css: {
-    postcss: {
-      plugins: []
-    }
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 3000,
+    host: true
   }
-}
+})

commit 2666e31e494c9fc72dffe93904926b8e725d8695
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:13:37 2025 +0200

    Update layout.tsx

diff --git a/src/app/layout.tsx b/src/app/layout.tsx
index d0c18d0..c04a2d6 100644
--- a/src/app/layout.tsx
+++ b/src/app/layout.tsx
@@ -1,22 +1,27 @@
 // src/app/layout.tsx
-import './globals.css'
-import { ReactNode } from 'react'
-import Header from '@/components/ui/Header'
-import Footer from '@/components/ui/Footer'
 
-export const metadata = {
-  title: 'BeatsMarket - Le marché des beats pro',
-  description: 'Achetez et vendez des beats de qualité professionnelle',
-}
+import './globals.css';
+import type { Metadata } from 'next';
+
+export const metadata: Metadata = {
+  title: 'BeatsMarket',
+  description: 'Le site des beatmakers et artistes',
+};
 
-export default function RootLayout({ children }: { children: ReactNode }) {
+export default function RootLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
   return (
-    <html lang="fr">
-      <body>
-        <Header />
-        <main className="min-h-[80vh]">{children}</main>
-        <Footer />
-      </body>
+    <html lang="fr" className="font-inter">
+      <head>
+        <link
+          href="https://fonts.googleapis.com/css2?family=Inter&display=swap"
+          rel="stylesheet"
+        />
+      </head>
+      <body>{children}</body>
     </html>
-  )
+  );
 }

commit f1e74df337c4af05ca56e653a36164a7a8875bf3
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:14:36 2025 +0200

    Update tailwind.config.js

diff --git a/tailwind.config.js b/tailwind.config.js
index 98e9954..faa00e5 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -1,8 +1,15 @@
 /** @type {import('tailwindcss').Config} */
 module.exports = {
-  content: ["./src/**/*.{js,ts,jsx,tsx}"],
+  content: [
+    "./src/app/**/*.{js,ts,jsx,tsx}",
+    "./src/components/**/*.{js,ts,jsx,tsx}",
+  ],
   theme: {
-    extend: {},
+    extend: {
+      fontFamily: {
+        inter: ["Inter", "sans-serif"],
+      },
+    },
   },
   plugins: [],
-}
+};

commit 140faff46caeccc76bbea2d657ee8bd1c27d33cc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:16:02 2025 +0200

    Create globals.css

diff --git a/src/app/globals.css b/src/app/globals.css
new file mode 100644
index 0000000..676e009
--- /dev/null
+++ b/src/app/globals.css
@@ -0,0 +1,14 @@
+/* src/app/globals.css */
+
+@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');
+
+html,
+body {
+  padding: 0;
+  margin: 0;
+  font-family: 'Inter', sans-serif;
+}
+
+* {
+  box-sizing: border-box;
+}

commit 03344263d9a7e444c11ff5f6b61efc61429d1ef2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:32:09 2025 +0200

    Create main.jsx

diff --git a/src/main.jsx b/src/main.jsx
new file mode 100644
index 0000000..38dbece
--- /dev/null
+++ b/src/main.jsx
@@ -0,0 +1,11 @@
+// src/main.jsx
+import React from 'react'
+import ReactDOM from 'react-dom/client'
+import App from './app/App.jsx'  // On va créer ce fichier aussi juste après
+import './styles/index.css'      // fichier CSS global, à créer ou adapter selon toi
+
+ReactDOM.createRoot(document.getElementById('root')).render(
+  <React.StrictMode>
+    <App />
+  </React.StrictMode>
+)

commit 21c135d0da5e2a2062b7a9f783c11ae7479e3e3c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:33:00 2025 +0200

    Create App.jsx

diff --git a/src/app/App.jsx b/src/app/App.jsx
new file mode 100644
index 0000000..1933a8b
--- /dev/null
+++ b/src/app/App.jsx
@@ -0,0 +1,11 @@
+// src/app/App.jsx
+import React from 'react'
+
+export default function App() {
+  return (
+    <div>
+      <h1>Bienvenue sur BeatsMarket</h1>
+      <p>Le projet est bien lancé !</p>
+    </div>
+  )
+}

commit 840c31765cc3b6799050e01e16f2fd5742ef60c7
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:34:12 2025 +0200

    Create index.css

diff --git a/src/styles/index.css b/src/styles/index.css
new file mode 100644
index 0000000..6cf636f
--- /dev/null
+++ b/src/styles/index.css
@@ -0,0 +1,8 @@
+/* src/styles/index.css */
+
+body {
+  margin: 0;
+  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
+  background-color: #121212;
+  color: white;
+}

commit 21ab5512b418078ae19ba64baf48d071d6624bf5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:38:22 2025 +0200

    Update main.jsx

diff --git a/src/main.jsx b/src/main.jsx
index 38dbece..3885300 100644
--- a/src/main.jsx
+++ b/src/main.jsx
@@ -1,8 +1,6 @@
-// src/main.jsx
 import React from 'react'
 import ReactDOM from 'react-dom/client'
-import App from './app/App.jsx'  // On va créer ce fichier aussi juste après
-import './styles/index.css'      // fichier CSS global, à créer ou adapter selon toi
+import App from './App'
 
 ReactDOM.createRoot(document.getElementById('root')).render(
   <React.StrictMode>

commit 3d259e890a8d9dccdbffe75e288450339a638a3d
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:39:02 2025 +0200

    Create App.jsx

diff --git a/src/App.jsx b/src/App.jsx
new file mode 100644
index 0000000..4c04541
--- /dev/null
+++ b/src/App.jsx
@@ -0,0 +1,11 @@
+import React from 'react'
+
+function App() {
+  return (
+    <div>
+      <h1>Bienvenue sur BeatsMarket avec Vite + React !</h1>
+    </div>
+  )
+}
+
+export default App

commit c94fe05fb9552b4d5a1d7358be74b4c16e63cb79
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:39:54 2025 +0200

    Create index.html

diff --git a/public/index.html b/public/index.html
new file mode 100644
index 0000000..99daafa
--- /dev/null
+++ b/public/index.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html lang="fr">
+  <head>
+    <meta charset="UTF-8" />
+    <title>BeatsMarket Vite React</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.jsx"></script>
+  </body>
+</html>

commit c5317772454b0522b9cfa1772c2fed75602e8e0e
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:44:43 2025 +0200

    Create index.html

diff --git a/index.html b/index.html
new file mode 100644
index 0000000..5e4d8e5
--- /dev/null
+++ b/index.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html lang="fr">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1" />
+  <title>BeatsMarket Vite React</title>
+</head>
+<body>
+  <div id="root"></div>
+  <script type="module" src="/src/main.jsx"></script>
+</body>
+</html>

commit f2b87e8da317a324d25504736e098641788557ca
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:45:34 2025 +0200

    Update main.jsx

diff --git a/src/main.jsx b/src/main.jsx
index 3885300..d76b758 100644
--- a/src/main.jsx
+++ b/src/main.jsx
@@ -1,9 +1,9 @@
-import React from 'react'
-import ReactDOM from 'react-dom/client'
-import App from './App'
+import React from 'react';
+import ReactDOM from 'react-dom/client';
+import App from './App';
 
 ReactDOM.createRoot(document.getElementById('root')).render(
   <React.StrictMode>
     <App />
   </React.StrictMode>
-)
+);

commit 6b3c0cc0603ca82ae26ab65d25955750d83eacaa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:46:05 2025 +0200

    Update App.jsx

diff --git a/src/App.jsx b/src/App.jsx
index 4c04541..55e8006 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,11 +1,10 @@
-import React from 'react'
+import React from 'react';
 
-function App() {
+export default function App() {
   return (
-    <div>
-      <h1>Bienvenue sur BeatsMarket avec Vite + React !</h1>
+    <div style={{ padding: 20 }}>
+      <h1>Bienvenue sur BeatsMarket</h1>
+      <p>Ton application Vite + React est prête !</p>
     </div>
-  )
+  );
 }
-
-export default App

commit e1a6ca984c2a33d078aedb54bdfa53daea979f04
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:50:36 2025 +0200

    Update main.jsx

diff --git a/src/main.jsx b/src/main.jsx
index d76b758..2fe6226 100644
--- a/src/main.jsx
+++ b/src/main.jsx
@@ -1,9 +1,9 @@
-import React from 'react';
-import ReactDOM from 'react-dom/client';
-import App from './App';
+import React from 'react'
+import ReactDOM from 'react-dom/client'
 
-ReactDOM.createRoot(document.getElementById('root')).render(
-  <React.StrictMode>
-    <App />
-  </React.StrictMode>
-);
+function App() {
+  return <h1>Bienvenue sur BeatsMarket</h1>
+}
+
+const root = ReactDOM.createRoot(document.getElementById('root'))
+root.render(<App />)

commit eac9c28e729dab3420aecd083765a9f887c21e80
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:51:28 2025 +0200

    Update index.html

diff --git a/index.html b/index.html
index 5e4d8e5..b46927b 100644
--- a/index.html
+++ b/index.html
@@ -1,12 +1,11 @@
 <!DOCTYPE html>
 <html lang="fr">
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1" />
-  <title>BeatsMarket Vite React</title>
-</head>
-<body>
-  <div id="root"></div>
-  <script type="module" src="/src/main.jsx"></script>
-</body>
+  <head>
+    <meta charset="UTF-8" />
+    <title>BeatsMarket</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.jsx"></script>
+  </body>
 </html>

commit 2e34ce165fc4aee43b35ab4147a33824c4b00b80
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 10:52:46 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index f0485c6..1f6245d 100644
--- a/package.json
+++ b/package.json
@@ -1,27 +1,16 @@
 {
   "name": "beatsmarket",
   "version": "1.0.0",
-  "private": true,
   "scripts": {
-    "dev": "next dev",
-    "build": "next build",
-    "start": "next start"
+    "dev": "vite",
+    "build": "vite build",
+    "preview": "vite preview"
   },
   "dependencies": {
-    "@radix-ui/react-accordion": "^1.2.11",
-    "lucide-react": "^0.525.0",
-    "next": "^15.4.2",
-    "openai": "^4.12.0",
     "react": "^18.2.0",
-    "react-dom": "^18.2.0",
-    "typescript": "^5.1.3"
+    "react-dom": "^18.2.0"
   },
   "devDependencies": {
-    "@tailwindcss/postcss": "^4.1.11",
-    "@types/node": "^20.2.5",
-    "@types/react": "^18.2.6",
-    "autoprefixer": "^10.4.21",
-    "postcss": "^8.5.6",
-    "tailwindcss": "^4.1.11"
+    "vite": "^4.0.0"
   }
 }

commit b43d5ae1d907385b57f2a721278d3fa3a1e05d8c
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:10:59 2025 +0200

    Update package.json

diff --git a/package.json b/package.json
index 1f6245d..117b760 100644
--- a/package.json
+++ b/package.json
@@ -1,16 +1,27 @@
 {
-  "name": "beatsmarket",
-  "version": "1.0.0",
+  "name": "beatsmarketlebon",
+  "private": true,
+  "version": "0.0.0",
+  "type": "module",
   "scripts": {
     "dev": "vite",
     "build": "vite build",
+    "lint": "eslint .",
     "preview": "vite preview"
   },
   "dependencies": {
-    "react": "^18.2.0",
-    "react-dom": "^18.2.0"
+    "react": "^19.1.0",
+    "react-dom": "^19.1.0"
   },
   "devDependencies": {
-    "vite": "^4.0.0"
+    "@eslint/js": "^9.30.1",
+    "@types/react": "^19.1.8",
+    "@types/react-dom": "^19.1.6",
+    "@vitejs/plugin-react": "^4.6.0",
+    "eslint": "^9.30.1",
+    "eslint-plugin-react-hooks": "^5.2.0",
+    "eslint-plugin-react-refresh": "^0.4.20",
+    "globals": "^16.3.0",
+    "vite": "^7.0.4"
   }
 }

commit 7a7a78570a9389e26fe3f4d4ecb7dcc40b3f8e86
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:31:59 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 3462638..4b81262 100644
--- a/.env.local
+++ b/.env.local
@@ -1,3 +1,4 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
 NEXT_PUBLIC_SITE_URL=http://localhost:3000
+GITHUB_TOKEN=ton_token_ici

commit 0a00f8a97e6683d6f8cc2330c2ee24e28532263f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:02:45 2025 +0200

    Mise à jour des fichiers package.json et package-lock.json

diff --git a/beatsmarketlebon/package.json b/beatsmarketlebon/package.json
new file mode 100644
index 0000000..117b760
--- /dev/null
+++ b/beatsmarketlebon/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "beatsmarketlebon",
+  "private": true,
+  "version": "0.0.0",
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "lint": "eslint .",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^19.1.0",
+    "react-dom": "^19.1.0"
+  },
+  "devDependencies": {
+    "@eslint/js": "^9.30.1",
+    "@types/react": "^19.1.8",
+    "@types/react-dom": "^19.1.6",
+    "@vitejs/plugin-react": "^4.6.0",
+    "eslint": "^9.30.1",
+    "eslint-plugin-react-hooks": "^5.2.0",
+    "eslint-plugin-react-refresh": "^0.4.20",
+    "globals": "^16.3.0",
+    "vite": "^7.0.4"
+  }
+}
diff --git a/package-lock.json b/package-lock.json
index f6076ce..50a4c38 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -9,27 +9,30 @@
       "version": "1.0.0",
       "dependencies": {
         "@radix-ui/react-accordion": "^1.2.11",
+        "@tailwindcss/forms": "^0.5.10",
+        "@tailwindcss/typography": "^0.5.16",
         "lucide-react": "^0.525.0",
         "next": "^15.4.2",
         "openai": "^4.12.0",
         "react": "^18.2.0",
         "react-dom": "^18.2.0",
+        "tailwindcss": "^3.2.7",
         "typescript": "^5.1.3"
       },
       "devDependencies": {
-        "@tailwindcss/postcss": "^4.1.11",
-        "@types/node": "^20.2.5",
+        "@tailwindcss/postcss": "^4.0.0",
+        "@types/node": "^20.19.9",
         "@types/react": "^18.2.6",
-        "autoprefixer": "^10.4.21",
-        "postcss": "^8.5.6",
-        "tailwindcss": "^4.1.11"
+        "@vitejs/plugin-react": "^4.7.0",
+        "autoprefixer": "^10.4.19",
+        "postcss": "^8.4.38",
+        "vite": "^7.0.6"
       }
     },
     "node_modules/@alloc/quick-lru": {
       "version": "5.2.0",
       "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
       "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=10"
@@ -52,6 +55,288 @@
         "node": ">=6.0.0"
       }
     },
+    "node_modules/@babel/code-frame": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
+      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "js-tokens": "^4.0.0",
+        "picocolors": "^1.1.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/compat-data": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
+      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/core": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz",
+      "integrity": "sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@ampproject/remapping": "^2.2.0",
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-compilation-targets": "^7.27.2",
+        "@babel/helper-module-transforms": "^7.27.3",
+        "@babel/helpers": "^7.27.6",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/traverse": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "convert-source-map": "^2.0.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.2",
+        "json5": "^2.2.3",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/babel"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz",
+      "integrity": "sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "@jridgewell/gen-mapping": "^0.3.12",
+        "@jridgewell/trace-mapping": "^0.3.28",
+        "jsesc": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
+      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/compat-data": "^7.27.2",
+        "@babel/helper-validator-option": "^7.27.1",
+        "browserslist": "^4.24.0",
+        "lru-cache": "^5.1.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-globals": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
+      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-imports": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
+      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-transforms": {
+      "version": "7.27.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
+      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "@babel/traverse": "^7.27.3"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-plugin-utils": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
+      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-string-parser": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
+      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-identifier": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
+      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-option": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
+      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helpers": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
+      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.27.6"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/parser": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz",
+      "integrity": "sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.28.0"
+      },
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-self": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
+      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-source": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
+      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/template": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
+      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/parser": "^7.27.2",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/traverse": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz",
+      "integrity": "sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-globals": "^7.28.0",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.28.0",
+        "debug": "^4.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/types": {
+      "version": "7.28.1",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz",
+      "integrity": "sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
     "node_modules/@emnapi/runtime": {
       "version": "1.4.5",
       "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.5.tgz",
@@ -62,6 +347,448 @@
         "tslib": "^2.4.0"
       }
     },
+    "node_modules/@esbuild/aix-ppc64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz",
+      "integrity": "sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "aix"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz",
+      "integrity": "sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz",
+      "integrity": "sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz",
+      "integrity": "sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz",
+      "integrity": "sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz",
+      "integrity": "sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz",
+      "integrity": "sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz",
+      "integrity": "sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz",
+      "integrity": "sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ia32": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz",
+      "integrity": "sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-loong64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz",
+      "integrity": "sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-mips64el": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz",
+      "integrity": "sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==",
+      "cpu": [
+        "mips64el"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ppc64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz",
+      "integrity": "sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-riscv64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz",
+      "integrity": "sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-s390x": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz",
+      "integrity": "sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz",
+      "integrity": "sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz",
+      "integrity": "sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz",
+      "integrity": "sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openharmony-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz",
+      "integrity": "sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openharmony"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/sunos-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz",
+      "integrity": "sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "sunos"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz",
+      "integrity": "sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-ia32": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz",
+      "integrity": "sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz",
+      "integrity": "sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/@img/sharp-darwin-arm64": {
       "version": "0.34.3",
       "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
@@ -480,6 +1207,23 @@
         "url": "https://opencollective.com/libvips"
       }
     },
+    "node_modules/@isaacs/cliui": {
+      "version": "8.0.2",
+      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
+      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
+      "license": "ISC",
+      "dependencies": {
+        "string-width": "^5.1.2",
+        "string-width-cjs": "npm:string-width@^4.2.0",
+        "strip-ansi": "^7.0.1",
+        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
+        "wrap-ansi": "^8.1.0",
+        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/@isaacs/fs-minipass": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
@@ -497,7 +1241,6 @@
       "version": "0.3.12",
       "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
       "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/sourcemap-codec": "^1.5.0",
@@ -508,7 +1251,6 @@
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6.0.0"
@@ -518,14 +1260,12 @@
       "version": "1.5.4",
       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
       "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/@jridgewell/trace-mapping": {
       "version": "0.3.29",
       "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
       "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/resolve-uri": "^3.1.0",
@@ -533,15 +1273,15 @@
       }
     },
     "node_modules/@next/env": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.2.tgz",
-      "integrity": "sha512-kd7MvW3pAP7tmk1NaiX4yG15xb2l4gNhteKQxt3f+NGR22qwPymn9RBuv26QKfIKmfo6z2NpgU8W2RT0s0jlvg==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.3.tgz",
+      "integrity": "sha512-lKJ9KJAvaWzqurIsz6NWdQOLj96mdhuDMusLSYHw9HBe2On7BjUwU1WeRvq19x7NrEK3iOgMeSBV5qEhVH1cMw==",
       "license": "MIT"
     },
     "node_modules/@next/swc-darwin-arm64": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.2.tgz",
-      "integrity": "sha512-ovqjR8NjCBdBf1U+R/Gvn0RazTtXS9n6wqs84iFaCS1NHbw9ksVE4dfmsYcLoyUVd9BWE0bjkphOWrrz8uz/uw==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.3.tgz",
+      "integrity": "sha512-YAhZWKeEYY7LHQJiQ8fe3Y6ymfcDcTn7rDC8PDu/pdeIl1Z2LHD4uyPNuQUGCEQT//MSNv6oZCeQzZfTCKZv+A==",
       "cpu": [
         "arm64"
       ],
@@ -555,9 +1295,9 @@
       }
     },
     "node_modules/@next/swc-darwin-x64": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.2.tgz",
-      "integrity": "sha512-I8d4W7tPqbdbHRI4z1iBfaoJIBrEG4fnWKIe+Rj1vIucNZ5cEinfwkBt3RcDF00bFRZRDpvKuDjgMFD3OyRBnw==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.3.tgz",
+      "integrity": "sha512-ZPHRdd51xaxCMpT4viQ6h8TgYM1zPW1JIeksPY9wKlyvBVUQqrWqw8kEh1sa7/x0Ied+U7pYHkAkutrUwxbMcg==",
       "cpu": [
         "x64"
       ],
@@ -571,9 +1311,9 @@
       }
     },
     "node_modules/@next/swc-linux-arm64-gnu": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.2.tgz",
-      "integrity": "sha512-lvhz02dU3Ec5thzfQ2RCUeOFADjNkS/px1W7MBt7HMhf0/amMfT8Z/aXOwEA+cVWN7HSDRSUc8hHILoHmvajsg==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.3.tgz",
+      "integrity": "sha512-QUdqftCXC5vw5cowucqi9FeOPQ0vdMxoOHLY0J5jPdercwSJFjdi9CkEO4Xkq1eG4t1TB/BG81n6rmTsWoILnw==",
       "cpu": [
         "arm64"
       ],
@@ -587,9 +1327,9 @@
       }
     },
     "node_modules/@next/swc-linux-arm64-musl": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.2.tgz",
-      "integrity": "sha512-v+5PPfL8UP+KKHS3Mox7QMoeFdMlaV0zeNMIF7eLC4qTiVSO0RPNnK0nkBZSD5BEkkf//c+vI9s/iHxddCZchA==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.3.tgz",
+      "integrity": "sha512-HTL31NsmoafX+r5g91Yj3+q34nrn1xKmCWVuNA+fUWO4X0pr+n83uGzLyEOn0kUqbMZ40KmWx+4wsbMoUChkiQ==",
       "cpu": [
         "arm64"
       ],
@@ -603,9 +1343,9 @@
       }
     },
     "node_modules/@next/swc-linux-x64-gnu": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.2.tgz",
-      "integrity": "sha512-PHLYOC9W2cu6I/JEKo77+LW4uPNvyEQiSkVRUQPsOIsf01PRr8PtPhwtz3XNnC9At8CrzPkzqQ9/kYDg4R4Inw==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.3.tgz",
+      "integrity": "sha512-HRQLWoeFkKXd2YCEEy9GhfwOijRm37x4w5r0MMVHxBKSA6ms3JoPUXvGhfHT6srnGRcEUWNrQ2vzkHir5ZWTSw==",
       "cpu": [
         "x64"
       ],
@@ -619,9 +1359,9 @@
       }
     },
     "node_modules/@next/swc-linux-x64-musl": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.2.tgz",
-      "integrity": "sha512-lpmUF9FfLFns4JbTu+5aJGA8aR9dXaA12eoNe9CJbVkGib0FDiPa4kBGTwy0xDxKNGlv3bLDViyx1U+qafmuJQ==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.3.tgz",
+      "integrity": "sha512-NyXUx6G7AayaRGUsVPenuwhyAoyxjQuQPaK50AXoaAHPwRuif4WmSrXUs8/Y0HJIZh8E/YXRm9H7uuGfiacpuQ==",
       "cpu": [
         "x64"
       ],
@@ -635,9 +1375,9 @@
       }
     },
     "node_modules/@next/swc-win32-arm64-msvc": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.2.tgz",
-      "integrity": "sha512-aMjogoGnRepas0LQ/PBPsvvUzj+IoXw2IoDSEShEtrsu2toBiaxEWzOQuPZ8nie8+1iF7TA63S7rlp3YWAjNEg==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.3.tgz",
+      "integrity": "sha512-2CUTmpzN/7cL1a7GjdLkDFlfH3nwMwW8a6JiaAUsL9MtKmNNO3fnXqnY0Zk30fii3hVEl4dr7ztrpYt0t2CcGQ==",
       "cpu": [
         "arm64"
       ],
@@ -651,9 +1391,9 @@
       }
     },
     "node_modules/@next/swc-win32-x64-msvc": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.2.tgz",
-      "integrity": "sha512-FxwauyexSFu78wEqR/+NB9MnqXVj6SxJKwcVs2CRjeSX/jBagDCgtR2W36PZUYm0WPgY1pQ3C1+nn7zSnwROuw==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.3.tgz",
+      "integrity": "sha512-i54YgUhvrUQxQD84SjAbkfWhYkOdm/DNRAVekCHLWxVg3aUbyC6NFQn9TwgCkX5QAS2pXCJo3kFboSFvrsd7dA==",
       "cpu": [
         "x64"
       ],
@@ -666,6 +1406,51 @@
         "node": ">= 10"
       }
     },
+    "node_modules/@nodelib/fs.scandir": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
+      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "2.0.5",
+        "run-parallel": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.stat": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
+      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.walk": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
+      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.scandir": "2.1.5",
+        "fastq": "^1.6.0"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@pkgjs/parseargs": {
+      "version": "0.11.0",
+      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
+      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
+      "license": "MIT",
+      "optional": true,
+      "engines": {
+        "node": ">=14"
+      }
+    },
     "node_modules/@radix-ui/primitive": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
@@ -836,108 +1621,395 @@
         }
       }
     },
-    "node_modules/@radix-ui/react-direction": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
-      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
+    "node_modules/@radix-ui/react-direction": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
+      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-id": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
+      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-slot": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
+      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-controllable-state": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
+      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-effect-event": "0.0.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-effect-event": {
+      "version": "0.0.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
+      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-layout-effect": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
+      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@rolldown/pluginutils": {
+      "version": "1.0.0-beta.27",
+      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
+      "integrity": "sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@rollup/rollup-android-arm-eabi": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.45.1.tgz",
+      "integrity": "sha512-NEySIFvMY0ZQO+utJkgoMiCAjMrGvnbDLHvcmlA33UXJpYBCvlBEbMMtV837uCkS+plG2umfhn0T5mMAxGrlRA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-android-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.45.1.tgz",
+      "integrity": "sha512-ujQ+sMXJkg4LRJaYreaVx7Z/VMgBBd89wGS4qMrdtfUFZ+TSY5Rs9asgjitLwzeIbhwdEhyj29zhst3L1lKsRQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.45.1.tgz",
+      "integrity": "sha512-FSncqHvqTm3lC6Y13xncsdOYfxGSLnP+73k815EfNmpewPs+EyM49haPS105Rh4aF5mJKywk9X0ogzLXZzN9lA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-x64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.45.1.tgz",
+      "integrity": "sha512-2/vVn/husP5XI7Fsf/RlhDaQJ7x9zjvC81anIVbr4b/f0xtSmXQTFcGIQ/B1cXIYM6h2nAhJkdMHTnD7OtQ9Og==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.45.1.tgz",
+      "integrity": "sha512-4g1kaDxQItZsrkVTdYQ0bxu4ZIQ32cotoQbmsAnW1jAE4XCMbcBPDirX5fyUzdhVCKgPcrwWuucI8yrVRBw2+g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-x64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.45.1.tgz",
+      "integrity": "sha512-L/6JsfiL74i3uK1Ti2ZFSNsp5NMiM4/kbbGEcOCps99aZx3g8SJMO1/9Y0n/qKlWZfn6sScf98lEOUe2mBvW9A==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.45.1.tgz",
+      "integrity": "sha512-RkdOTu2jK7brlu+ZwjMIZfdV2sSYHK2qR08FUWcIoqJC2eywHbXr0L8T/pONFwkGukQqERDheaGTeedG+rra6Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.45.1.tgz",
+      "integrity": "sha512-3kJ8pgfBt6CIIr1o+HQA7OZ9mp/zDk3ctekGl9qn/pRBgrRgfwiffaUmqioUGN9hv0OHv2gxmvdKOkARCtRb8Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.45.1.tgz",
+      "integrity": "sha512-k3dOKCfIVixWjG7OXTCOmDfJj3vbdhN0QYEqB+OuGArOChek22hn7Uy5A/gTDNAcCy5v2YcXRJ/Qcnm4/ma1xw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.45.1.tgz",
+      "integrity": "sha512-PmI1vxQetnM58ZmDFl9/Uk2lpBBby6B6rF4muJc65uZbxCs0EA7hhKCk2PKlmZKuyVSHAyIw3+/SiuMLxKxWog==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.45.1.tgz",
+      "integrity": "sha512-9UmI0VzGmNJ28ibHW2GpE2nF0PBQqsyiS4kcJ5vK+wuwGnV5RlqdczVocDSUfGX/Na7/XINRVoUgJyFIgipoRg==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.45.1.tgz",
+      "integrity": "sha512-7nR2KY8oEOUTD3pBAxIBBbZr0U7U+R9HDTPNy+5nVVHDXI4ikYniH1oxQz9VoB5PbBU1CZuDGHkLJkd3zLMWsg==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.45.1.tgz",
+      "integrity": "sha512-nlcl3jgUultKROfZijKjRQLUu9Ma0PeNv/VFHkZiKbXTBQXhpytS8CIj5/NfBeECZtY2FJQubm6ltIxm/ftxpw==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.45.1.tgz",
+      "integrity": "sha512-HJV65KLS51rW0VY6rvZkiieiBnurSzpzore1bMKAhunQiECPuxsROvyeaot/tcK3A3aGnI+qTHqisrpSgQrpgA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-s390x-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.45.1.tgz",
+      "integrity": "sha512-NITBOCv3Qqc6hhwFt7jLV78VEO/il4YcBzoMGGNxznLgRQf43VQDae0aAzKiBeEPIxnDrACiMgbqjuihx08OOw==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
       "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "linux"
+      ]
     },
-    "node_modules/@radix-ui/react-id": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
-      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
+    "node_modules/@rollup/rollup-linux-x64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.45.1.tgz",
+      "integrity": "sha512-+E/lYl6qu1zqgPEnTrs4WysQtvc/Sh4fC2nByfFExqgYrqkKWp1tWIbe+ELhixnenSpBbLXNi6vbEEJ8M7fiHw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "linux"
+      ]
     },
-    "node_modules/@radix-ui/react-slot": {
-      "version": "1.2.3",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
-      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
+    "node_modules/@rollup/rollup-linux-x64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.45.1.tgz",
+      "integrity": "sha512-a6WIAp89p3kpNoYStITT9RbTbTnqarU7D8N8F2CV+4Cl9fwCOZraLVuVFvlpsW0SbIiYtEnhCZBPLoNdRkjQFw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-compose-refs": "1.1.2"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "linux"
+      ]
     },
-    "node_modules/@radix-ui/react-use-controllable-state": {
-      "version": "1.2.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
-      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
+    "node_modules/@rollup/rollup-win32-arm64-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.45.1.tgz",
+      "integrity": "sha512-T5Bi/NS3fQiJeYdGvRpTAP5P02kqSOpqiopwhj0uaXB6nzs5JVi2XMJb18JUSKhCOX8+UE1UKQufyD6Or48dJg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-effect-event": "0.0.2",
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "win32"
+      ]
     },
-    "node_modules/@radix-ui/react-use-effect-event": {
-      "version": "0.0.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
-      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
+    "node_modules/@rollup/rollup-win32-ia32-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.45.1.tgz",
+      "integrity": "sha512-lxV2Pako3ujjuUe9jiU3/s7KSrDfH6IgTSQOnDWr9aJ92YsFd7EurmClK0ly/t8dzMkDtd04g60WX6yl0sGfdw==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "win32"
+      ]
     },
-    "node_modules/@radix-ui/react-use-layout-effect": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
-      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
+    "node_modules/@rollup/rollup-win32-x64-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.45.1.tgz",
+      "integrity": "sha512-M/fKi4sasCdM8i0aWJjCSFm2qEnYRR8AMLG2kxp6wD13+tMGA4Z1tVAuHkNRjud5SW2EM3naLuK35w9twvf6aA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
       "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
+      "optional": true,
+      "os": [
+        "win32"
+      ]
     },
     "node_modules/@swc/helpers": {
       "version": "0.5.15",
@@ -948,6 +2020,18 @@
         "tslib": "^2.8.0"
       }
     },
+    "node_modules/@tailwindcss/forms": {
+      "version": "0.5.10",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.10.tgz",
+      "integrity": "sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==",
+      "license": "MIT",
+      "dependencies": {
+        "mini-svg-data-uri": "^1.2.3"
+      },
+      "peerDependencies": {
+        "tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1"
+      }
+    },
     "node_modules/@tailwindcss/node": {
       "version": "4.1.11",
       "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.11.tgz",
@@ -964,6 +2048,13 @@
         "tailwindcss": "4.1.11"
       }
     },
+    "node_modules/@tailwindcss/node/node_modules/tailwindcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
+      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/@tailwindcss/oxide": {
       "version": "4.1.11",
       "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.11.tgz",
@@ -1224,6 +2315,80 @@
         "tailwindcss": "4.1.11"
       }
     },
+    "node_modules/@tailwindcss/postcss/node_modules/tailwindcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
+      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@tailwindcss/typography": {
+      "version": "0.5.16",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.16.tgz",
+      "integrity": "sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==",
+      "license": "MIT",
+      "dependencies": {
+        "lodash.castarray": "^4.4.0",
+        "lodash.isplainobject": "^4.0.6",
+        "lodash.merge": "^4.6.2",
+        "postcss-selector-parser": "6.0.10"
+      },
+      "peerDependencies": {
+        "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1"
+      }
+    },
+    "node_modules/@types/babel__core": {
+      "version": "7.20.5",
+      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
+      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.20.7",
+        "@babel/types": "^7.20.7",
+        "@types/babel__generator": "*",
+        "@types/babel__template": "*",
+        "@types/babel__traverse": "*"
+      }
+    },
+    "node_modules/@types/babel__generator": {
+      "version": "7.27.0",
+      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
+      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__template": {
+      "version": "7.4.4",
+      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
+      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__traverse": {
+      "version": "7.20.7",
+      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
+      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.20.7"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
+      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/@types/node": {
       "version": "20.19.9",
       "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
@@ -1261,6 +2426,27 @@
         "csstype": "^3.0.2"
       }
     },
+    "node_modules/@vitejs/plugin-react": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz",
+      "integrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/core": "^7.28.0",
+        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
+        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
+        "@rolldown/pluginutils": "1.0.0-beta.27",
+        "@types/babel__core": "^7.20.5",
+        "react-refresh": "^0.17.0"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
+      }
+    },
     "node_modules/abort-controller": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
@@ -1285,6 +2471,55 @@
         "node": ">= 8.0.0"
       }
     },
+    "node_modules/ansi-regex": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
+      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "6.2.1",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
+      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/any-promise": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
+      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
+      "license": "MIT"
+    },
+    "node_modules/anymatch": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
+      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
+      "license": "ISC",
+      "dependencies": {
+        "normalize-path": "^3.0.0",
+        "picomatch": "^2.0.4"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/arg": {
+      "version": "5.0.2",
+      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
+      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
+      "license": "MIT"
+    },
     "node_modules/asynckit": {
       "version": "0.4.0",
       "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
@@ -1329,6 +2564,45 @@
         "postcss": "^8.1.0"
       }
     },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "license": "MIT"
+    },
+    "node_modules/binary-extensions": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
+      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/brace-expansion": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
+      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
+      "license": "MIT",
+      "dependencies": {
+        "balanced-match": "^1.0.0"
+      }
+    },
+    "node_modules/braces": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
+      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
+      "license": "MIT",
+      "dependencies": {
+        "fill-range": "^7.1.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/browserslist": {
       "version": "4.25.1",
       "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
@@ -1375,6 +2649,15 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/camelcase-css": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
+      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/caniuse-lite": {
       "version": "1.0.30001727",
       "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
@@ -1395,6 +2678,42 @@
       ],
       "license": "CC-BY-4.0"
     },
+    "node_modules/chokidar": {
+      "version": "3.6.0",
+      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
+      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
+      "license": "MIT",
+      "dependencies": {
+        "anymatch": "~3.1.2",
+        "braces": "~3.0.2",
+        "glob-parent": "~5.1.2",
+        "is-binary-path": "~2.1.0",
+        "is-glob": "~4.0.1",
+        "normalize-path": "~3.0.0",
+        "readdirp": "~3.6.0"
+      },
+      "engines": {
+        "node": ">= 8.10.0"
+      },
+      "funding": {
+        "url": "https://paulmillr.com/funding/"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/chokidar/node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/chownr": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
@@ -1430,7 +2749,6 @@
       "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
       "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
       "license": "MIT",
-      "optional": true,
       "dependencies": {
         "color-name": "~1.1.4"
       },
@@ -1442,8 +2760,7 @@
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-      "license": "MIT",
-      "optional": true
+      "license": "MIT"
     },
     "node_modules/color-string": {
       "version": "1.9.1",
@@ -1468,6 +2785,48 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/commander": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
+      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/convert-source-map": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
+      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
+      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
+      "license": "MIT",
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/cssesc": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
+      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
+      "license": "MIT",
+      "bin": {
+        "cssesc": "bin/cssesc"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
     "node_modules/csstype": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
@@ -1475,6 +2834,24 @@
       "devOptional": true,
       "license": "MIT"
     },
+    "node_modules/debug": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.3"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/delayed-stream": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
@@ -1494,6 +2871,18 @@
         "node": ">=8"
       }
     },
+    "node_modules/didyoumean": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
+      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
+      "license": "Apache-2.0"
+    },
+    "node_modules/dlv": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
+      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
+      "license": "MIT"
+    },
     "node_modules/dunder-proto": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
@@ -1508,13 +2897,25 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/eastasianwidth": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
+      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
+      "license": "MIT"
+    },
     "node_modules/electron-to-chromium": {
-      "version": "1.5.189",
-      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.189.tgz",
-      "integrity": "sha512-y9D1ntS1ruO/pZ/V2FtLE+JXLQe28XoRpZ7QCCo0T8LdQladzdcOVQZH/IWLVJvCw12OGMb6hYOeOAjntCmJRQ==",
+      "version": "1.5.190",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.190.tgz",
+      "integrity": "sha512-k4McmnB2091YIsdCgkS0fMVMPOJgxl93ltFzaryXqwip1AaxeDqKCGLxkXODDA5Ab/D+tV5EL5+aTx76RvLRxw==",
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/emoji-regex": {
+      "version": "9.2.2",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
+      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
+      "license": "MIT"
+    },
     "node_modules/enhanced-resolve": {
       "version": "5.18.2",
       "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
@@ -1574,6 +2975,48 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/esbuild": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz",
+      "integrity": "sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "bin": {
+        "esbuild": "bin/esbuild"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "optionalDependencies": {
+        "@esbuild/aix-ppc64": "0.25.8",
+        "@esbuild/android-arm": "0.25.8",
+        "@esbuild/android-arm64": "0.25.8",
+        "@esbuild/android-x64": "0.25.8",
+        "@esbuild/darwin-arm64": "0.25.8",
+        "@esbuild/darwin-x64": "0.25.8",
+        "@esbuild/freebsd-arm64": "0.25.8",
+        "@esbuild/freebsd-x64": "0.25.8",
+        "@esbuild/linux-arm": "0.25.8",
+        "@esbuild/linux-arm64": "0.25.8",
+        "@esbuild/linux-ia32": "0.25.8",
+        "@esbuild/linux-loong64": "0.25.8",
+        "@esbuild/linux-mips64el": "0.25.8",
+        "@esbuild/linux-ppc64": "0.25.8",
+        "@esbuild/linux-riscv64": "0.25.8",
+        "@esbuild/linux-s390x": "0.25.8",
+        "@esbuild/linux-x64": "0.25.8",
+        "@esbuild/netbsd-arm64": "0.25.8",
+        "@esbuild/netbsd-x64": "0.25.8",
+        "@esbuild/openbsd-arm64": "0.25.8",
+        "@esbuild/openbsd-x64": "0.25.8",
+        "@esbuild/openharmony-arm64": "0.25.8",
+        "@esbuild/sunos-x64": "0.25.8",
+        "@esbuild/win32-arm64": "0.25.8",
+        "@esbuild/win32-ia32": "0.25.8",
+        "@esbuild/win32-x64": "0.25.8"
+      }
+    },
     "node_modules/escalade": {
       "version": "3.2.0",
       "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
@@ -1593,6 +3036,71 @@
         "node": ">=6"
       }
     },
+    "node_modules/fast-glob": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
+      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "^2.0.2",
+        "@nodelib/fs.walk": "^1.2.3",
+        "glob-parent": "^5.1.2",
+        "merge2": "^1.3.0",
+        "micromatch": "^4.0.8"
+      },
+      "engines": {
+        "node": ">=8.6.0"
+      }
+    },
+    "node_modules/fast-glob/node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/fastq": {
+      "version": "1.19.1",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
+      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
+      "license": "ISC",
+      "dependencies": {
+        "reusify": "^1.0.4"
+      }
+    },
+    "node_modules/fill-range": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
+      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
+      "license": "MIT",
+      "dependencies": {
+        "to-regex-range": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/foreground-child": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
+      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
+      "license": "ISC",
+      "dependencies": {
+        "cross-spawn": "^7.0.6",
+        "signal-exit": "^4.0.1"
+      },
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/form-data": {
       "version": "4.0.4",
       "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
@@ -1642,6 +3150,20 @@
         "url": "https://github.com/sponsors/rawify"
       }
     },
+    "node_modules/fsevents": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
+      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
+      "hasInstallScript": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
+      }
+    },
     "node_modules/function-bind": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
@@ -1651,6 +3173,16 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/gensync": {
+      "version": "1.0.0-beta.2",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
+      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
     "node_modules/get-intrinsic": {
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
@@ -1688,6 +3220,38 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/glob": {
+      "version": "10.4.5",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
+      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
+      "license": "ISC",
+      "dependencies": {
+        "foreground-child": "^3.1.0",
+        "jackspeak": "^3.1.2",
+        "minimatch": "^9.0.4",
+        "minipass": "^7.1.2",
+        "package-json-from-dist": "^1.0.0",
+        "path-scurry": "^1.11.1"
+      },
+      "bin": {
+        "glob": "dist/esm/bin.mjs"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/glob-parent": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
+      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
     "node_modules/gopd": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
@@ -1762,10 +3326,97 @@
       "license": "MIT",
       "optional": true
     },
+    "node_modules/is-binary-path": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
+      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
+      "license": "MIT",
+      "dependencies": {
+        "binary-extensions": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.16.1",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
+      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-fullwidth-code-point": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
+      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "license": "MIT",
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-number": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
+      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "license": "ISC"
+    },
+    "node_modules/jackspeak": {
+      "version": "3.4.3",
+      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
+      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
+      "license": "BlueOak-1.0.0",
+      "dependencies": {
+        "@isaacs/cliui": "^8.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      },
+      "optionalDependencies": {
+        "@pkgjs/parseargs": "^0.11.0"
+      }
+    },
     "node_modules/jiti": {
-      "version": "2.4.2",
-      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
-      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
+      "version": "2.5.0",
+      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.0.tgz",
+      "integrity": "sha512-NWDAhdnATItTnRhip9VTd8oXDjVcbhetRN6YzckApnXGxpGUooKMAaf0KVvlZG0+KlJMGkeLElVn4M1ReuxKUQ==",
       "dev": true,
       "license": "MIT",
       "bin": {
@@ -1778,6 +3429,32 @@
       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
       "license": "MIT"
     },
+    "node_modules/jsesc": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
+      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/lightningcss": {
       "version": "1.30.1",
       "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
@@ -2017,6 +3694,42 @@
         "url": "https://opencollective.com/parcel"
       }
     },
+    "node_modules/lilconfig": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
+      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/antonk52"
+      }
+    },
+    "node_modules/lines-and-columns": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
+      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
+      "license": "MIT"
+    },
+    "node_modules/lodash.castarray": {
+      "version": "4.4.0",
+      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
+      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
+      "license": "MIT"
+    },
+    "node_modules/lodash.isplainobject": {
+      "version": "4.0.6",
+      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
+      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
+      "license": "MIT"
+    },
+    "node_modules/lodash.merge": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
+      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
+      "license": "MIT"
+    },
     "node_modules/loose-envify": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
@@ -2029,6 +3742,16 @@
         "loose-envify": "cli.js"
       }
     },
+    "node_modules/lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "yallist": "^3.0.2"
+      }
+    },
     "node_modules/lucide-react": {
       "version": "0.525.0",
       "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.525.0.tgz",
@@ -2057,6 +3780,28 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/merge2": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
+      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/micromatch": {
+      "version": "4.0.8",
+      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
+      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
+      "license": "MIT",
+      "dependencies": {
+        "braces": "^3.0.3",
+        "picomatch": "^2.3.1"
+      },
+      "engines": {
+        "node": ">=8.6"
+      }
+    },
     "node_modules/mime-db": {
       "version": "1.52.0",
       "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
@@ -2078,11 +3823,34 @@
         "node": ">= 0.6"
       }
     },
+    "node_modules/mini-svg-data-uri": {
+      "version": "1.4.4",
+      "resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",
+      "integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",
+      "license": "MIT",
+      "bin": {
+        "mini-svg-data-uri": "cli.js"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "9.0.5",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
+      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
+      "license": "ISC",
+      "dependencies": {
+        "brace-expansion": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/minipass": {
       "version": "7.1.2",
       "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
       "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
-      "dev": true,
       "license": "ISC",
       "engines": {
         "node": ">=16 || 14 >=14.17"
@@ -2123,6 +3891,17 @@
       "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
       "license": "MIT"
     },
+    "node_modules/mz": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
+      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
+      "license": "MIT",
+      "dependencies": {
+        "any-promise": "^1.0.0",
+        "object-assign": "^4.0.1",
+        "thenify-all": "^1.0.0"
+      }
+    },
     "node_modules/nanoid": {
       "version": "3.3.11",
       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
@@ -2142,12 +3921,12 @@
       }
     },
     "node_modules/next": {
-      "version": "15.4.2",
-      "resolved": "https://registry.npmjs.org/next/-/next-15.4.2.tgz",
-      "integrity": "sha512-oH1rmFso+84NIkocfuxaGKcXIjMUTmnzV2x0m8qsYtB4gD6iflLMESXt5XJ8cFgWMBei4v88rNr/j+peNg72XA==",
+      "version": "15.4.3",
+      "resolved": "https://registry.npmjs.org/next/-/next-15.4.3.tgz",
+      "integrity": "sha512-uW7Qe6poVasNIE1X382nI29oxSdFJzjQzTgJFLD43MxyPfGKKxCMySllhBpvqr48f58Om+tLMivzRwBpXEytvA==",
       "license": "MIT",
       "dependencies": {
-        "@next/env": "15.4.2",
+        "@next/env": "15.4.3",
         "@swc/helpers": "0.5.15",
         "caniuse-lite": "^1.0.30001579",
         "postcss": "8.4.31",
@@ -2160,14 +3939,14 @@
         "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
       },
       "optionalDependencies": {
-        "@next/swc-darwin-arm64": "15.4.2",
-        "@next/swc-darwin-x64": "15.4.2",
-        "@next/swc-linux-arm64-gnu": "15.4.2",
-        "@next/swc-linux-arm64-musl": "15.4.2",
-        "@next/swc-linux-x64-gnu": "15.4.2",
-        "@next/swc-linux-x64-musl": "15.4.2",
-        "@next/swc-win32-arm64-msvc": "15.4.2",
-        "@next/swc-win32-x64-msvc": "15.4.2",
+        "@next/swc-darwin-arm64": "15.4.3",
+        "@next/swc-darwin-x64": "15.4.3",
+        "@next/swc-linux-arm64-gnu": "15.4.3",
+        "@next/swc-linux-arm64-musl": "15.4.3",
+        "@next/swc-linux-x64-gnu": "15.4.3",
+        "@next/swc-linux-x64-musl": "15.4.3",
+        "@next/swc-win32-arm64-msvc": "15.4.3",
+        "@next/swc-win32-x64-msvc": "15.4.3",
         "sharp": "^0.34.3"
       },
       "peerDependencies": {
@@ -2268,6 +4047,15 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/normalize-path": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/normalize-range": {
       "version": "0.1.2",
       "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
@@ -2278,6 +4066,24 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/object-hash": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
+      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/openai": {
       "version": "4.104.0",
       "resolved": "https://registry.npmjs.org/openai/-/openai-4.104.0.tgz",
@@ -2323,17 +4129,89 @@
       "integrity": "sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==",
       "license": "MIT"
     },
+    "node_modules/package-json-from-dist": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
+      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
+      "license": "BlueOak-1.0.0"
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "license": "MIT"
+    },
+    "node_modules/path-scurry": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
+      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
+      "license": "BlueOak-1.0.0",
+      "dependencies": {
+        "lru-cache": "^10.2.0",
+        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
+      },
+      "engines": {
+        "node": ">=16 || 14 >=14.18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/path-scurry/node_modules/lru-cache": {
+      "version": "10.4.3",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
+      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
+      "license": "ISC"
+    },
     "node_modules/picocolors": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
       "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
       "license": "ISC"
     },
+    "node_modules/picomatch": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
+      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/pify": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/pirates": {
+      "version": "4.0.7",
+      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
+      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/postcss": {
       "version": "8.5.6",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
       "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -2358,17 +4236,123 @@
         "node": "^10 || ^12 || >=14"
       }
     },
+    "node_modules/postcss-import": {
+      "version": "15.1.0",
+      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
+      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
+      "license": "MIT",
+      "dependencies": {
+        "postcss-value-parser": "^4.0.0",
+        "read-cache": "^1.0.0",
+        "resolve": "^1.1.7"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "postcss": "^8.0.0"
+      }
+    },
+    "node_modules/postcss-js": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
+      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
+      "license": "MIT",
+      "dependencies": {
+        "camelcase-css": "^2.0.1"
+      },
+      "engines": {
+        "node": "^12 || ^14 || >= 16"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/postcss/"
+      },
+      "peerDependencies": {
+        "postcss": "^8.4.21"
+      }
+    },
+    "node_modules/postcss-nested": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
+      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "postcss-selector-parser": "^6.1.1"
+      },
+      "engines": {
+        "node": ">=12.0"
+      },
+      "peerDependencies": {
+        "postcss": "^8.2.14"
+      }
+    },
+    "node_modules/postcss-nested/node_modules/postcss-selector-parser": {
+      "version": "6.1.2",
+      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
+      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
+      "license": "MIT",
+      "dependencies": {
+        "cssesc": "^3.0.0",
+        "util-deprecate": "^1.0.2"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/postcss-selector-parser": {
+      "version": "6.0.10",
+      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
+      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
+      "license": "MIT",
+      "dependencies": {
+        "cssesc": "^3.0.0",
+        "util-deprecate": "^1.0.2"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
     "node_modules/postcss-value-parser": {
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
       "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
-      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/queue-microtask": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
+      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
       "license": "MIT"
     },
     "node_modules/react": {
-      "version": "18.2.0",
-      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
-      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
+      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
       "license": "MIT",
       "dependencies": {
         "loose-envify": "^1.1.0"
@@ -2378,16 +4362,140 @@
       }
     },
     "node_modules/react-dom": {
-      "version": "18.2.0",
-      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
-      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
+      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
       "license": "MIT",
       "dependencies": {
         "loose-envify": "^1.1.0",
-        "scheduler": "^0.23.0"
+        "scheduler": "^0.23.2"
       },
       "peerDependencies": {
-        "react": "^18.2.0"
+        "react": "^18.3.1"
+      }
+    },
+    "node_modules/react-refresh": {
+      "version": "0.17.0",
+      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
+      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/read-cache": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
+      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
+      "license": "MIT",
+      "dependencies": {
+        "pify": "^2.3.0"
+      }
+    },
+    "node_modules/readdirp": {
+      "version": "3.6.0",
+      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
+      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
+      "license": "MIT",
+      "dependencies": {
+        "picomatch": "^2.2.1"
+      },
+      "engines": {
+        "node": ">=8.10.0"
+      }
+    },
+    "node_modules/resolve": {
+      "version": "1.22.10",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
+      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.16.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/reusify": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
+      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
+      "license": "MIT",
+      "engines": {
+        "iojs": ">=1.0.0",
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/rollup": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.45.1.tgz",
+      "integrity": "sha512-4iya7Jb76fVpQyLoiVpzUrsjQ12r3dM7fIVz+4NwoYvZOShknRmiv+iu9CClZml5ZLGb0XMcYLutK6w9tgxHDw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/estree": "1.0.8"
+      },
+      "bin": {
+        "rollup": "dist/bin/rollup"
+      },
+      "engines": {
+        "node": ">=18.0.0",
+        "npm": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "@rollup/rollup-android-arm-eabi": "4.45.1",
+        "@rollup/rollup-android-arm64": "4.45.1",
+        "@rollup/rollup-darwin-arm64": "4.45.1",
+        "@rollup/rollup-darwin-x64": "4.45.1",
+        "@rollup/rollup-freebsd-arm64": "4.45.1",
+        "@rollup/rollup-freebsd-x64": "4.45.1",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.45.1",
+        "@rollup/rollup-linux-arm-musleabihf": "4.45.1",
+        "@rollup/rollup-linux-arm64-gnu": "4.45.1",
+        "@rollup/rollup-linux-arm64-musl": "4.45.1",
+        "@rollup/rollup-linux-loongarch64-gnu": "4.45.1",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.45.1",
+        "@rollup/rollup-linux-riscv64-gnu": "4.45.1",
+        "@rollup/rollup-linux-riscv64-musl": "4.45.1",
+        "@rollup/rollup-linux-s390x-gnu": "4.45.1",
+        "@rollup/rollup-linux-x64-gnu": "4.45.1",
+        "@rollup/rollup-linux-x64-musl": "4.45.1",
+        "@rollup/rollup-win32-arm64-msvc": "4.45.1",
+        "@rollup/rollup-win32-ia32-msvc": "4.45.1",
+        "@rollup/rollup-win32-x64-msvc": "4.45.1",
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/run-parallel": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
+      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "queue-microtask": "^1.2.2"
       }
     },
     "node_modules/scheduler": {
@@ -2400,16 +4508,13 @@
       }
     },
     "node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
       "license": "ISC",
-      "optional": true,
       "bin": {
         "semver": "bin/semver.js"
-      },
-      "engines": {
-        "node": ">=10"
       }
     },
     "node_modules/sharp": {
@@ -2455,6 +4560,52 @@
         "@img/sharp-win32-x64": "0.34.3"
       }
     },
+    "node_modules/sharp/node_modules/semver": {
+      "version": "7.7.2",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
+      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "license": "ISC",
+      "optional": true,
+      "bin": {
+        "semver": "bin/semver.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "license": "MIT",
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/signal-exit": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
+      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
+      "license": "ISC",
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/simple-swizzle": {
       "version": "0.2.2",
       "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
@@ -2471,7 +4622,103 @@
       "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
       "license": "BSD-3-Clause",
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/string-width": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
+      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
+      "license": "MIT",
+      "dependencies": {
+        "eastasianwidth": "^0.2.0",
+        "emoji-regex": "^9.2.2",
+        "strip-ansi": "^7.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/string-width-cjs": {
+      "name": "string-width",
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
+      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
+      "license": "MIT",
+      "dependencies": {
+        "emoji-regex": "^8.0.0",
+        "is-fullwidth-code-point": "^3.0.0",
+        "strip-ansi": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/string-width-cjs/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/string-width-cjs/node_modules/emoji-regex": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
+      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
+      "license": "MIT"
+    },
+    "node_modules/string-width-cjs/node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/strip-ansi": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
+      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
+      }
+    },
+    "node_modules/strip-ansi-cjs": {
+      "name": "strip-ansi",
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
       }
     },
     "node_modules/styled-jsx": {
@@ -2497,12 +4744,133 @@
         }
       }
     },
+    "node_modules/sucrase": {
+      "version": "3.35.0",
+      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
+      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.2",
+        "commander": "^4.0.0",
+        "glob": "^10.3.10",
+        "lines-and-columns": "^1.1.6",
+        "mz": "^2.7.0",
+        "pirates": "^4.0.1",
+        "ts-interface-checker": "^0.1.9"
+      },
+      "bin": {
+        "sucrase": "bin/sucrase",
+        "sucrase-node": "bin/sucrase-node"
+      },
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      }
+    },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/tailwindcss": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
-      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
-      "dev": true,
-      "license": "MIT"
+      "version": "3.4.17",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
+      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
+      "license": "MIT",
+      "dependencies": {
+        "@alloc/quick-lru": "^5.2.0",
+        "arg": "^5.0.2",
+        "chokidar": "^3.6.0",
+        "didyoumean": "^1.2.2",
+        "dlv": "^1.1.3",
+        "fast-glob": "^3.3.2",
+        "glob-parent": "^6.0.2",
+        "is-glob": "^4.0.3",
+        "jiti": "^1.21.6",
+        "lilconfig": "^3.1.3",
+        "micromatch": "^4.0.8",
+        "normalize-path": "^3.0.0",
+        "object-hash": "^3.0.0",
+        "picocolors": "^1.1.1",
+        "postcss": "^8.4.47",
+        "postcss-import": "^15.1.0",
+        "postcss-js": "^4.0.1",
+        "postcss-load-config": "^4.0.2",
+        "postcss-nested": "^6.2.0",
+        "postcss-selector-parser": "^6.1.2",
+        "resolve": "^1.22.8",
+        "sucrase": "^3.35.0"
+      },
+      "bin": {
+        "tailwind": "lib/cli.js",
+        "tailwindcss": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/tailwindcss/node_modules/jiti": {
+      "version": "1.21.7",
+      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
+      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
+      "license": "MIT",
+      "bin": {
+        "jiti": "bin/jiti.js"
+      }
+    },
+    "node_modules/tailwindcss/node_modules/postcss-load-config": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
+      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "lilconfig": "^3.0.0",
+        "yaml": "^2.3.4"
+      },
+      "engines": {
+        "node": ">= 14"
+      },
+      "peerDependencies": {
+        "postcss": ">=8.0.9",
+        "ts-node": ">=9.0.0"
+      },
+      "peerDependenciesMeta": {
+        "postcss": {
+          "optional": true
+        },
+        "ts-node": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/tailwindcss/node_modules/postcss-selector-parser": {
+      "version": "6.1.2",
+      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
+      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
+      "license": "MIT",
+      "dependencies": {
+        "cssesc": "^3.0.0",
+        "util-deprecate": "^1.0.2"
+      },
+      "engines": {
+        "node": ">=4"
+      }
     },
     "node_modules/tapable": {
       "version": "2.2.2",
@@ -2532,12 +4900,106 @@
         "node": ">=18"
       }
     },
+    "node_modules/tar/node_modules/yallist": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
+      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
+      "dev": true,
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/thenify": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
+      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
+      "license": "MIT",
+      "dependencies": {
+        "any-promise": "^1.0.0"
+      }
+    },
+    "node_modules/thenify-all": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
+      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
+      "license": "MIT",
+      "dependencies": {
+        "thenify": ">= 3.1.0 < 4"
+      },
+      "engines": {
+        "node": ">=0.8"
+      }
+    },
+    "node_modules/tinyglobby": {
+      "version": "0.2.14",
+      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
+      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fdir": "^6.4.4",
+        "picomatch": "^4.0.2"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/SuperchupuDev"
+      }
+    },
+    "node_modules/tinyglobby/node_modules/fdir": {
+      "version": "6.4.6",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
+      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "picomatch": "^3 || ^4"
+      },
+      "peerDependenciesMeta": {
+        "picomatch": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/tinyglobby/node_modules/picomatch": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
+      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/to-regex-range": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
+      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+      "license": "MIT",
+      "dependencies": {
+        "is-number": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=8.0"
+      }
+    },
     "node_modules/tr46": {
       "version": "0.0.3",
       "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
       "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
       "license": "MIT"
     },
+    "node_modules/ts-interface-checker": {
+      "version": "0.1.13",
+      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
+      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
+      "license": "Apache-2.0"
+    },
     "node_modules/tslib": {
       "version": "2.8.1",
       "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
@@ -2594,6 +5056,115 @@
         "browserslist": ">= 4.21.0"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "license": "MIT"
+    },
+    "node_modules/vite": {
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/vite/-/vite-7.0.6.tgz",
+      "integrity": "sha512-MHFiOENNBd+Bd9uvc8GEsIzdkn1JxMmEeYX35tI3fv0sJBUTfW5tQsoaOwuY4KhBI09A3dUJ/DXf2yxPVPUceg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "esbuild": "^0.25.0",
+        "fdir": "^6.4.6",
+        "picomatch": "^4.0.3",
+        "postcss": "^8.5.6",
+        "rollup": "^4.40.0",
+        "tinyglobby": "^0.2.14"
+      },
+      "bin": {
+        "vite": "bin/vite.js"
+      },
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      },
+      "funding": {
+        "url": "https://github.com/vitejs/vite?sponsor=1"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.3"
+      },
+      "peerDependencies": {
+        "@types/node": "^20.19.0 || >=22.12.0",
+        "jiti": ">=1.21.0",
+        "less": "^4.0.0",
+        "lightningcss": "^1.21.0",
+        "sass": "^1.70.0",
+        "sass-embedded": "^1.70.0",
+        "stylus": ">=0.54.8",
+        "sugarss": "^5.0.0",
+        "terser": "^5.16.0",
+        "tsx": "^4.8.1",
+        "yaml": "^2.4.2"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        },
+        "jiti": {
+          "optional": true
+        },
+        "less": {
+          "optional": true
+        },
+        "lightningcss": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        },
+        "sass-embedded": {
+          "optional": true
+        },
+        "stylus": {
+          "optional": true
+        },
+        "sugarss": {
+          "optional": true
+        },
+        "terser": {
+          "optional": true
+        },
+        "tsx": {
+          "optional": true
+        },
+        "yaml": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/vite/node_modules/fdir": {
+      "version": "6.4.6",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
+      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "picomatch": "^3 || ^4"
+      },
+      "peerDependenciesMeta": {
+        "picomatch": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/vite/node_modules/picomatch": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
+      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
     "node_modules/web-streams-polyfill": {
       "version": "4.0.0-beta.3",
       "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz",
@@ -2619,14 +5190,129 @@
         "webidl-conversions": "^3.0.0"
       }
     },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/wrap-ansi": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
+      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^6.1.0",
+        "string-width": "^5.0.1",
+        "strip-ansi": "^7.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
+      }
+    },
+    "node_modules/wrap-ansi-cjs": {
+      "name": "wrap-ansi",
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
+      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.0.0",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
+      }
+    },
+    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
+      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
+      "license": "MIT"
+    },
+    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
+      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
+      "license": "MIT",
+      "dependencies": {
+        "emoji-regex": "^8.0.0",
+        "is-fullwidth-code-point": "^3.0.0",
+        "strip-ansi": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/yallist": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
-      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
       "dev": true,
-      "license": "BlueOak-1.0.0",
+      "license": "ISC"
+    },
+    "node_modules/yaml": {
+      "version": "2.8.0",
+      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
+      "integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
+      "license": "ISC",
+      "bin": {
+        "yaml": "bin.mjs"
+      },
       "engines": {
-        "node": ">=18"
+        "node": ">= 14.6"
       }
     }
   }
diff --git a/package.json b/package.json
index 117b760..9e5388e 100644
--- a/package.json
+++ b/package.json
@@ -1,3 +1,4 @@
+<<<<<<< HEAD
 {
   "name": "beatsmarketlebon",
   "private": true,
@@ -24,4 +25,20 @@
     "globals": "^16.3.0",
     "vite": "^7.0.4"
   }
+=======
+"dependencies": {
+  "@radix-ui/react-accordion": "^1.2.11",
+  "@tailwindcss/forms": "^0.5.10",
+  "@tailwindcss/typography": "^0.5.16",
+  "lucide-react": "^0.525.0",
+  "next": "^15.4.2",
+  "openai": "^4.12.0",
+  "react": "^18.2.0",
+  "react-dom": "^18.2.0",
+  "tailwindcss": "^3.2.7",
+  "typescript": "^5.1.3"
+},
+"devDependencies": {
+  "vite": "^4.0.0"
+>>>>>>> 5ea80a4 (Mise à jour des fichiers package.json et package-lock.json)
 }

commit 0bacedaf9df82a31c8c6811fdf7c968b6cc29aa5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:45:55 2025 +0200

    Sauvegarde avant pull

diff --git a/beatsmarketlebon/.gitignore b/beatsmarketlebon/.gitignore
new file mode 100644
index 0000000..a547bf3
--- /dev/null
+++ b/beatsmarketlebon/.gitignore
@@ -0,0 +1,24 @@
+# Logs
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+pnpm-debug.log*
+lerna-debug.log*
+
+node_modules
+dist
+dist-ssr
+*.local
+
+# Editor directories and files
+.vscode/*
+!.vscode/extensions.json
+.idea
+.DS_Store
+*.suo
+*.ntvs*
+*.njsproj
+*.sln
+*.sw?
diff --git a/beatsmarketlebon/README.md b/beatsmarketlebon/README.md
new file mode 100644
index 0000000..7059a96
--- /dev/null
+++ b/beatsmarketlebon/README.md
@@ -0,0 +1,12 @@
+# React + Vite
+
+This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
+
+Currently, two official plugins are available:
+
+- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
+- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
+
+## Expanding the ESLint configuration
+
+If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
diff --git a/beatsmarketlebon/eslint.config.js b/beatsmarketlebon/eslint.config.js
new file mode 100644
index 0000000..cee1e2c
--- /dev/null
+++ b/beatsmarketlebon/eslint.config.js
@@ -0,0 +1,29 @@
+import js from '@eslint/js'
+import globals from 'globals'
+import reactHooks from 'eslint-plugin-react-hooks'
+import reactRefresh from 'eslint-plugin-react-refresh'
+import { defineConfig, globalIgnores } from 'eslint/config'
+
+export default defineConfig([
+  globalIgnores(['dist']),
+  {
+    files: ['**/*.{js,jsx}'],
+    extends: [
+      js.configs.recommended,
+      reactHooks.configs['recommended-latest'],
+      reactRefresh.configs.vite,
+    ],
+    languageOptions: {
+      ecmaVersion: 2020,
+      globals: globals.browser,
+      parserOptions: {
+        ecmaVersion: 'latest',
+        ecmaFeatures: { jsx: true },
+        sourceType: 'module',
+      },
+    },
+    rules: {
+      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
+    },
+  },
+])
diff --git a/beatsmarketlebon/index.html b/beatsmarketlebon/index.html
new file mode 100644
index 0000000..0c589ec
--- /dev/null
+++ b/beatsmarketlebon/index.html
@@ -0,0 +1,13 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Vite + React</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.jsx"></script>
+  </body>
+</html>
diff --git a/beatsmarketlebon/package-lock.json b/beatsmarketlebon/package-lock.json
new file mode 100644
index 0000000..64d626e
--- /dev/null
+++ b/beatsmarketlebon/package-lock.json
@@ -0,0 +1,2796 @@
+{
+  "name": "beatsmarketlebon",
+  "version": "0.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "beatsmarketlebon",
+      "version": "0.0.0",
+      "dependencies": {
+        "react": "^19.1.0",
+        "react-dom": "^19.1.0"
+      },
+      "devDependencies": {
+        "@eslint/js": "^9.30.1",
+        "@types/react": "^19.1.8",
+        "@types/react-dom": "^19.1.6",
+        "@vitejs/plugin-react": "^4.6.0",
+        "eslint": "^9.30.1",
+        "eslint-plugin-react-hooks": "^5.2.0",
+        "eslint-plugin-react-refresh": "^0.4.20",
+        "globals": "^16.3.0",
+        "vite": "^7.0.4"
+      }
+    },
+    "node_modules/@ampproject/remapping": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
+      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/code-frame": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
+      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "js-tokens": "^4.0.0",
+        "picocolors": "^1.1.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/compat-data": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
+      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/core": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz",
+      "integrity": "sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@ampproject/remapping": "^2.2.0",
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-compilation-targets": "^7.27.2",
+        "@babel/helper-module-transforms": "^7.27.3",
+        "@babel/helpers": "^7.27.6",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/traverse": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "convert-source-map": "^2.0.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.2",
+        "json5": "^2.2.3",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/babel"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz",
+      "integrity": "sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "@jridgewell/gen-mapping": "^0.3.12",
+        "@jridgewell/trace-mapping": "^0.3.28",
+        "jsesc": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
+      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/compat-data": "^7.27.2",
+        "@babel/helper-validator-option": "^7.27.1",
+        "browserslist": "^4.24.0",
+        "lru-cache": "^5.1.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-globals": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
+      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-imports": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
+      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-transforms": {
+      "version": "7.27.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
+      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "@babel/traverse": "^7.27.3"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-plugin-utils": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
+      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-string-parser": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
+      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-identifier": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
+      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-option": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
+      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helpers": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
+      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.27.6"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/parser": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz",
+      "integrity": "sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.28.0"
+      },
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-self": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
+      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-source": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
+      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/template": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
+      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/parser": "^7.27.2",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/traverse": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz",
+      "integrity": "sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-globals": "^7.28.0",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.28.0",
+        "debug": "^4.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/types": {
+      "version": "7.28.1",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz",
+      "integrity": "sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@esbuild/aix-ppc64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz",
+      "integrity": "sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "aix"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz",
+      "integrity": "sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz",
+      "integrity": "sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz",
+      "integrity": "sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz",
+      "integrity": "sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz",
+      "integrity": "sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz",
+      "integrity": "sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz",
+      "integrity": "sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz",
+      "integrity": "sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ia32": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz",
+      "integrity": "sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-loong64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz",
+      "integrity": "sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-mips64el": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz",
+      "integrity": "sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==",
+      "cpu": [
+        "mips64el"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ppc64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz",
+      "integrity": "sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-riscv64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz",
+      "integrity": "sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-s390x": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz",
+      "integrity": "sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz",
+      "integrity": "sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz",
+      "integrity": "sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz",
+      "integrity": "sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz",
+      "integrity": "sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openharmony-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz",
+      "integrity": "sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openharmony"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/sunos-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz",
+      "integrity": "sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "sunos"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-arm64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz",
+      "integrity": "sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-ia32": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz",
+      "integrity": "sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-x64": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz",
+      "integrity": "sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
+      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "eslint-visitor-keys": "^3.4.3"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      },
+      "peerDependencies": {
+        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
+      "version": "3.4.3",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
+      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint-community/regexpp": {
+      "version": "4.12.1",
+      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
+      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@eslint/config-array": {
+      "version": "0.21.0",
+      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
+      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@eslint/object-schema": "^2.1.6",
+        "debug": "^4.3.1",
+        "minimatch": "^3.1.2"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/config-helpers": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz",
+      "integrity": "sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/core": {
+      "version": "0.15.1",
+      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz",
+      "integrity": "sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/json-schema": "^7.0.15"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/eslintrc": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
+      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ajv": "^6.12.4",
+        "debug": "^4.3.2",
+        "espree": "^10.0.1",
+        "globals": "^14.0.0",
+        "ignore": "^5.2.0",
+        "import-fresh": "^3.2.1",
+        "js-yaml": "^4.1.0",
+        "minimatch": "^3.1.2",
+        "strip-json-comments": "^3.1.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint/eslintrc/node_modules/globals": {
+      "version": "14.0.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
+      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@eslint/js": {
+      "version": "9.31.0",
+      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.31.0.tgz",
+      "integrity": "sha512-LOm5OVt7D4qiKCqoiPbA7LWmI+tbw1VbTUowBcUMgQSuM6poJufkFkYDcQpo5KfgD39TnNySV26QjOh7VFpSyw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://eslint.org/donate"
+      }
+    },
+    "node_modules/@eslint/object-schema": {
+      "version": "2.1.6",
+      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
+      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/plugin-kit": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.4.tgz",
+      "integrity": "sha512-Ul5l+lHEcw3L5+k8POx6r74mxEYKG5kOb6Xpy2gCRW6zweT6TEhAf8vhxGgjhqrd/VO/Dirhsb+1hNpD1ue9hw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@eslint/core": "^0.15.1",
+        "levn": "^0.4.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@humanfs/core": {
+      "version": "0.19.1",
+      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
+      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18.0"
+      }
+    },
+    "node_modules/@humanfs/node": {
+      "version": "0.16.6",
+      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
+      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@humanfs/core": "^0.19.1",
+        "@humanwhocodes/retry": "^0.3.0"
+      },
+      "engines": {
+        "node": ">=18.18.0"
+      }
+    },
+    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
+      "version": "0.3.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
+      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/module-importer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
+      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=12.22"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/retry": {
+      "version": "0.4.3",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
+      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.12",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
+      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.0",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
+      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.5.4",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
+      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.29",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
+      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/@rolldown/pluginutils": {
+      "version": "1.0.0-beta.27",
+      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
+      "integrity": "sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@rollup/rollup-android-arm-eabi": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.45.1.tgz",
+      "integrity": "sha512-NEySIFvMY0ZQO+utJkgoMiCAjMrGvnbDLHvcmlA33UXJpYBCvlBEbMMtV837uCkS+plG2umfhn0T5mMAxGrlRA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-android-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.45.1.tgz",
+      "integrity": "sha512-ujQ+sMXJkg4LRJaYreaVx7Z/VMgBBd89wGS4qMrdtfUFZ+TSY5Rs9asgjitLwzeIbhwdEhyj29zhst3L1lKsRQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.45.1.tgz",
+      "integrity": "sha512-FSncqHvqTm3lC6Y13xncsdOYfxGSLnP+73k815EfNmpewPs+EyM49haPS105Rh4aF5mJKywk9X0ogzLXZzN9lA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-x64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.45.1.tgz",
+      "integrity": "sha512-2/vVn/husP5XI7Fsf/RlhDaQJ7x9zjvC81anIVbr4b/f0xtSmXQTFcGIQ/B1cXIYM6h2nAhJkdMHTnD7OtQ9Og==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-arm64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.45.1.tgz",
+      "integrity": "sha512-4g1kaDxQItZsrkVTdYQ0bxu4ZIQ32cotoQbmsAnW1jAE4XCMbcBPDirX5fyUzdhVCKgPcrwWuucI8yrVRBw2+g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-x64": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.45.1.tgz",
+      "integrity": "sha512-L/6JsfiL74i3uK1Ti2ZFSNsp5NMiM4/kbbGEcOCps99aZx3g8SJMO1/9Y0n/qKlWZfn6sScf98lEOUe2mBvW9A==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.45.1.tgz",
+      "integrity": "sha512-RkdOTu2jK7brlu+ZwjMIZfdV2sSYHK2qR08FUWcIoqJC2eywHbXr0L8T/pONFwkGukQqERDheaGTeedG+rra6Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.45.1.tgz",
+      "integrity": "sha512-3kJ8pgfBt6CIIr1o+HQA7OZ9mp/zDk3ctekGl9qn/pRBgrRgfwiffaUmqioUGN9hv0OHv2gxmvdKOkARCtRb8Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.45.1.tgz",
+      "integrity": "sha512-k3dOKCfIVixWjG7OXTCOmDfJj3vbdhN0QYEqB+OuGArOChek22hn7Uy5A/gTDNAcCy5v2YcXRJ/Qcnm4/ma1xw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.45.1.tgz",
+      "integrity": "sha512-PmI1vxQetnM58ZmDFl9/Uk2lpBBby6B6rF4muJc65uZbxCs0EA7hhKCk2PKlmZKuyVSHAyIw3+/SiuMLxKxWog==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.45.1.tgz",
+      "integrity": "sha512-9UmI0VzGmNJ28ibHW2GpE2nF0PBQqsyiS4kcJ5vK+wuwGnV5RlqdczVocDSUfGX/Na7/XINRVoUgJyFIgipoRg==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.45.1.tgz",
+      "integrity": "sha512-7nR2KY8oEOUTD3pBAxIBBbZr0U7U+R9HDTPNy+5nVVHDXI4ikYniH1oxQz9VoB5PbBU1CZuDGHkLJkd3zLMWsg==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.45.1.tgz",
+      "integrity": "sha512-nlcl3jgUultKROfZijKjRQLUu9Ma0PeNv/VFHkZiKbXTBQXhpytS8CIj5/NfBeECZtY2FJQubm6ltIxm/ftxpw==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.45.1.tgz",
+      "integrity": "sha512-HJV65KLS51rW0VY6rvZkiieiBnurSzpzore1bMKAhunQiECPuxsROvyeaot/tcK3A3aGnI+qTHqisrpSgQrpgA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-s390x-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.45.1.tgz",
+      "integrity": "sha512-NITBOCv3Qqc6hhwFt7jLV78VEO/il4YcBzoMGGNxznLgRQf43VQDae0aAzKiBeEPIxnDrACiMgbqjuihx08OOw==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-gnu": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.45.1.tgz",
+      "integrity": "sha512-+E/lYl6qu1zqgPEnTrs4WysQtvc/Sh4fC2nByfFExqgYrqkKWp1tWIbe+ELhixnenSpBbLXNi6vbEEJ8M7fiHw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-musl": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.45.1.tgz",
+      "integrity": "sha512-a6WIAp89p3kpNoYStITT9RbTbTnqarU7D8N8F2CV+4Cl9fwCOZraLVuVFvlpsW0SbIiYtEnhCZBPLoNdRkjQFw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-arm64-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.45.1.tgz",
+      "integrity": "sha512-T5Bi/NS3fQiJeYdGvRpTAP5P02kqSOpqiopwhj0uaXB6nzs5JVi2XMJb18JUSKhCOX8+UE1UKQufyD6Or48dJg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-ia32-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.45.1.tgz",
+      "integrity": "sha512-lxV2Pako3ujjuUe9jiU3/s7KSrDfH6IgTSQOnDWr9aJ92YsFd7EurmClK0ly/t8dzMkDtd04g60WX6yl0sGfdw==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-x64-msvc": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.45.1.tgz",
+      "integrity": "sha512-M/fKi4sasCdM8i0aWJjCSFm2qEnYRR8AMLG2kxp6wD13+tMGA4Z1tVAuHkNRjud5SW2EM3naLuK35w9twvf6aA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@types/babel__core": {
+      "version": "7.20.5",
+      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
+      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.20.7",
+        "@babel/types": "^7.20.7",
+        "@types/babel__generator": "*",
+        "@types/babel__template": "*",
+        "@types/babel__traverse": "*"
+      }
+    },
+    "node_modules/@types/babel__generator": {
+      "version": "7.27.0",
+      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
+      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__template": {
+      "version": "7.4.4",
+      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
+      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__traverse": {
+      "version": "7.20.7",
+      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
+      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.20.7"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
+      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/json-schema": {
+      "version": "7.0.15",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
+      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/react": {
+      "version": "19.1.8",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.8.tgz",
+      "integrity": "sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@types/react-dom": {
+      "version": "19.1.6",
+      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.6.tgz",
+      "integrity": "sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "^19.0.0"
+      }
+    },
+    "node_modules/@vitejs/plugin-react": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz",
+      "integrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/core": "^7.28.0",
+        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
+        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
+        "@rolldown/pluginutils": "1.0.0-beta.27",
+        "@types/babel__core": "^7.20.5",
+        "react-refresh": "^0.17.0"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
+      }
+    },
+    "node_modules/acorn": {
+      "version": "8.15.0",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
+      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-jsx": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
+      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
+      }
+    },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
+      "dev": true,
+      "license": "Python-2.0"
+    },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/brace-expansion": {
+      "version": "1.1.12",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
+      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "node_modules/browserslist": {
+      "version": "4.25.1",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
+      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001726",
+        "electron-to-chromium": "^1.5.173",
+        "node-releases": "^2.0.19",
+        "update-browserslist-db": "^1.1.3"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      }
+    },
+    "node_modules/callsites": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001727",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
+      "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "CC-BY-4.0"
+    },
+    "node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/convert-source-map": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
+      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
+      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/debug": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.3"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/deep-is": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
+      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.5.190",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.190.tgz",
+      "integrity": "sha512-k4McmnB2091YIsdCgkS0fMVMPOJgxl93ltFzaryXqwip1AaxeDqKCGLxkXODDA5Ab/D+tV5EL5+aTx76RvLRxw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/esbuild": {
+      "version": "0.25.8",
+      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz",
+      "integrity": "sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "bin": {
+        "esbuild": "bin/esbuild"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "optionalDependencies": {
+        "@esbuild/aix-ppc64": "0.25.8",
+        "@esbuild/android-arm": "0.25.8",
+        "@esbuild/android-arm64": "0.25.8",
+        "@esbuild/android-x64": "0.25.8",
+        "@esbuild/darwin-arm64": "0.25.8",
+        "@esbuild/darwin-x64": "0.25.8",
+        "@esbuild/freebsd-arm64": "0.25.8",
+        "@esbuild/freebsd-x64": "0.25.8",
+        "@esbuild/linux-arm": "0.25.8",
+        "@esbuild/linux-arm64": "0.25.8",
+        "@esbuild/linux-ia32": "0.25.8",
+        "@esbuild/linux-loong64": "0.25.8",
+        "@esbuild/linux-mips64el": "0.25.8",
+        "@esbuild/linux-ppc64": "0.25.8",
+        "@esbuild/linux-riscv64": "0.25.8",
+        "@esbuild/linux-s390x": "0.25.8",
+        "@esbuild/linux-x64": "0.25.8",
+        "@esbuild/netbsd-arm64": "0.25.8",
+        "@esbuild/netbsd-x64": "0.25.8",
+        "@esbuild/openbsd-arm64": "0.25.8",
+        "@esbuild/openbsd-x64": "0.25.8",
+        "@esbuild/openharmony-arm64": "0.25.8",
+        "@esbuild/sunos-x64": "0.25.8",
+        "@esbuild/win32-arm64": "0.25.8",
+        "@esbuild/win32-ia32": "0.25.8",
+        "@esbuild/win32-x64": "0.25.8"
+      }
+    },
+    "node_modules/escalade": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
+      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/escape-string-regexp": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint": {
+      "version": "9.31.0",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.31.0.tgz",
+      "integrity": "sha512-QldCVh/ztyKJJZLr4jXNUByx3gR+TDYZCRXEktiZoUR3PGy4qCmSbkxcIle8GEwGpb5JBZazlaJ/CxLidXdEbQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@eslint-community/eslint-utils": "^4.2.0",
+        "@eslint-community/regexpp": "^4.12.1",
+        "@eslint/config-array": "^0.21.0",
+        "@eslint/config-helpers": "^0.3.0",
+        "@eslint/core": "^0.15.0",
+        "@eslint/eslintrc": "^3.3.1",
+        "@eslint/js": "9.31.0",
+        "@eslint/plugin-kit": "^0.3.1",
+        "@humanfs/node": "^0.16.6",
+        "@humanwhocodes/module-importer": "^1.0.1",
+        "@humanwhocodes/retry": "^0.4.2",
+        "@types/estree": "^1.0.6",
+        "@types/json-schema": "^7.0.15",
+        "ajv": "^6.12.4",
+        "chalk": "^4.0.0",
+        "cross-spawn": "^7.0.6",
+        "debug": "^4.3.2",
+        "escape-string-regexp": "^4.0.0",
+        "eslint-scope": "^8.4.0",
+        "eslint-visitor-keys": "^4.2.1",
+        "espree": "^10.4.0",
+        "esquery": "^1.5.0",
+        "esutils": "^2.0.2",
+        "fast-deep-equal": "^3.1.3",
+        "file-entry-cache": "^8.0.0",
+        "find-up": "^5.0.0",
+        "glob-parent": "^6.0.2",
+        "ignore": "^5.2.0",
+        "imurmurhash": "^0.1.4",
+        "is-glob": "^4.0.0",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "lodash.merge": "^4.6.2",
+        "minimatch": "^3.1.2",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.9.3"
+      },
+      "bin": {
+        "eslint": "bin/eslint.js"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://eslint.org/donate"
+      },
+      "peerDependencies": {
+        "jiti": "*"
+      },
+      "peerDependenciesMeta": {
+        "jiti": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-plugin-react-hooks": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
+      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
+      }
+    },
+    "node_modules/eslint-plugin-react-refresh": {
+      "version": "0.4.20",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.20.tgz",
+      "integrity": "sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "eslint": ">=8.40"
+      }
+    },
+    "node_modules/eslint-scope": {
+      "version": "8.4.0",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
+      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "esrecurse": "^4.3.0",
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-visitor-keys": {
+      "version": "4.2.1",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
+      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/espree": {
+      "version": "10.4.0",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
+      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "acorn": "^8.15.0",
+        "acorn-jsx": "^5.3.2",
+        "eslint-visitor-keys": "^4.2.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/esquery": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
+      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "estraverse": "^5.1.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/esrecurse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
+      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/estraverse": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
+      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fdir": {
+      "version": "6.4.6",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
+      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "picomatch": "^3 || ^4"
+      },
+      "peerDependenciesMeta": {
+        "picomatch": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/file-entry-cache": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
+      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flat-cache": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=16.0.0"
+      }
+    },
+    "node_modules/find-up": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
+      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "locate-path": "^6.0.0",
+        "path-exists": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/flat-cache": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
+      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flatted": "^3.2.9",
+        "keyv": "^4.5.4"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    },
+    "node_modules/flatted": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
+      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/fsevents": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
+      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
+      }
+    },
+    "node_modules/gensync": {
+      "version": "1.0.0-beta.2",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
+      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/glob-parent": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
+      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/globals": {
+      "version": "16.3.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-16.3.0.tgz",
+      "integrity": "sha512-bqWEnJ1Nt3neqx2q5SFfGS8r/ahumIakg3HcwtNlrVlwXIeNumWn/c7Pn/wKzGhf6SaW6H6uWXLqC30STCMchQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/has-flag": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/ignore": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
+      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/import-fresh": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
+      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "parent-module": "^1.0.0",
+        "resolve-from": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.8.19"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/jsesc": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
+      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/json-buffer": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
+      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/keyv": {
+      "version": "4.5.4",
+      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
+      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "json-buffer": "3.0.1"
+      }
+    },
+    "node_modules/levn": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
+      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1",
+        "type-check": "~0.4.0"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/locate-path": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
+      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-locate": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/lodash.merge": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
+      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "yallist": "^3.0.2"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
+      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "brace-expansion": "^1.1.7"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.11",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
+      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/node-releases": {
+      "version": "2.0.19",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
+      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/optionator": {
+      "version": "0.9.4",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
+      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "deep-is": "^0.1.3",
+        "fast-levenshtein": "^2.0.6",
+        "levn": "^0.4.1",
+        "prelude-ls": "^1.2.1",
+        "type-check": "^0.4.0",
+        "word-wrap": "^1.2.5"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/p-limit": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
+      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "yocto-queue": "^0.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/p-locate": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
+      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-limit": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/parent-module": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
+      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "callsites": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/path-exists": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/picocolors": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
+      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/picomatch": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
+      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/postcss": {
+      "version": "8.5.6",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
+      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.11",
+        "picocolors": "^1.1.1",
+        "source-map-js": "^1.2.1"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/prelude-ls": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
+      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/react": {
+      "version": "19.1.0",
+      "resolved": "https://registry.npmjs.org/react/-/react-19.1.0.tgz",
+      "integrity": "sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "19.1.0",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz",
+      "integrity": "sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==",
+      "license": "MIT",
+      "dependencies": {
+        "scheduler": "^0.26.0"
+      },
+      "peerDependencies": {
+        "react": "^19.1.0"
+      }
+    },
+    "node_modules/react-refresh": {
+      "version": "0.17.0",
+      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
+      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/resolve-from": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/rollup": {
+      "version": "4.45.1",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.45.1.tgz",
+      "integrity": "sha512-4iya7Jb76fVpQyLoiVpzUrsjQ12r3dM7fIVz+4NwoYvZOShknRmiv+iu9CClZml5ZLGb0XMcYLutK6w9tgxHDw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/estree": "1.0.8"
+      },
+      "bin": {
+        "rollup": "dist/bin/rollup"
+      },
+      "engines": {
+        "node": ">=18.0.0",
+        "npm": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "@rollup/rollup-android-arm-eabi": "4.45.1",
+        "@rollup/rollup-android-arm64": "4.45.1",
+        "@rollup/rollup-darwin-arm64": "4.45.1",
+        "@rollup/rollup-darwin-x64": "4.45.1",
+        "@rollup/rollup-freebsd-arm64": "4.45.1",
+        "@rollup/rollup-freebsd-x64": "4.45.1",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.45.1",
+        "@rollup/rollup-linux-arm-musleabihf": "4.45.1",
+        "@rollup/rollup-linux-arm64-gnu": "4.45.1",
+        "@rollup/rollup-linux-arm64-musl": "4.45.1",
+        "@rollup/rollup-linux-loongarch64-gnu": "4.45.1",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.45.1",
+        "@rollup/rollup-linux-riscv64-gnu": "4.45.1",
+        "@rollup/rollup-linux-riscv64-musl": "4.45.1",
+        "@rollup/rollup-linux-s390x-gnu": "4.45.1",
+        "@rollup/rollup-linux-x64-gnu": "4.45.1",
+        "@rollup/rollup-linux-x64-musl": "4.45.1",
+        "@rollup/rollup-win32-arm64-msvc": "4.45.1",
+        "@rollup/rollup-win32-ia32-msvc": "4.45.1",
+        "@rollup/rollup-win32-x64-msvc": "4.45.1",
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.26.0",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
+      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
+      "license": "MIT"
+    },
+    "node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
+      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/strip-json-comments": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
+      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/supports-color": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
+      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/tinyglobby": {
+      "version": "0.2.14",
+      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
+      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fdir": "^6.4.4",
+        "picomatch": "^4.0.2"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/SuperchupuDev"
+      }
+    },
+    "node_modules/type-check": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
+      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/update-browserslist-db": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
+      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "escalade": "^3.2.0",
+        "picocolors": "^1.1.1"
+      },
+      "bin": {
+        "update-browserslist-db": "cli.js"
+      },
+      "peerDependencies": {
+        "browserslist": ">= 4.21.0"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/vite": {
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/vite/-/vite-7.0.6.tgz",
+      "integrity": "sha512-MHFiOENNBd+Bd9uvc8GEsIzdkn1JxMmEeYX35tI3fv0sJBUTfW5tQsoaOwuY4KhBI09A3dUJ/DXf2yxPVPUceg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "esbuild": "^0.25.0",
+        "fdir": "^6.4.6",
+        "picomatch": "^4.0.3",
+        "postcss": "^8.5.6",
+        "rollup": "^4.40.0",
+        "tinyglobby": "^0.2.14"
+      },
+      "bin": {
+        "vite": "bin/vite.js"
+      },
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      },
+      "funding": {
+        "url": "https://github.com/vitejs/vite?sponsor=1"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.3"
+      },
+      "peerDependencies": {
+        "@types/node": "^20.19.0 || >=22.12.0",
+        "jiti": ">=1.21.0",
+        "less": "^4.0.0",
+        "lightningcss": "^1.21.0",
+        "sass": "^1.70.0",
+        "sass-embedded": "^1.70.0",
+        "stylus": ">=0.54.8",
+        "sugarss": "^5.0.0",
+        "terser": "^5.16.0",
+        "tsx": "^4.8.1",
+        "yaml": "^2.4.2"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        },
+        "jiti": {
+          "optional": true
+        },
+        "less": {
+          "optional": true
+        },
+        "lightningcss": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        },
+        "sass-embedded": {
+          "optional": true
+        },
+        "stylus": {
+          "optional": true
+        },
+        "sugarss": {
+          "optional": true
+        },
+        "terser": {
+          "optional": true
+        },
+        "tsx": {
+          "optional": true
+        },
+        "yaml": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/word-wrap": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
+      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/yallist": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/yocto-queue": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
+      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    }
+  }
+}
diff --git a/beatsmarketlebon/src/components/AuthForm.tsx b/beatsmarketlebon/src/components/AuthForm.tsx
new file mode 100644
index 0000000..7d19217
--- /dev/null
+++ b/beatsmarketlebon/src/components/AuthForm.tsx
@@ -0,0 +1,62 @@
+import React, { useState } from 'react'
+import { useAuth } from '@/hooks/useAuth'
+
+export default function AuthForm() {
+  const { user, loading, signIn, signUp, signOut } = useAuth()
+  const [email, setEmail] = useState('')
+  const [password, setPassword] = useState('')
+  const [mode, setMode] = useState<'signin' | 'signup'>('signin')
+  const [error, setError] = useState<string | null>(null)
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault()
+    setError(null)
+    try {
+      if (mode === 'signin') {
+        await signIn(email, password)
+      } else {
+        await signUp(email, password)
+      }
+    } catch (err: any) {
+      setError(err.message)
+    }
+  }
+
+  if (loading) return <p>Chargement...</p>
+
+  if (user)
+    return (
+      <div>
+        <p>Connecté en tant que : {user.email}</p>
+        <button onClick={signOut}>Se déconnecter</button>
+      </div>
+    )
+
+  return (
+    <form onSubmit={handleSubmit}>
+      <h2>{mode === 'signin' ? 'Se connecter' : "S'inscrire"}</h2>
+      {error && <p style={{ color: 'red' }}>{error}</p>}
+      <input
+        type="email"
+        placeholder="Email"
+        value={email}
+        onChange={e => setEmail(e.target.value)}
+        required
+      />
+      <input
+        type="password"
+        placeholder="Mot de passe"
+        value={password}
+        onChange={e => setPassword(e.target.value)}
+        required
+      />
+      <button type="submit">{mode === 'signin' ? 'Connexion' : "S'inscrire"}</button>
+      <p>
+        {mode === 'signin' ? "Pas encore de compte ?" : 'Déjà un compte ?'}{' '}
+        <button type="button" onClick={() => setMode(mode === 'signin' ? 'signup' : 'signin')}>
+          {mode === 'signin' ? "Créer un compte" : 'Se connecter'}
+        </button>
+      </p>
+    </form>
+  )
+}
diff --git a/beatsmarketlebon/src/components/AuthProfile.tsx b/beatsmarketlebon/src/components/AuthProfile.tsx
new file mode 100644
index 0000000..5cbd750
--- /dev/null
+++ b/beatsmarketlebon/src/components/AuthProfile.tsx
@@ -0,0 +1,66 @@
+import React, { useState, useEffect } from 'react'
+import { supabase } from '../lib/supabaseClient'
+
+export default function AuthProfile() {
+  const [email, setEmail] = useState('')
+  const [password, setPassword] = useState('')
+  const [user, setUser] = useState<any>(null)
+  const [error, setError] = useState('')
+
+  useEffect(() => {
+    const sessionUser = supabase.auth.user()
+    if (sessionUser) setUser(sessionUser)
+  }, [])
+
+  async function handleSignIn() {
+    setError('')
+    const { user, error } = await supabase.auth.signIn({ email, password })
+    if (error) {
+      setError(error.message)
+    } else {
+      setUser(user)
+    }
+  }
+
+  async function handleSignOut() {
+    await supabase.auth.signOut()
+    setUser(null)
+    setEmail('')
+    setPassword('')
+  }
+
+  return (
+    <div style={{ maxWidth: 320, margin: 'auto', padding: 20 }}>
+      {!user ? (
+        <>
+          <h2>Connexion</h2>
+          <input
+            type="email"
+            placeholder="Email"
+            value={email}
+            onChange={e => setEmail(e.target.value)}
+            style={{ width: '100%', marginBottom: 8, padding: 8 }}
+          />
+          <input
+            type="password"
+            placeholder="Mot de passe"
+            value={password}
+            onChange={e => setPassword(e.target.value)}
+            style={{ width: '100%', marginBottom: 8, padding: 8 }}
+          />
+          <button onClick={handleSignIn} style={{ width: '100%', padding: 10 }}>
+            Se connecter
+          </button>
+          {error && <p style={{ color: 'red' }}>{error}</p>}
+        </>
+      ) : (
+        <>
+          <h2>Bienvenue {user.email}</h2>
+          <button onClick={handleSignOut} style={{ width: '100%', padding: 10 }}>
+            Se déconnecter
+          </button>
+        </>
+      )}
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/BeatmakerUpload.tsx b/beatsmarketlebon/src/components/BeatmakerUpload.tsx
new file mode 100644
index 0000000..672602f
--- /dev/null
+++ b/beatsmarketlebon/src/components/BeatmakerUpload.tsx
@@ -0,0 +1,62 @@
+import React, { useState } from "react"
+
+const allowedMimeTypesByLicense: Record<string, string[]> = {
+  mp3: ["audio/mpeg"],
+  wav: ["audio/wav", "audio/x-wav"],
+  stems: ["audio/wav", "audio/x-wav"],
+  image: ["image/png", "image/jpeg", "image/jpg", "image/gif"],
+}
+
+interface Props {
+  licenses: string[] // ex: ['mp3', 'wav', 'image']
+  onUploadSuccess: (files: { url: string; originalName: string }[]) => void
+}
+
+export default function BeatmakerUpload({ licenses, onUploadSuccess }: Props) {
+  const [error, setError] = useState<string | null>(null)
+  const [loading, setLoading] = useState(false)
+
+  function checkFilesForLicenses(files: File[], licenses: string[]): boolean {
+    const allowedMimes = licenses.flatMap(lic => allowedMimeTypesByLicense[lic] || [])
+    return files.every(file => allowedMimes.includes(file.type))
+  }
+
+  async function handleFileChange(e: React.ChangeEvent<HTMLInputElement>) {
+    setError(null)
+    const files = e.target.files ? Array.from(e.target.files) : []
+    if (!checkFilesForLicenses(files, licenses)) {
+      setError("Le(s) fichier(s) ne correspondent pas aux licences choisies.")
+      return
+    }
+    setLoading(true)
+
+    try {
+      const formData = new FormData()
+      files.forEach(file => formData.append("file", file))
+
+      // Envoie avec query licenses pour validation backend
+      const res = await fetch(`/api/upload?licenses=${licenses.join(",")}`, {
+        method: "POST",
+        body: formData,
+      })
+      const data = await res.json()
+      if (!res.ok) {
+        setError(data.error || "Erreur lors de l'upload.")
+      } else {
+        onUploadSuccess(data.files)
+      }
+    } catch {
+      setError("Erreur réseau pendant l'upload.")
+    } finally {
+      setLoading(false)
+    }
+  }
+
+  return (
+    <div>
+      <input type="file" multiple onChange={handleFileChange} />
+      {loading && <p>Upload en cours...</p>}
+      {error && <p style={{ color: "red" }}>{error}</p>}
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/Footer.tsx b/beatsmarketlebon/src/components/Footer.tsx
new file mode 100644
index 0000000..d228e26
--- /dev/null
+++ b/beatsmarketlebon/src/components/Footer.tsx
@@ -0,0 +1,26 @@
+import React from "react";
+
+export function Footer() {
+  return (
+    <footer className="bg-[#121212] text-white py-8 px-4 text-center">
+      {/* Contenu principal du footer */}
+      <div className="max-w-7xl mx-auto">
+        {/* Ici tu peux ajouter d'autres éléments du footer comme liens, logo, etc. */}
+
+        {/* Image en bas du footer */}
+        <div className="mt-6">
+          <img
+            src="/images/footerbeatsmarket.jpg"
+            alt="Footer BeatsMarket"
+            className="mx-auto max-w-full h-auto rounded-md shadow-lg"
+          />
+        </div>
+
+        {/* Texte en dessous de l'image */}
+        <p className="mt-4 text-sm opacity-70">
+          © 2025 BeatsMarket - Tous droits réservés.
+        </p>
+      </div>
+    </footer>
+  );
+}
diff --git a/beatsmarketlebon/src/components/LocalFontExample.tsx b/beatsmarketlebon/src/components/LocalFontExample.tsx
new file mode 100644
index 0000000..4481519
--- /dev/null
+++ b/beatsmarketlebon/src/components/LocalFontExample.tsx
@@ -0,0 +1,23 @@
+import localFont from 'next/font/local'
+
+const myFont = localFont({
+  src: '../fonts/MyFont-Regular.woff2',
+  variable: '--my-font',
+  display: 'swap',
+})
+
+export default function LocalFontExample() {
+  return (
+    <>
+      <style jsx global>{`
+        :root {
+          --my-font: ${myFont.style.fontFamily};
+        }
+      `}</style>
+      <main className={myFont.className}>
+        <h1>Exemple de police locale avec Next.js</h1>
+        <p>Cette page utilise une police locale avec la variable CSS {`--my-font`}.</p>
+      </main>
+    </>
+  )
+}
diff --git a/beatsmarketlebon/src/components/PricingPlan.tsx b/beatsmarketlebon/src/components/PricingPlan.tsx
new file mode 100644
index 0000000..72e50d6
--- /dev/null
+++ b/beatsmarketlebon/src/components/PricingPlan.tsx
@@ -0,0 +1,46 @@
+import React from "react"
+
+interface PricingPlanProps {
+  name: string
+  price: string
+  commission: string
+  beatsLimit: number | string
+  support: string
+  masteringCoverIA: boolean
+  statsAvancees: boolean
+  miseEnAvantBeat: number
+  miseEnAvantBoutique: number
+  description: string
+}
+
+export default function PricingPlan({
+  name,
+  price,
+  commission,
+  beatsLimit,
+  support,
+  masteringCoverIA,
+  statsAvancees,
+  miseEnAvantBeat,
+  miseEnAvantBoutique,
+  description,
+}: PricingPlanProps) {
+  return (
+    <div className="border border-gray-700 rounded-lg p-6 bg-gray-900 hover:shadow-lg transition-shadow duration-300 flex flex-col">
+      <h3 className="text-2xl font-bold mb-4 text-white">{name}</h3>
+      <div className="text-3xl font-extrabold mb-4 text-pink-500">{price}</div>
+      <p className="mb-2 text-gray-300">Commission : {commission}</p>
+      <p className="mb-2 text-gray-300">Limite beats : {beatsLimit}</p>
+      <p className="mb-2 text-gray-300">{support}</p>
+
+      <ul className="list-disc list-inside text-gray-400 mb-4 flex-1">
+        {masteringCoverIA && <li>Accès complet Mastering IA & Cover IA</li>}
+        {statsAvancees && <li>Statistiques avancées</li>}
+        {miseEnAvantBeat > 0 && <li>Mise en avant de beat : {miseEnAvantBeat} fois/mois</li>}
+        {miseEnAvantBoutique > 0 && <li>Mise en avant de boutique : {miseEnAvantBoutique} fois/mois</li>}
+      </ul>
+
+      <p className="text-sm text-gray-400 mt-auto">{description}</p>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/SubscriptionForm.tsx b/beatsmarketlebon/src/components/SubscriptionForm.tsx
new file mode 100644
index 0000000..3c03ebc
--- /dev/null
+++ b/beatsmarketlebon/src/components/SubscriptionForm.tsx
@@ -0,0 +1,51 @@
+import React, { useState } from "react"
+
+interface Plan {
+  name: string
+  price: string
+}
+
+interface SubscriptionFormProps {
+  plans: Plan[]
+  onSubscribe: (planName: string) => void
+}
+
+export default function SubscriptionForm({ plans, onSubscribe }: SubscriptionFormProps) {
+  const [selectedPlan, setSelectedPlan] = useState(plans[0]?.name || "")
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    if (selectedPlan) {
+      onSubscribe(selectedPlan)
+    }
+  }
+
+  return (
+    <form onSubmit={handleSubmit} className="max-w-md mx-auto bg-gray-900 p-6 rounded-lg shadow">
+      <h2 className="text-2xl font-bold mb-4 text-white text-center">Choisissez un plan</h2>
+
+      <div className="flex flex-col space-y-4 mb-6">
+        {plans.map((plan) => (
+          <label key={plan.name} className="flex items-center cursor-pointer">
+            <input
+              type="radio"
+              name="plan"
+              value={plan.name}
+              checked={selectedPlan === plan.name}
+              onChange={() => setSelectedPlan(plan.name)}
+              className="mr-3"
+            />
+            <span className="text-white">{plan.name} - {plan.price}</span>
+          </label>
+        ))}
+      </div>
+
+      <button
+        type="submit"
+        className="w-full bg-pink-600 hover:bg-pink-700 text-white font-bold py-2 px-4 rounded transition"
+      >
+        Souscrire
+      </button>
+    </form>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/AssistantIA.tsx b/beatsmarketlebon/src/components/admin/AssistantIA.tsx
new file mode 100644
index 0000000..cc377de
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/AssistantIA.tsx
@@ -0,0 +1,53 @@
+"use client"
+
+import React, { useState } from "react"
+
+export default function AssistantIA() {
+  const [input, setInput] = useState("")
+  const [response, setResponse] = useState<string | null>(null)
+  const [loading, setLoading] = useState(false)
+
+  async function handleSubmit() {
+    if (!input.trim()) return
+    setLoading(true)
+    setResponse(null)
+    try {
+      // Exemple : appel API fictif vers backend IA
+      const res = await fetch("/api/assistant-ia", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ prompt: input }),
+      })
+      const data = await res.json()
+      setResponse(data.reply)
+    } catch (err) {
+      setResponse("Erreur lors de la requête IA.")
+    } finally {
+      setLoading(false)
+    }
+  }
+
+  return (
+    <div>
+      <textarea
+        value={input}
+        onChange={e => setInput(e.target.value)}
+        placeholder="Demande à l'assistant IA..."
+        rows={4}
+        className="w-full rounded border p-2"
+      />
+      <button
+        onClick={handleSubmit}
+        disabled={loading}
+        className="mt-2 rounded bg-purple-600 px-4 py-2 text-white hover:bg-purple-700 disabled:opacity-50"
+      >
+        {loading ? "Chargement..." : "Envoyer"}
+      </button>
+      {response && (
+        <div className="mt-4 rounded border bg-gray-900 p-4 text-white whitespace-pre-wrap">
+          {response}
+        </div>
+      )}
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/TextEditor.tsx b/beatsmarketlebon/src/components/admin/TextEditor.tsx
new file mode 100644
index 0000000..877a1cf
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/TextEditor.tsx
@@ -0,0 +1,29 @@
+"use client"
+
+import React, { useState } from "react"
+import dynamic from "next/dynamic"
+
+// Chargement dynamique pour éviter les problèmes côté serveur
+const ReactQuill = dynamic(() => import("react-quill"), { ssr: false })
+import "react-quill/dist/quill.snow.css"
+
+interface TextEditorProps {
+  initialContent?: string
+  onSave: (content: string) => void
+}
+
+export default function TextEditor({ initialContent = "", onSave }: TextEditorProps) {
+  const [content, setContent] = useState(initialContent)
+
+  return (
+    <div>
+      <ReactQuill theme="snow" value={content} onChange={setContent} />
+      <button
+        onClick={() => onSave(content)}
+        className="mt-3 rounded bg-pink-600 px-4 py-2 text-white hover:bg-pink-700"
+      >
+        Sauvegarder
+      </button>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/artists-table.tsx b/beatsmarketlebon/src/components/admin/artists-table.tsx
new file mode 100644
index 0000000..c8b3f42
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/artists-table.tsx
@@ -0,0 +1,107 @@
+"use client"
+
+import {
+  Table,
+  TableBody,
+  TableCell,
+  TableHead,
+  TableHeader,
+  TableRow,
+} from "@/components/ui/table"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+import { useState } from "react"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+interface Artist {
+  id: string
+  name: string
+  email: string
+  status: "actif" | "suspendu" | "en_attente"
+}
+
+const mockArtists: Artist[] = [
+  {
+    id: "1",
+    name: "Artiste Alpha",
+    email: "alpha@email.com",
+    status: "actif",
+  },
+  {
+    id: "2",
+    name: "Artiste Bravo",
+    email: "bravo@email.com",
+    status: "suspendu",
+  },
+  {
+    id: "3",
+    name: "Artiste Charlie",
+    email: "charlie@email.com",
+    status: "en_attente",
+  },
+]
+
+export function ArtistsTable() {
+  const [artists, setArtists] = useState<Artist[]>(mockArtists)
+
+  const handleAction = (id: string, action: string) => {
+    console.log(`Action "${action}" sur l'artiste ${id}`)
+    // Ici, tu pourras intégrer des appels API ou des modales
+  }
+
+  const getStatusBadge = (status: Artist["status"]) => {
+    switch (status) {
+      case "actif":
+        return <Badge variant="success">Actif</Badge>
+      case "suspendu":
+        return <Badge variant="destructive">Suspendu</Badge>
+      case "en_attente":
+        return <Badge variant="secondary">En attente</Badge>
+    }
+  }
+
+  return (
+    <div className="rounded-xl border bg-muted p-4">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Nom</TableHead>
+            <TableHead>Email</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {artists.map((artist) => (
+            <TableRow key={artist.id}>
+              <TableCell>{artist.name}</TableCell>
+              <TableCell>{artist.email}</TableCell>
+              <TableCell>{getStatusBadge(artist.status)}</TableCell>
+              <TableCell className="text-right">
+                <DropdownMenu>
+                  <DropdownMenuTrigger asChild>
+                    <Button variant="ghost" size="icon">
+                      <MoreHorizontal className="h-4 w-4" />
+                    </Button>
+                  </DropdownMenuTrigger>
+                  <DropdownMenuContent align="end">
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "voir")}>
+                      Voir profil
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "suspendre")}>
+                      Suspendre
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(artist.id, "supprimer")}>
+                      Supprimer
+                    </DropdownMenuItem>
+                  </DropdownMenuContent>
+                </DropdownMenu>
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/beatmakers-table.tsx b/beatsmarketlebon/src/components/admin/beatmakers-table.tsx
new file mode 100644
index 0000000..347430a
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/beatmakers-table.tsx
@@ -0,0 +1,111 @@
+"use client"
+
+import {
+  Table,
+  TableBody,
+  TableCell,
+  TableHead,
+  TableHeader,
+  TableRow,
+} from "@/components/ui/table"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+import { useState } from "react"
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
+
+interface Beatmaker {
+  id: string
+  name: string
+  email: string
+  status: "gratuit" | "bronze" | "or" | "diamant" | "suspendu"
+}
+
+const mockBeatmakers: Beatmaker[] = [
+  {
+    id: "1",
+    name: "Beatmaker Alpha",
+    email: "alpha@beats.com",
+    status: "or",
+  },
+  {
+    id: "2",
+    name: "Beatmaker Bravo",
+    email: "bravo@beats.com",
+    status: "gratuit",
+  },
+  {
+    id: "3",
+    name: "Beatmaker Charlie",
+    email: "charlie@beats.com",
+    status: "suspendu",
+  },
+]
+
+export function BeatmakersTable() {
+  const [beatmakers, setBeatmakers] = useState<Beatmaker[]>(mockBeatmakers)
+
+  const handleAction = (id: string, action: string) => {
+    console.log(`Action "${action}" sur le beatmaker ${id}`)
+    // À connecter plus tard avec l’API
+  }
+
+  const getStatusBadge = (status: Beatmaker["status"]) => {
+    switch (status) {
+      case "gratuit":
+        return <Badge variant="secondary">Gratuit</Badge>
+      case "bronze":
+        return <Badge className="bg-yellow-600 text-white">Bronze</Badge>
+      case "or":
+        return <Badge className="bg-yellow-400 text-black">Or</Badge>
+      case "diamant":
+        return <Badge className="bg-cyan-400 text-black">Diamant</Badge>
+      case "suspendu":
+        return <Badge variant="destructive">Suspendu</Badge>
+    }
+  }
+
+  return (
+    <div className="rounded-xl border bg-muted p-4">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Nom</TableHead>
+            <TableHead>Email</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {beatmakers.map((b) => (
+            <TableRow key={b.id}>
+              <TableCell>{b.name}</TableCell>
+              <TableCell>{b.email}</TableCell>
+              <TableCell>{getStatusBadge(b.status)}</TableCell>
+              <TableCell className="text-right">
+                <DropdownMenu>
+                  <DropdownMenuTrigger asChild>
+                    <Button variant="ghost" size="icon">
+                      <MoreHorizontal className="h-4 w-4" />
+                    </Button>
+                  </DropdownMenuTrigger>
+                  <DropdownMenuContent align="end">
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "voir")}>
+                      Voir profil
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "changer_statut")}>
+                      Changer statut
+                    </DropdownMenuItem>
+                    <DropdownMenuItem onClick={() => handleAction(b.id, "supprimer")}>
+                      Supprimer
+                    </DropdownMenuItem>
+                  </DropdownMenuContent>
+                </DropdownMenu>
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/content-moderation.tsx b/beatsmarketlebon/src/components/admin/content-moderation.tsx
new file mode 100644
index 0000000..bdd1a83
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/content-moderation.tsx
@@ -0,0 +1,57 @@
+import { Badge } from "@/components/ui/badge"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { Button } from "@/components/ui/button"
+import { MoreHorizontal } from "lucide-react"
+
+const flaggedBeats = [
+  {
+    title: "Dark Soul Type Beat",
+    author: "K-Mello",
+    reason: "Contenu inapproprié signalé",
+    status: "En attente",
+  },
+  {
+    title: "Neuro Glitch Trap",
+    author: "NeuroType",
+    reason: "Plagiat suspecté",
+    status: "Revu",
+  },
+]
+
+export function ContentModeration() {
+  return (
+    <Card className="h-full">
+      <CardHeader>
+        <CardTitle>Modération de contenu</CardTitle>
+      </CardHeader>
+      <CardContent className="grid gap-4">
+        {flaggedBeats.map((beat, index) => (
+          <div
+            key={index}
+            className="flex items-start justify-between gap-4 border-b pb-3"
+          >
+            <div className="space-y-1">
+              <p className="text-sm font-semibold">{beat.title}</p>
+              <p className="text-sm text-muted-foreground">
+                Par <span className="font-medium">{beat.author}</span>
+              </p>
+              <p className="text-xs text-red-500">{beat.reason}</p>
+            </div>
+            <div className="flex items-center gap-2">
+              <Badge
+                variant={
+                  beat.status === "En attente" ? "destructive" : "secondary"
+                }
+              >
+                {beat.status}
+              </Badge>
+              <Button size="icon" variant="ghost" className="h-8 w-8">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </div>
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/recent-sales.tsx b/beatsmarketlebon/src/components/admin/recent-sales.tsx
new file mode 100644
index 0000000..4174d32
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/recent-sales.tsx
@@ -0,0 +1,63 @@
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+
+type Sale = {
+  name: string
+  email: string
+  avatar: string
+  amount: string
+}
+
+const sales: Sale[] = [
+  {
+    name: "K-Mello",
+    email: "k.mello@rapgame.fr",
+    avatar: "/images/users/k-mello.jpg",
+    amount: "+49,00€",
+  },
+  {
+    name: "NeuroType",
+    email: "neurotype@battlestyle.ai",
+    avatar: "/images/users/neurotype.jpg",
+    amount: "+199,99€",
+  },
+  {
+    name: "DaVinci Flow",
+    email: "da.vinci@poetica.fr",
+    avatar: "/images/users/davinci.jpg",
+    amount: "+29,99€",
+  },
+  {
+    name: "Ghost Mode",
+    email: "ghostmode@trapcity.io",
+    avatar: "/images/users/ghostmode.jpg",
+    amount: "+59,99€",
+  },
+]
+
+export function RecentSales() {
+  return (
+    <Card className="h-full">
+      <CardHeader>
+        <CardTitle>Ventes récentes</CardTitle>
+      </CardHeader>
+      <CardContent className="grid gap-6">
+        {sales.map((sale, index) => (
+          <div key={index} className="flex items-center gap-4">
+            <Avatar>
+              <AvatarImage src={sale.avatar} alt={sale.name} />
+              <AvatarFallback>{sale.name[0]}</AvatarFallback>
+            </Avatar>
+            <div className="flex-1 space-y-1">
+              <p className="text-sm font-medium leading-none">{sale.name}</p>
+              <p className="text-sm text-muted-foreground">{sale.email}</p>
+            </div>
+            <div className="font-medium text-green-600 dark:text-green-400">
+              {sale.amount}
+            </div>
+          </div>
+        ))}
+      </CardContent>
+    </Card>
+  )
+}
diff --git a/beatsmarketlebon/src/components/admin/revenue-chart.tsx b/beatsmarketlebon/src/components/admin/revenue-chart.tsx
new file mode 100644
index 0000000..832d64f
--- /dev/null
+++ b/beatsmarketlebon/src/components/admin/revenue-chart.tsx
@@ -0,0 +1,42 @@
+"use client"
+
+import {
+  ResponsiveContainer,
+  LineChart,
+  Line,
+  XAxis,
+  YAxis,
+  Tooltip,
+  CartesianGrid,
+} from "recharts"
+
+const data = [
+  { month: "Jan", revenue: 3200 },
+  { month: "Fév", revenue: 4100 },
+  { month: "Mar", revenue: 3900 },
+  { month: "Avr", revenue: 5200 },
+  { month: "Mai", revenue: 4800 },
+  { month: "Juin", revenue: 6100 },
+  { month: "Juil", revenue: 7250 },
+]
+
+export default function RevenueChart() {
+  return (
+    <ResponsiveContainer width="100%" height={300}>
+      <LineChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>
+        <CartesianGrid strokeDasharray="3 3" />
+        <XAxis dataKey="month" stroke="#888888" fontSize={12} />
+        <YAxis stroke="#888888" fontSize={12} />
+        <Tooltip />
+        <Line
+          type="monotone"
+          dataKey="revenue"
+          stroke="#e11d48"
+          strokeWidth={2}
+          dot={{ r: 4 }}
+          activeDot={{ r: 6 }}
+        />
+      </LineChart>
+    </ResponsiveContainer>
+  )
+}
diff --git a/beatsmarketlebon/src/components/beat/BeatActionsMenu.tsx b/beatsmarketlebon/src/components/beat/BeatActionsMenu.tsx
new file mode 100644
index 0000000..6e1bf54
--- /dev/null
+++ b/beatsmarketlebon/src/components/beat/BeatActionsMenu.tsx
@@ -0,0 +1,63 @@
+"use client"
+
+import { useState } from "react"
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu"
+import { Button } from "@/components/ui/button"
+import {
+  MoreHorizontal,
+  Pencil,
+  Trash,
+  Copy,
+  Eye,
+} from "lucide-react"
+
+interface BeatActionsMenuProps {
+  beatId: string
+  onEdit: (id: string) => void
+  onDelete: (id: string) => void
+  onDuplicate: (id: string) => void
+  onPreview: (id: string) => void
+}
+
+export default function BeatActionsMenu({
+  beatId,
+  onEdit,
+  onDelete,
+  onDuplicate,
+  onPreview,
+}: BeatActionsMenuProps) {
+  const [open, setOpen] = useState(false)
+
+  return (
+    <DropdownMenu open={open} onOpenChange={setOpen}>
+      <DropdownMenuTrigger asChild>
+        <Button variant="ghost" size="icon">
+          <MoreHorizontal className="h-4 w-4" />
+        </Button>
+      </DropdownMenuTrigger>
+      <DropdownMenuContent align="end" className="w-44">
+        <DropdownMenuItem onClick={() => onPreview(beatId)}>
+          <Eye className="mr-2 h-4 w-4" />
+          Aperçu
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onEdit(beatId)}>
+          <Pencil className="mr-2 h-4 w-4" />
+          Modifier
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onDuplicate(beatId)}>
+          <Copy className="mr-2 h-4 w-4" />
+          Dupliquer
+        </DropdownMenuItem>
+        <DropdownMenuItem onClick={() => onDelete(beatId)} className="text-red-600">
+          <Trash className="mr-2 h-4 w-4" />
+          Supprimer
+        </DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+}
diff --git a/beatsmarketlebon/src/components/beat/BeatForm.tsx b/beatsmarketlebon/src/components/beat/BeatForm.tsx
new file mode 100644
index 0000000..c178bcb
--- /dev/null
+++ b/beatsmarketlebon/src/components/beat/BeatForm.tsx
@@ -0,0 +1,164 @@
+"use client"
+
+import { useState } from "react"
+import { Input } from "@/components/ui/input"
+import { Label } from "@/components/ui/label"
+import { Button } from "@/components/ui/button"
+import { Textarea } from "@/components/ui/textarea"
+import { Switch } from "@/components/ui/switch"
+import { cn } from "@/lib/utils"
+
+interface BeatFormProps {
+  onSubmit: (data: BeatFormValues) => void
+  initialData?: BeatFormValues
+  loading?: boolean
+}
+
+export interface BeatFormValues {
+  title: string
+  description: string
+  genre: string
+  tags: string
+  priceMp3: number
+  priceWav: number
+  priceExclusive: number
+  isVisible: boolean
+}
+
+export default function BeatForm({
+  onSubmit,
+  initialData,
+  loading = false,
+}: BeatFormProps) {
+  const [form, setForm] = useState<BeatFormValues>(
+    initialData || {
+      title: "",
+      description: "",
+      genre: "",
+      tags: "",
+      priceMp3: 0,
+      priceWav: 0,
+      priceExclusive: 0,
+      isVisible: true,
+    }
+  )
+
+  const handleChange = (
+    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
+  ) => {
+    const { name, value } = e.target
+    setForm((prev) => ({ ...prev, [name]: value }))
+  }
+
+  const handleSwitch = (value: boolean) => {
+    setForm((prev) => ({ ...prev, isVisible: value }))
+  }
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    onSubmit(form)
+  }
+
+  return (
+    <form onSubmit={handleSubmit} className="space-y-6">
+      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+        <div>
+          <Label htmlFor="title">Titre</Label>
+          <Input
+            id="title"
+            name="title"
+            value={form.title}
+            onChange={handleChange}
+            required
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="genre">Genre</Label>
+          <Input
+            id="genre"
+            name="genre"
+            value={form.genre}
+            onChange={handleChange}
+            required
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="tags">Tags (séparés par des virgules)</Label>
+          <Input
+            id="tags"
+            name="tags"
+            value={form.tags}
+            onChange={handleChange}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="description">Description</Label>
+          <Textarea
+            id="description"
+            name="description"
+            value={form.description}
+            onChange={handleChange}
+            rows={3}
+          />
+        </div>
+      </div>
+
+      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
+        <div>
+          <Label htmlFor="priceMp3">Prix MP3 (€)</Label>
+          <Input
+            type="number"
+            id="priceMp3"
+            name="priceMp3"
+            value={form.priceMp3}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="priceWav">Prix WAV (€)</Label>
+          <Input
+            type="number"
+            id="priceWav"
+            name="priceWav"
+            value={form.priceWav}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
+
+        <div>
+          <Label htmlFor="priceExclusive">Prix Exclusif (€)</Label>
+          <Input
+            type="number"
+            id="priceExclusive"
+            name="priceExclusive"
+            value={form.priceExclusive}
+            onChange={handleChange}
+            min={0}
+            step={0.01}
+          />
+        </div>
+      </div>
+
+      <div className="flex items-center justify-between">
+        <Label htmlFor="visibility">Visible dans la boutique</Label>
+        <Switch
+          id="visibility"
+          checked={form.isVisible}
+          onCheckedChange={handleSwitch}
+        />
+      </div>
+
+      <Button type="submit" disabled={loading} className={cn(loading && "opacity-50")}>
+        {loading ? "Enregistrement..." : "Enregistrer le beat"}
+      </Button>
+    </form>
+  )
+}
diff --git a/beatsmarketlebon/src/components/beat/BeatStatusBadge.tsx b/beatsmarketlebon/src/components/beat/BeatStatusBadge.tsx
new file mode 100644
index 0000000..a813df8
--- /dev/null
+++ b/beatsmarketlebon/src/components/beat/BeatStatusBadge.tsx
@@ -0,0 +1,14 @@
+import { Badge } from "@/components/ui/badge"
+
+export default function BeatStatusBadge({ status }: { status: string }) {
+  const map: Record<string, { label: string; variant: "secondary" | "success" | "warning" | "destructive" }> = {
+    draft: { label: "Brouillon", variant: "secondary" },
+    published: { label: "En ligne", variant: "success" },
+    disabled: { label: "Retiré", variant: "warning" },
+    blocked: { label: "Désactivé", variant: "destructive" },
+  }
+
+  const info = map[status] || { label: "Inconnu", variant: "secondary" }
+
+  return <Badge variant={info.variant}>{info.label}</Badge>
+}
diff --git a/beatsmarketlebon/src/components/beat/BeatTable.tsx b/beatsmarketlebon/src/components/beat/BeatTable.tsx
new file mode 100644
index 0000000..3c98863
--- /dev/null
+++ b/beatsmarketlebon/src/components/beat/BeatTable.tsx
@@ -0,0 +1,68 @@
+"use client"
+
+import { useState } from "react"
+import { Badge } from "@/components/ui/badge"
+import { Button } from "@/components/ui/button"
+import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
+import { MoreVertical } from "lucide-react"
+import { format } from "date-fns"
+
+interface Beat {
+  id: string
+  title: string
+  status: "en ligne" | "brouillon" | "supprimé"
+  price: number
+  created_at: string
+}
+
+interface BeatTableProps {
+  beats: Beat[]
+}
+
+export default function BeatTable({ beats }: BeatTableProps) {
+  const [selectedId, setSelectedId] = useState<string | null>(null)
+
+  return (
+    <div className="rounded-xl border bg-card p-4 shadow-sm">
+      <Table>
+        <TableHeader>
+          <TableRow>
+            <TableHead>Titre</TableHead>
+            <TableHead>Statut</TableHead>
+            <TableHead>Prix (€)</TableHead>
+            <TableHead>Date</TableHead>
+            <TableHead className="text-right">Actions</TableHead>
+          </TableRow>
+        </TableHeader>
+        <TableBody>
+          {beats.map((beat) => (
+            <TableRow key={beat.id}>
+              <TableCell>{beat.title}</TableCell>
+              <TableCell>
+                <Badge
+                  variant={
+                    beat.status === "en ligne"
+                      ? "success"
+                      : beat.status === "brouillon"
+                      ? "secondary"
+                      : "destructive"
+                  }
+                >
+                  {beat.status}
+                </Badge>
+              </TableCell>
+              <TableCell>{beat.price.toFixed(2)}</TableCell>
+              <TableCell>{format(new Date(beat.created_at), "dd/MM/yyyy")}</TableCell>
+              <TableCell className="text-right">
+                <Button variant="ghost" size="icon" onClick={() => setSelectedId(beat.id)}>
+                  <MoreVertical className="h-4 w-4" />
+                </Button>
+                {/* Tu peux ajouter ici un menu déroulant d’actions */}
+              </TableCell>
+            </TableRow>
+          ))}
+        </TableBody>
+      </Table>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/pricing/Licenses.tsx b/beatsmarketlebon/src/components/pricing/Licenses.tsx
new file mode 100644
index 0000000..ad99b9c
--- /dev/null
+++ b/beatsmarketlebon/src/components/pricing/Licenses.tsx
@@ -0,0 +1,31 @@
+"use client";
+
+import React from "react";
+import { licenses } from "./data";
+
+export function Licenses() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Licences proposées</h2>
+      <div className="grid gap-8 md:grid-cols-2">
+        {licenses.map((license) => (
+          <div
+            key={license.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20 hover:bg-white/20 transition"
+          >
+            <h3 className="text-2xl font-semibold mb-3">{license.name}</h3>
+            <p className="mb-2">
+              <strong>Cible :</strong> {license.target}
+            </p>
+            <p className="mb-2">
+              <strong>Fichiers fournis :</strong> {license.files}
+            </p>
+            <p>
+              <strong>Droits :</strong> {license.rights}
+            </p>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
diff --git a/beatsmarketlebon/src/components/pricing/Services.tsx b/beatsmarketlebon/src/components/pricing/Services.tsx
new file mode 100644
index 0000000..6228d51
--- /dev/null
+++ b/beatsmarketlebon/src/components/pricing/Services.tsx
@@ -0,0 +1,38 @@
+"use client";
+
+import React from "react";
+import { services } from "./data";
+
+export function Services() {
+  return (
+    <section className="text-white max-w-5xl mx-auto px-4 py-12">
+      <h2 className="text-3xl font-bold mb-8 text-center">Services à la carte</h2>
+      <div className="grid gap-8 md:grid-cols-2">
+        {services.map((service) => (
+          <div
+            key={service.name}
+            className="bg-white/10 rounded-xl p-6 border border-white/20 hover:bg-white/20 transition"
+          >
+            <h3 className="text-2xl font-semibold mb-4">{service.name}</h3>
+            <p className="mb-4">{service.description}</p>
+            <ul className="list-disc list-inside space-y-1 text-sm">
+              {service.prices.map((priceItem, idx) => {
+                const label =
+                  priceItem.duration ??
+                  priceItem.formula ??
+                  priceItem.type ??
+                  priceItem.fee ??
+                  "";
+                return (
+                  <li key={idx}>
+                    <strong>{label} :</strong> {priceItem.price}
+                  </li>
+                );
+              })}
+            </ul>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
diff --git a/beatsmarketlebon/src/components/pricing/plans.tsx b/beatsmarketlebon/src/components/pricing/plans.tsx
new file mode 100644
index 0000000..80bdd1f
--- /dev/null
+++ b/beatsmarketlebon/src/components/pricing/plans.tsx
@@ -0,0 +1,151 @@
+export const plans = [
+  {
+    name: "Gratuit",
+    price: "0 €",
+    commission: "35%",
+    beatLimit: "Jusqu'à 10 beats",
+    features: [
+      "Vente de toutes les licences (Basique, Premium, Exclusive, Exclusive + Stems)",
+      "Support de base",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Bronze",
+    price: "10 €",
+    commission: "20%",
+    beatLimit: "Jusqu'à 30 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Or",
+    price: "15 €",
+    commission: "15%",
+    beatLimit: "Jusqu'à 50 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+  {
+    name: "Diamant",
+    price: "20 €",
+    commission: "10%",
+    beatLimit: "Jusqu'à 100 beats",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "1 mise en avant de beat par semaine (1 fois par mois)",
+      "1 mise en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: true,
+  },
+  {
+    name: "Diamant Plus",
+    price: "29,90 €",
+    commission: "0%",
+    beatLimit: "Beats illimités",
+    features: [
+      "Vente de toutes les licences",
+      "Support plus développé",
+      "Statistiques avancées",
+      "2 mises en avant de beat par semaine (1 fois par mois)",
+      "2 mises en avant de boutique par semaine (1 fois par mois)",
+      "Accès complet au Mastering IA",
+      "Accès complet au Cover IA",
+    ],
+    highlighted: false,
+  },
+];
+
+export const licenses = [
+  {
+    name: "Licence Basique (MP3)",
+    target: "Artistes débutants, maquettes",
+    files: "1 fichier MP3 (avec tag vocal)",
+    rights:
+      "Usage non-commercial, streams et ventes limités à 5 000 streams et 100 ventes maximum",
+  },
+  {
+    name: "Licence Premium (WAV)",
+    target: "Artistes indépendants pour plateformes de streaming",
+    files: "1 MP3 + 1 WAV (haute qualité, sans tag)",
+    rights:
+      "Usage commercial avec limites élevées : jusqu'à 100 000 streams et 5 000 ventes",
+  },
+  {
+    name: "Licence Exclusive",
+    target: "Artistes signés, projets majeurs",
+    files: "MP3 + WAV",
+    rights:
+      "Droits illimités, le beat est retiré de la vente après achat. Usage commercial complet.",
+  },
+  {
+    name: "Licence Exclusive + Pistes (Stems)",
+    target: "Pack ultime, contrôle total",
+    files: "MP3 + WAV + pistes séparées",
+    rights:
+      "Même droits qu'Exclusive, avec accès aux pistes multipistes (stems) pour remix, mastering, etc.",
+  },
+];
+
+export const services = [
+  {
+    name: "Mises en avant (Beat ou Boutique)",
+    description: "Augmente la visibilité sur le site",
+    prices: [
+      { duration: "1 Jour", price: "1 €" },
+      { duration: "1 Semaine", price: "3 €" },
+      { duration: "2 Semaines", price: "5 €" },
+      { duration: "1 Mois", price: "8 €" },
+    ],
+  },
+  {
+    name: "Mastering IA",
+    description: "Améliore le son d'un morceau",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Cover IA",
+    description: "Génère une pochette unique",
+    prices: [
+      { formula: "Essentiel (2 retouches)", price: "12 €" },
+      { formula: "Pro (5 retouches)", price: "22 €" },
+    ],
+  },
+  {
+    name: "Distribution Digitale",
+    description: "Publie la musique sur les plateformes de streaming",
+    prices: [
+      { type: "Single", price: "14,90 €" },
+      { type: "Album / EP", price: "38,90 €" },
+    ],
+  },
+  {
+    name: "Gestion des Droits Musicaux",
+    description: "Collecte les royalties pour les créateurs",
+    prices: [
+      { fee: "Frais d'inscription", price: "0 €" },
+      { fee: "Commission", price: "25% sur les droits perçus" },
+    ],
+  },
+];
diff --git a/beatsmarketlebon/src/components/ui/AccordionExample.tsx b/beatsmarketlebon/src/components/ui/AccordionExample.tsx
new file mode 100644
index 0000000..a705f8b
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/AccordionExample.tsx
@@ -0,0 +1,21 @@
+import * as React from "react"
+import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from "./Accordion"
+
+export function AccordionExample() {
+  return (
+    <Accordion type="single" collapsible className="w-full max-w-md border rounded-md">
+      <AccordionItem value="item-1">
+        <AccordionTrigger>Section 1</AccordionTrigger>
+        <AccordionContent>
+          Contenu de la section 1. Tu peux mettre ici du texte, des images, ou tout autre composant.
+        </AccordionContent>
+      </AccordionItem>
+      <AccordionItem value="item-2">
+        <AccordionTrigger>Section 2</AccordionTrigger>
+        <AccordionContent>
+          Contenu de la section 2. Chaque section peut être ouverte ou fermée indépendamment.
+        </AccordionContent>
+      </AccordionItem>
+    </Accordion>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/ActionMenuExample.tsx b/beatsmarketlebon/src/components/ui/ActionMenuExample.tsx
new file mode 100644
index 0000000..5eebcd7
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/ActionMenuExample.tsx
@@ -0,0 +1,23 @@
+import * as React from "react"
+import {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+} from "./DropDownMenu"
+import { MoreHorizontal } from "lucide-react"
+
+export function ActionMenuExample() {
+  return (
+    <DropdownMenu>
+      <DropdownMenuTrigger className="p-2 rounded-full hover:bg-gray-200">
+        <MoreHorizontal size={20} />
+      </DropdownMenuTrigger>
+      <DropdownMenuContent className="w-48">
+        <DropdownMenuItem onSelect={() => alert("Modifier")}>Modifier</DropdownMenuItem>
+        <DropdownMenuItem onSelect={() => alert("Supprimer")}>Supprimer</DropdownMenuItem>
+        <DropdownMenuItem onSelect={() => alert("Partager")}>Partager</DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/AdminMenu.tsx b/beatsmarketlebon/src/components/ui/AdminMenu.tsx
new file mode 100644
index 0000000..a5f8b85
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/AdminMenu.tsx
@@ -0,0 +1,26 @@
+'use client'
+
+import React from 'react'
+import { Menu, MenuItem, MenuButton } from '@szhsin/react-menu'
+import '@szhsin/react-menu/dist/index.css'
+
+type AdminMenuProps = {
+  onEdit: () => void
+  onDelete: () => void
+  onView: () => void
+}
+
+export default function AdminMenu({ onEdit, onDelete, onView }: AdminMenuProps) {
+  return (
+    <Menu
+      menuButton={<MenuButton className="btn btn-ghost">Actions</MenuButton>}
+      transition
+    >
+      <MenuItem onClick={onView}>Voir</MenuItem>
+      <MenuItem onClick={onEdit}>Modifier</MenuItem>
+      <MenuItem onClick={onDelete} className="text-red-600">
+        Supprimer
+      </MenuItem>
+    </Menu>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/BadgeExample.tsx b/beatsmarketlebon/src/components/ui/BadgeExample.tsx
new file mode 100644
index 0000000..73f1fa9
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/BadgeExample.tsx
@@ -0,0 +1,26 @@
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {
+  variant?: "default" | "success" | "warning" | "danger"
+}
+
+const variantStyles = {
+  default: "bg-gray-100 text-gray-800",
+  success: "bg-green-100 text-green-800",
+  warning: "bg-yellow-100 text-yellow-800",
+  danger: "bg-red-100 text-red-800",
+}
+
+export function BadgeExample({ className, variant = "default", ...props }: BadgeProps) {
+  return (
+    <span
+      className={cn(
+        "inline-flex items-center rounded-full px-2 py-0.5 text-xs font-semibold",
+        variantStyles[variant],
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/CallToAction.tsx b/beatsmarketlebon/src/components/ui/CallToAction.tsx
new file mode 100644
index 0000000..661198f
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/CallToAction.tsx
@@ -0,0 +1,22 @@
+'use client'
+
+import { Button } from '@/components/ui/button'
+import Link from 'next/link'
+
+export default function CallToAction() {
+  return (
+    <section className="bg-[#1a1a1a] py-16 px-4 text-center">
+      <h3 className="text-3xl font-bold text-white mb-6">
+        Rejoins la communauté BeatsMarket dès maintenant !
+      </h3>
+      <p className="text-gray-400 mb-8 max-w-xl mx-auto">
+        Que tu sois beatmaker ou artiste, découvre des outils innovants pour booster ta carrière musicale.
+      </p>
+      <Link href="/signup">
+        <Button size="lg" className="bg-pink-600 hover:bg-pink-700 text-white">
+          Inscription gratuite
+        </Button>
+      </Link>
+    </section>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/CardStat.tsx b/beatsmarketlebon/src/components/ui/CardStat.tsx
new file mode 100644
index 0000000..1a1fcdb
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/CardStat.tsx
@@ -0,0 +1,24 @@
+'use client'
+
+import React from 'react'
+
+type CardStatProps = {
+  title: string
+  value: string | number
+  icon?: React.ReactNode
+  className?: string
+}
+
+export default function CardStat({ title, value, icon, className }: CardStatProps) {
+  return (
+    <div
+      className={`bg-[#1e1e1e] p-6 rounded-lg shadow-md flex items-center space-x-4 ${className}`}
+    >
+      {icon && <div className="text-pink-600">{icon}</div>}
+      <div>
+        <p className="text-gray-400 text-sm">{title}</p>
+        <p className="text-white text-2xl font-bold">{value}</p>
+      </div>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/Hero.tsx b/beatsmarketlebon/src/components/ui/Hero.tsx
new file mode 100644
index 0000000..e98a5d5
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/Hero.tsx
@@ -0,0 +1,25 @@
+'use client'
+
+import Image from 'next/image'
+import { Button } from '@/components/ui/button'
+import Link from 'next/link'
+
+export default function Hero() {
+  return (
+    <section className="relative bg-gradient-to-b from-[#1f1f1f] to-[#121212] py-24 px-4 md:px-8 text-center text-white">
+      <div className="max-w-5xl mx-auto">
+        <h2 className="text-5xl font-extrabold mb-6">
+          Trouve le beat parfait pour ta musique
+        </h2>
+        <p className="text-lg md:text-xl mb-10 max-w-3xl mx-auto text-gray-300">
+          BeatsMarket connecte les artistes et les beatmakers du monde entier, avec un moteur de recherche IA puissant et une boutique unique.
+        </p>
+        <Link href="/beats">
+          <Button size="lg" className="bg-pink-600 hover:bg-pink-700 text-white">
+            Découvrir les Beats
+          </Button>
+        </Link>
+      </div>
+    </section>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/Link.tsx b/beatsmarketlebon/src/components/ui/Link.tsx
new file mode 100644
index 0000000..1613dc5
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/Link.tsx
@@ -0,0 +1,17 @@
+"use client"
+
+import NextLink, { LinkProps } from "next/link"
+import React from "react"
+
+interface Props extends LinkProps {
+  className?: string
+  children: React.ReactNode
+}
+
+export function Link({ className, children, ...props }: Props) {
+  return (
+    <NextLink {...props} className={className}>
+      {children}
+    </NextLink>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/Navbar.tsx b/beatsmarketlebon/src/components/ui/Navbar.tsx
new file mode 100644
index 0000000..843f193
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/Navbar.tsx
@@ -0,0 +1,57 @@
+'use client'
+
+import Link from 'next/link'
+import { usePathname } from 'next/navigation'
+import { cn } from '@/lib/utils'
+import { Button } from '@/components/ui/button'
+import { Menu, X } from 'lucide-react'
+import { useState } from 'react'
+
+export default function Navbar() {
+  const pathname = usePathname()
+  const [open, setOpen] = useState(false)
+
+  const navLinks = [
+    { href: '/', label: 'Accueil' },
+    { href: '/beats', label: 'Beats' },
+    { href: '/pricing', label: 'Tarifs' },
+    { href: '/about', label: 'À propos' },
+    { href: '/help', label: 'Aide' },
+  ]
+
+  return (
+    <nav className="w-full px-4 md:px-8 py-4 border-b border-white/10 bg-[#121212] flex justify-between items-center z-50 relative">
+      <Link href="/" className="text-xl font-bold text-white">BeatsMarket</Link>
+
+      <div className="md:hidden">
+        <Button
+          variant="ghost"
+          size="icon"
+          onClick={() => setOpen(!open)}
+          className="text-white"
+        >
+          {open ? <X /> : <Menu />}
+        </Button>
+      </div>
+
+      <div className={cn(
+        'flex-col md:flex-row md:flex md:gap-6 md:static absolute top-full left-0 w-full md:w-auto bg-[#121212] transition-all duration-300 overflow-hidden',
+        open ? 'flex' : 'hidden'
+      )}>
+        {navLinks.map(link => (
+          <Link
+            key={link.href}
+            href={link.href}
+            onClick={() => setOpen(false)}
+            className={cn(
+              'block px-6 py-3 md:px-0 md:py-0 text-white font-medium hover:text-pink-500 transition',
+              pathname === link.href && 'text-pink-500'
+            )}
+          >
+            {link.label}
+          </Link>
+        ))}
+      </div>
+    </nav>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/README.md b/beatsmarketlebon/src/components/ui/README.md
new file mode 100644
index 0000000..d5ded0e
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/README.md
@@ -0,0 +1,25 @@
+# Bibliothèque de composants UI - BeatsMarket
+
+Ce dossier contient tous les composants UI réutilisables pour BeatsMarket.
+
+## Liste des composants
+
+- **Accordion** : Section repliable (accordéon).
+- **ActionMenu** : Menu d’actions déroulant.
+- **Badge** : Petit badge coloré pour statuts ou labels.
+- **Button** : Bouton avec variantes (default, destructive, ghost...).
+- **Card** : Carte d’affichage avec header, content, footer.
+- **DropdownMenu** : Menu déroulant complexe avec sous-menus.
+- **Input** : Champ de saisie simple.
+- **Label** : Étiquette pour champ formulaire.
+- **StatCard** : Carte de statistiques (KPI).
+- **StatusBadge** : Badge indiquant un statut (actif, suspendu...).
+- **Textarea** : Zone de texte multilignes.
+- **Tooltip** : Info-bulle affichée au survol.
+
+## Importer les composants
+
+Grâce au fichier `index.ts`, tu peux importer les composants ainsi :
+
+```tsx
+import { Button, Card, Tooltip } from "@/components/ui"
diff --git a/beatsmarketlebon/src/components/ui/RevenueChart.tsx b/beatsmarketlebon/src/components/ui/RevenueChart.tsx
new file mode 100644
index 0000000..5ed372d
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/RevenueChart.tsx
@@ -0,0 +1,60 @@
+'use client'
+
+import React from 'react'
+import {
+  Chart as ChartJS,
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend,
+} from 'chart.js'
+import { Line } from 'react-chartjs-2'
+
+ChartJS.register(
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend
+)
+
+type RevenueChartProps = {
+  data: number[]
+  labels: string[]
+}
+
+export default function RevenueChart({ data, labels }: RevenueChartProps) {
+  const chartData = {
+    labels,
+    datasets: [
+      {
+        label: 'Revenus mensuels (€)',
+        data,
+        fill: false,
+        borderColor: '#ec4899', // rose vif
+        backgroundColor: '#ec4899',
+        tension: 0.3,
+      },
+    ],
+  }
+
+  const options = {
+    responsive: true,
+    plugins: {
+      legend: { position: 'top' as const },
+      title: { display: true, text: 'Revenus du dernier semestre' },
+    },
+    scales: {
+      y: {
+        beginAtZero: true,
+      },
+    },
+  }
+
+  return <Line data={chartData} options={options} />
+}
diff --git a/beatsmarketlebon/src/components/ui/accordion.tsx b/beatsmarketlebon/src/components/ui/accordion.tsx
new file mode 100644
index 0000000..096758b
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/accordion.tsx
@@ -0,0 +1,63 @@
+"use client"
+
+import * as React from "react"
+import * as AccordionPrimitive from "@radix-ui/react-accordion"
+import { ChevronDown } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const Accordion = AccordionPrimitive.Root
+
+const AccordionItem = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
+>(({ className, ...props }, ref) => (
+  <AccordionPrimitive.Item
+    ref={ref}
+    className={cn("border-b border-border", className)}
+    {...props}
+  />
+))
+AccordionItem.displayName = "AccordionItem"
+
+const AccordionTrigger = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Trigger>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
+>(({ className, children, ...props }, ref) => (
+  <AccordionPrimitive.Header className="flex">
+    <AccordionPrimitive.Trigger
+      ref={ref}
+      className={cn(
+        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
+        className
+      )}
+      {...props}
+    >
+      {children}
+      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
+    </AccordionPrimitive.Trigger>
+  </AccordionPrimitive.Header>
+))
+AccordionTrigger.displayName = "AccordionTrigger"
+
+const AccordionContent = React.forwardRef<
+  React.ElementRef<typeof AccordionPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <AccordionPrimitive.Content
+    ref={ref}
+    className={cn(
+      "overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",
+      className
+    )}
+    {...props}
+  />
+))
+AccordionContent.displayName = "AccordionContent"
+
+export {
+  Accordion,
+  AccordionItem,
+  AccordionTrigger,
+  AccordionContent,
+}
diff --git a/beatsmarketlebon/src/components/ui/action-menu.tsx b/beatsmarketlebon/src/components/ui/action-menu.tsx
new file mode 100644
index 0000000..da7dff0
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/action-menu.tsx
@@ -0,0 +1,55 @@
+import * as React from "react";
+
+interface ActionMenuProps {
+  actions: { label: string; onClick: () => void }[];
+}
+
+export function ActionMenu({ actions }: ActionMenuProps) {
+  const [open, setOpen] = React.useState(false);
+
+  return (
+    <div className="relative inline-block text-left">
+      <button
+        onClick={() => setOpen(!open)}
+        className="inline-flex justify-center w-full rounded-md border border-gray-700 bg-gray-800 px-4 py-2 text-sm font-medium text-white hover:bg-gray-700 focus:outline-none"
+        aria-haspopup="true"
+        aria-expanded={open}
+      >
+        Actions
+        <svg
+          className="-mr-1 ml-2 h-5 w-5"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke="currentColor"
+          aria-hidden="true"
+        >
+          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
+        </svg>
+      </button>
+
+      {open && (
+        <div
+          className="origin-top-right absolute right-0 mt-2 w-40 rounded-md shadow-lg bg-gray-900 ring-1 ring-black ring-opacity-5 focus:outline-none z-10"
+          role="menu"
+        >
+          <div className="py-1">
+            {actions.map((action, index) => (
+              <button
+                key={index}
+                onClick={() => {
+                  action.onClick();
+                  setOpen(false);
+                }}
+                className="block w-full text-left px-4 py-2 text-sm text-white hover:bg-pink-600"
+                role="menuitem"
+              >
+                {action.label}
+              </button>
+            ))}
+          </div>
+        </div>
+      )}
+    </div>
+  );
+}
diff --git a/beatsmarketlebon/src/components/ui/alert.tsx b/beatsmarketlebon/src/components/ui/alert.tsx
new file mode 100644
index 0000000..93f45ed
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/alert.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as AlertDialog from "@radix-ui/react-alert-dialog"
+import { cn } from "@/lib/utils"
+
+export const Alert = ({
+  children,
+  open,
+  onOpenChange,
+}: {
+  children: React.ReactNode
+  open: boolean
+  onOpenChange: (open: boolean) => void
+}) => {
+  return (
+    <AlertDialog.Root open={open} onOpenChange={onOpenChange}>
+      <AlertDialog.Overlay className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm" />
+      <AlertDialog.Content
+        className={cn(
+          "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-md -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
+        )}
+      >
+        {children}
+      </AlertDialog.Content>
+    </AlertDialog.Root>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/avatar.tsx b/beatsmarketlebon/src/components/ui/avatar.tsx
new file mode 100644
index 0000000..8deac16
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/avatar.tsx
@@ -0,0 +1,48 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+export function Avatar({
+  className,
+  ...props
+}: React.ImgHTMLAttributes<HTMLImageElement> & { className?: string }) {
+  return (
+    <img
+      className={cn(
+        "inline-block h-8 w-8 rounded-full object-cover",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export function AvatarFallback({
+  className,
+  children,
+}: React.HTMLAttributes<HTMLDivElement> & { className?: string }) {
+  return (
+    <div
+      className={cn(
+        "inline-flex h-8 w-8 items-center justify-center rounded-full bg-muted text-xs font-medium text-muted-foreground",
+        className
+      )}
+    >
+      {children}
+    </div>
+  )
+}
+
+export function AvatarImage({
+  className,
+  ...props
+}: React.ImgHTMLAttributes<HTMLImageElement> & { className?: string }) {
+  return (
+    <img
+      className={cn(
+        "h-full w-full rounded-full object-cover",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/badge.tsx b/beatsmarketlebon/src/components/ui/badge.tsx
new file mode 100644
index 0000000..729cba5
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/badge.tsx
@@ -0,0 +1,30 @@
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
+import React from "react"
+
+const badgeVariants = cva(
+  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground",
+        secondary: "bg-secondary text-secondary-foreground",
+        destructive: "bg-destructive text-destructive-foreground",
+        outline: "border border-border text-foreground",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+    },
+  }
+)
+
+export interface BadgeProps
+  extends React.HTMLAttributes<HTMLDivElement>,
+    VariantProps<typeof badgeVariants> {}
+
+export function Badge({ className, variant, ...props }: BadgeProps) {
+  return (
+    <div className={cn(badgeVariants({ variant }), className)} {...props} />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/button.tsx b/beatsmarketlebon/src/components/ui/button.tsx
new file mode 100644
index 0000000..a287f2b
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/button.tsx
@@ -0,0 +1,38 @@
+import React from "react"
+import { cva, type VariantProps } from "class-variance-authority"
+import { cn } from "@/lib/utils"
+
+const buttonVariants = cva(
+  "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90",
+        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
+        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
+        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "underline-offset-4 hover:underline text-primary",
+      },
+      size: {
+        default: "h-10 px-4 py-2",
+        sm: "h-9 rounded-md px-3",
+        lg: "h-11 rounded-md px-8",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
+
+export interface ButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof buttonVariants> {}
+
+export function Button({ className, variant, size, ...props }: ButtonProps) {
+  return (
+    <button className={cn(buttonVariants({ variant, size }), className)} {...props} />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/card.tsx b/beatsmarketlebon/src/components/ui/card.tsx
new file mode 100644
index 0000000..8888d16
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/card.tsx
@@ -0,0 +1,21 @@
+import * as React from "react";
+
+interface CardProps extends React.HTMLAttributes<HTMLDivElement> {}
+
+const Card = React.forwardRef<HTMLDivElement, CardProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <div
+        ref={ref}
+        className={
+          "rounded-lg border border-border bg-background p-4 " + (className || "")
+        }
+        {...props}
+      />
+    );
+  }
+);
+
+Card.displayName = "Card";
+
+export { Card };
diff --git a/beatsmarketlebon/src/components/ui/checkbox-group.tsx b/beatsmarketlebon/src/components/ui/checkbox-group.tsx
new file mode 100644
index 0000000..8eecaff
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/checkbox-group.tsx
@@ -0,0 +1,38 @@
+"use client"
+
+import * as React from "react"
+import { Checkbox } from "@/components/ui/checkbox"
+import { cn } from "@/lib/utils"
+
+interface CheckboxGroupProps {
+  options: { label: string; value: string }[]
+  selectedValues: string[]
+  onChange: (values: string[]) => void
+}
+
+export function CheckboxGroup({ options, selectedValues, onChange }: CheckboxGroupProps) {
+  const toggleValue = (value: string) => {
+    if (selectedValues.includes(value)) {
+      onChange(selectedValues.filter((v) => v !== value))
+    } else {
+      onChange([...selectedValues, value])
+    }
+  }
+
+  return (
+    <div className="flex flex-col gap-2">
+      {options.map(({ label, value }) => (
+        <label
+          key={value}
+          className="inline-flex cursor-pointer items-center space-x-2"
+        >
+          <Checkbox
+            checked={selectedValues.includes(value)}
+            onCheckedChange={() => toggleValue(value)}
+          />
+          <span>{label}</span>
+        </label>
+      ))}
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/checkbox.tsx b/beatsmarketlebon/src/components/ui/checkbox.tsx
new file mode 100644
index 0000000..ed7373c
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/checkbox.tsx
@@ -0,0 +1,27 @@
+"use client"
+
+import * as React from "react"
+import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
+import { Check } from "lucide-react"
+import { cn } from "@/lib/utils"
+
+const Checkbox = React.forwardRef<
+  React.ElementRef<typeof CheckboxPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
+>(({ className, children, ...props }, ref) => (
+  <CheckboxPrimitive.Root
+    ref={ref}
+    className={cn(
+      "peer h-4 w-4 shrink-0 rounded-sm border border-border bg-background ring-offset-background transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <CheckboxPrimitive.Indicator className="flex items-center justify-center text-primary">
+      <Check className="h-4 w-4" />
+    </CheckboxPrimitive.Indicator>
+  </CheckboxPrimitive.Root>
+))
+Checkbox.displayName = CheckboxPrimitive.Root.displayName
+
+export { Checkbox }
diff --git a/beatsmarketlebon/src/components/ui/collapse.tsx b/beatsmarketlebon/src/components/ui/collapse.tsx
new file mode 100644
index 0000000..96b8657
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/collapse.tsx
@@ -0,0 +1,46 @@
+"use client"
+
+import * as React from "react"
+import * as Collapsible from "@radix-ui/react-collapsible"
+import { cn } from "@/lib/utils"
+
+const Collapse = Collapsible.Root
+
+interface CollapseTriggerProps extends React.ComponentPropsWithoutRef<typeof Collapsible.Trigger> {
+  className?: string
+}
+
+const CollapseTrigger = React.forwardRef<
+  React.ElementRef<typeof Collapsible.Trigger>,
+  CollapseTriggerProps
+>(({ className, ...props }, ref) => (
+  <Collapsible.Trigger
+    ref={ref}
+    className={cn(
+      "inline-flex items-center justify-between rounded-md bg-muted px-3 py-2 text-sm font-medium text-muted-foreground hover:bg-accent hover:text-accent-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+
+CollapseTrigger.displayName = Collapsible.Trigger.displayName
+
+interface CollapseContentProps extends React.ComponentPropsWithoutRef<typeof Collapsible.Content> {
+  className?: string
+}
+
+const CollapseContent = React.forwardRef<
+  React.ElementRef<typeof Collapsible.Content>,
+  CollapseContentProps
+>(({ className, ...props }, ref) => (
+  <Collapsible.Content
+    ref={ref}
+    className={cn("overflow-hidden text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+
+CollapseContent.displayName = Collapsible.Content.displayName
+
+export { Collapse, CollapseTrigger, CollapseContent }
diff --git a/beatsmarketlebon/src/components/ui/dialog.tsx b/beatsmarketlebon/src/components/ui/dialog.tsx
new file mode 100644
index 0000000..0563bec
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/dialog.tsx
@@ -0,0 +1,41 @@
+"use client"
+
+import * as React from "react"
+import * as Dialog from "@radix-ui/react-dialog"
+import { cn } from "@/lib/utils"
+
+const DialogRoot = Dialog.Root
+const DialogTrigger = Dialog.Trigger
+const DialogPortal = Dialog.Portal
+const DialogOverlay = Dialog.Overlay
+const DialogContent = Dialog.Content
+const DialogTitle = Dialog.Title
+const DialogDescription = Dialog.Description
+const DialogClose = Dialog.Close
+
+export {
+  DialogRoot,
+  DialogTrigger,
+  DialogPortal,
+  DialogOverlay,
+  DialogContent,
+  DialogTitle,
+  DialogDescription,
+  DialogClose,
+}
+
+interface DialogContentProps extends React.ComponentPropsWithoutRef<typeof Dialog.Content> {
+  className?: string
+}
+
+export function CustomDialogContent({ className, ...props }: DialogContentProps) {
+  return (
+    <DialogContent
+      className={cn(
+        "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-lg -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/dropdown-menu.tsx b/beatsmarketlebon/src/components/ui/dropdown-menu.tsx
new file mode 100644
index 0000000..22c7664
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/dropdown-menu.tsx
@@ -0,0 +1,45 @@
+"use client"
+
+import * as React from "react"
+import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
+import { cn } from "@/lib/utils"
+
+const DropdownMenu = DropdownMenuPrimitive.Root
+const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
+const DropdownMenuContent = DropdownMenuPrimitive.Content
+const DropdownMenuItem = DropdownMenuPrimitive.Item
+const DropdownMenuCheckboxItem = DropdownMenuPrimitive.CheckboxItem
+const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
+const DropdownMenuRadioItem = DropdownMenuPrimitive.RadioItem
+const DropdownMenuLabel = DropdownMenuPrimitive.Label
+const DropdownMenuSeparator = DropdownMenuPrimitive.Separator
+const DropdownMenuGroup = DropdownMenuPrimitive.Group
+
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioGroup,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuGroup,
+}
+
+interface DropdownMenuProps extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content> {
+  className?: string
+}
+
+export function CustomDropdownMenuContent({ className, ...props }: DropdownMenuProps) {
+  return (
+    <DropdownMenuContent
+      className={cn(
+        "z-50 min-w-[8rem] rounded-md border border-border bg-background p-1 shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/empty-state.tsx b/beatsmarketlebon/src/components/ui/empty-state.tsx
new file mode 100644
index 0000000..d45482d
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/empty-state.tsx
@@ -0,0 +1,14 @@
+import { Inbox } from "lucide-react"
+
+interface EmptyStateProps {
+  message?: string
+}
+
+export function EmptyState({ message = "Aucune donnée disponible." }: EmptyStateProps) {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Inbox className="mb-4 h-8 w-8" />
+      <p className="text-sm">{message}</p>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/filter-input.tsx b/beatsmarketlebon/src/components/ui/filter-input.tsx
new file mode 100644
index 0000000..ea0b674
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/filter-input.tsx
@@ -0,0 +1,19 @@
+import React from "react"
+
+interface FilterInputProps {
+  value: string
+  onChange: (value: string) => void
+  placeholder?: string
+}
+
+export function FilterInput({ value, onChange, placeholder = "Rechercher..." }: FilterInputProps) {
+  return (
+    <input
+      type="text"
+      value={value}
+      onChange={e => onChange(e.target.value)}
+      placeholder={placeholder}
+      className="w-full rounded border border-gray-600 bg-gray-800 px-3 py-2 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary"
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/footer.tsx b/beatsmarketlebon/src/components/ui/footer.tsx
new file mode 100644
index 0000000..82a00ec
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/footer.tsx
@@ -0,0 +1,24 @@
+'use client'
+
+import Link from 'next/link'
+
+export default function Footer() {
+  return (
+    <footer className="bg-[#121212] border-t border-white/10 py-10 px-6 text-white">
+      <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center gap-6">
+        <div className="flex items-center space-x-4">
+          <Link href="/" className="text-xl font-bold">
+            BeatsMarket
+          </Link>
+          <p className="text-sm text-gray-400">&copy; 2025 BeatsMarket. Tous droits réservés.</p>
+        </div>
+        <nav className="flex space-x-6 text-sm text-gray-400">
+          <Link href="/terms">CGV & Conditions</Link>
+          <Link href="/privacy">Politique de confidentialité</Link>
+          <Link href="/contact">Contact</Link>
+          <Link href="/help">Aide</Link>
+        </nav>
+      </div>
+    </footer>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/header.tsx b/beatsmarketlebon/src/components/ui/header.tsx
new file mode 100644
index 0000000..72c0a1a
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/header.tsx
@@ -0,0 +1,32 @@
+'use client'
+
+import Image from 'next/image'
+import { Button } from '@/components/ui/button'
+import Link from 'next/link'
+
+export default function Header() {
+  return (
+    <header className="w-full text-center py-20 px-4 md:px-8 bg-gradient-to-b from-[#121212] to-black">
+      <div className="max-w-4xl mx-auto">
+        <h1 className="text-4xl md:text-6xl font-bold text-white mb-4">
+          Libère ton potentiel musical.
+        </h1>
+        <p className="text-lg md:text-xl text-gray-300 mb-8">
+          BeatsMarket est la plateforme ultime pour les artistes et beatmakers. Trouve, vends et distribue tes beats sans limites.
+        </p>
+        <div className="flex flex-col sm:flex-row justify-center gap-4">
+          <Link href="/beats">
+            <Button size="lg" className="text-white bg-pink-600 hover:bg-pink-700">
+              Explorer les Beats
+            </Button>
+          </Link>
+          <Link href="/pricing">
+            <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-black">
+              Voir les Offres
+            </Button>
+          </Link>
+        </div>
+      </div>
+    </header>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/index.ts b/beatsmarketlebon/src/components/ui/index.ts
new file mode 100644
index 0000000..5067a03
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/index.ts
@@ -0,0 +1,28 @@
+export { Accordion } from "./Accordion"
+export { ActionMenu } from "./ActionMenu"
+export { Badge } from "./Badge"
+export { Button } from "./Button"
+export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from "./Card"
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+} from "./DropdownMenu"
+export { Input } from "./Input"
+export { Label } from "./Label"
+export { StatCard } from "./statcard"
+export { StatusBadge } from "./status-badge"
+export { Textarea } from "./textarea"
+export { Tooltip } from "./tooltip"
diff --git a/beatsmarketlebon/src/components/ui/input.tsx b/beatsmarketlebon/src/components/ui/input.tsx
new file mode 100644
index 0000000..859ac3b
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/input.tsx
@@ -0,0 +1,23 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {
+  className?: string
+}
+
+export const Input = React.forwardRef<HTMLInputElement, InputProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <input
+        className={cn(
+          "w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50",
+          className
+        )}
+        ref={ref}
+        {...props}
+      />
+    )
+  }
+)
+
+Input.displayName = "Input"
diff --git a/beatsmarketlebon/src/components/ui/label.tsx b/beatsmarketlebon/src/components/ui/label.tsx
new file mode 100644
index 0000000..cdb0400
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/label.tsx
@@ -0,0 +1,18 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {
+  className?: string
+}
+
+export const Label = React.forwardRef<HTMLLabelElement, LabelProps>(
+  ({ className, ...props }, ref) => (
+    <label
+      ref={ref}
+      className={cn("mb-2 block text-sm font-medium text-muted-foreground", className)}
+      {...props}
+    />
+  )
+)
+
+Label.displayName = "Label"
diff --git a/beatsmarketlebon/src/components/ui/loading-spinner.tsx b/beatsmarketlebon/src/components/ui/loading-spinner.tsx
new file mode 100644
index 0000000..51ab64f
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/loading-spinner.tsx
@@ -0,0 +1,24 @@
+export function LoadingSpinner() {
+  return (
+    <svg
+      className="animate-spin h-6 w-6 text-primary"
+      xmlns="http://www.w3.org/2000/svg"
+      fill="none"
+      viewBox="0 0 24 24"
+    >
+      <circle
+        className="opacity-25"
+        cx="12"
+        cy="12"
+        r="10"
+        stroke="currentColor"
+        strokeWidth="4"
+      ></circle>
+      <path
+        className="opacity-75"
+        fill="currentColor"
+        d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"
+      ></path>
+    </svg>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/modal.tsx b/beatsmarketlebon/src/components/ui/modal.tsx
new file mode 100644
index 0000000..37e295d
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/modal.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as Dialog from "@radix-ui/react-dialog"
+import { cn } from "@/lib/utils"
+
+export const Modal = ({
+  children,
+  open,
+  onOpenChange,
+}: {
+  children: React.ReactNode
+  open: boolean
+  onOpenChange: (open: boolean) => void
+}) => {
+  return (
+    <Dialog.Root open={open} onOpenChange={onOpenChange}>
+      <Dialog.Overlay className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm" />
+      <Dialog.Content
+        className={cn(
+          "fixed left-[50%] top-[50%] z-50 w-[90vw] max-w-lg -translate-x-1/2 -translate-y-1/2 rounded-md border border-border bg-background p-6 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
+        )}
+      >
+        {children}
+      </Dialog.Content>
+    </Dialog.Root>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/pagination.tsx b/beatsmarketlebon/src/components/ui/pagination.tsx
new file mode 100644
index 0000000..afd4712
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/pagination.tsx
@@ -0,0 +1,35 @@
+import React from "react"
+import { Button } from "@/components/ui/button"
+
+interface PaginationProps {
+  page: number
+  totalPages: number
+  onPageChange: (page: number) => void
+}
+
+export function Pagination({ page, totalPages, onPageChange }: PaginationProps) {
+  const isFirstPage = page <= 1
+  const isLastPage = page >= totalPages
+
+  const handlePrevious = () => {
+    if (!isFirstPage) onPageChange(page - 1)
+  }
+
+  const handleNext = () => {
+    if (!isLastPage) onPageChange(page + 1)
+  }
+
+  return (
+    <div className="mt-4 flex items-center justify-center gap-2">
+      <Button variant="outline" size="sm" onClick={handlePrevious} disabled={isFirstPage}>
+        Précédent
+      </Button>
+      <span className="text-sm text-muted-foreground">
+        Page {page} sur {totalPages}
+      </span>
+      <Button variant="outline" size="sm" onClick={handleNext} disabled={isLastPage}>
+        Suivant
+      </Button>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/progress.tsx b/beatsmarketlebon/src/components/ui/progress.tsx
new file mode 100644
index 0000000..0fc01e1
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/progress.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as ProgressPrimitive from "@radix-ui/react-progress"
+import { cn } from "@/lib/utils"
+
+const Progress = ProgressPrimitive.Root
+const ProgressIndicator = ProgressPrimitive.Indicator
+
+interface ProgressProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {
+  className?: string
+  value: number
+}
+
+export function CustomProgress({ className, value, ...props }: ProgressProps) {
+  return (
+    <Progress
+      className={cn("relative h-2 w-full overflow-hidden rounded-full bg-muted", className)}
+      value={value}
+      {...props}
+    >
+      <ProgressIndicator
+        className="h-full bg-primary transition-all"
+        style={{ width: `${value}%` }}
+      />
+    </Progress>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/radio-group.tsx b/beatsmarketlebon/src/components/ui/radio-group.tsx
new file mode 100644
index 0000000..e046edc
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/radio-group.tsx
@@ -0,0 +1,30 @@
+"use client"
+
+import * as React from "react"
+import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
+import { cn } from "@/lib/utils"
+
+const RadioGroup = RadioGroupPrimitive.Root
+
+interface RadioGroupItemProps extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {
+  className?: string
+}
+
+const RadioGroupItem = React.forwardRef<
+  React.ElementRef<typeof RadioGroupPrimitive.Item>,
+  RadioGroupItemProps
+>(({ className, ...props }, ref) => (
+  <RadioGroupPrimitive.Item
+    ref={ref}
+    className={cn(
+      "ring-offset-background focus:ring-ring focus:ring-2 peer relative flex h-4 w-4 cursor-pointer items-center justify-center rounded-full border border-border bg-background focus:outline-none disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <RadioGroupPrimitive.Indicator className="bg-primary peer-checked:block absolute h-2.5 w-2.5 rounded-full" />
+  </RadioGroupPrimitive.Item>
+))
+RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName
+
+export { RadioGroup, RadioGroupItem }
diff --git a/beatsmarketlebon/src/components/ui/rating.tsx b/beatsmarketlebon/src/components/ui/rating.tsx
new file mode 100644
index 0000000..0cb3289
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/rating.tsx
@@ -0,0 +1,36 @@
+"use client"
+
+import * as React from "react"
+import { Star } from "lucide-react"
+import { cn } from "@/lib/utils"
+
+interface RatingProps {
+  value: number
+  max?: number
+  onChange?: (value: number) => void
+  readOnly?: boolean
+}
+
+export function Rating({ value, max = 5, onChange, readOnly = false }: RatingProps) {
+  const stars = []
+
+  for (let i = 1; i <= max; i++) {
+    stars.push(
+      <button
+        key={i}
+        type="button"
+        disabled={readOnly}
+        onClick={() => onChange?.(i)}
+        className={cn(
+          "cursor-pointer p-1 text-yellow-400",
+          i <= value ? "opacity-100" : "opacity-40"
+        )}
+        aria-label={`Donner ${i} étoiles`}
+      >
+        <Star />
+      </button>
+    )
+  }
+
+  return <div className="flex space-x-1">{stars}</div>
+}
diff --git a/beatsmarketlebon/src/components/ui/scroll-area.tsx b/beatsmarketlebon/src/components/ui/scroll-area.tsx
new file mode 100644
index 0000000..0dd0724
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/scroll-area.tsx
@@ -0,0 +1,32 @@
+"use client"
+
+import * as React from "react"
+import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"
+import { cn } from "@/lib/utils"
+
+const ScrollArea = ScrollAreaPrimitive.Root
+const ScrollAreaViewport = ScrollAreaPrimitive.Viewport
+const ScrollAreaScrollbar = ScrollAreaPrimitive.Scrollbar
+const ScrollAreaThumb = ScrollAreaPrimitive.Thumb
+const ScrollAreaCorner = ScrollAreaPrimitive.Corner
+
+export {
+  ScrollArea,
+  ScrollAreaViewport,
+  ScrollAreaScrollbar,
+  ScrollAreaThumb,
+  ScrollAreaCorner,
+}
+
+interface ScrollAreaProps extends React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> {
+  className?: string
+}
+
+export function CustomScrollArea({ className, ...props }: ScrollAreaProps) {
+  return (
+    <ScrollArea
+      className={cn("relative overflow-hidden rounded-md", className)}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/scroll-to-top.tsx b/beatsmarketlebon/src/components/ui/scroll-to-top.tsx
new file mode 100644
index 0000000..ed7f5f0
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/scroll-to-top.tsx
@@ -0,0 +1,35 @@
+"use client"
+
+import React, { useState, useEffect } from "react"
+import { Button } from "@/components/ui/button"
+import { ArrowUp } from "lucide-react"
+
+export function ScrollToTop() {
+  const [visible, setVisible] = useState(false)
+
+  useEffect(() => {
+    const onScroll = () => {
+      setVisible(window.scrollY > 300)
+    }
+    window.addEventListener("scroll", onScroll)
+    return () => window.removeEventListener("scroll", onScroll)
+  }, [])
+
+  const scrollToTop = () => {
+    window.scrollTo({ top: 0, behavior: "smooth" })
+  }
+
+  if (!visible) return null
+
+  return (
+    <Button
+      onClick={scrollToTop}
+      variant="ghost"
+      size="sm"
+      className="fixed bottom-5 right-5 z-50"
+      aria-label="Remonter en haut de la page"
+    >
+      <ArrowUp />
+    </Button>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/select.tsx b/beatsmarketlebon/src/components/ui/select.tsx
new file mode 100644
index 0000000..28d2b0c
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/select.tsx
@@ -0,0 +1,45 @@
+"use client"
+
+import * as React from "react"
+import * as SelectPrimitive from "@radix-ui/react-select"
+import { cn } from "@/lib/utils"
+
+const Select = SelectPrimitive.Root
+const SelectTrigger = SelectPrimitive.Trigger
+const SelectValue = SelectPrimitive.Value
+const SelectIcon = SelectPrimitive.Icon
+const SelectContent = SelectPrimitive.Content
+const SelectViewport = SelectPrimitive.Viewport
+const SelectItem = SelectPrimitive.Item
+const SelectItemText = SelectPrimitive.ItemText
+const SelectScrollUpButton = SelectPrimitive.ScrollUpButton
+const SelectScrollDownButton = SelectPrimitive.ScrollDownButton
+
+export {
+  Select,
+  SelectTrigger,
+  SelectValue,
+  SelectIcon,
+  SelectContent,
+  SelectViewport,
+  SelectItem,
+  SelectItemText,
+  SelectScrollUpButton,
+  SelectScrollDownButton,
+}
+
+interface SelectProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root> {
+  className?: string
+}
+
+export function CustomSelectContent({ className, ...props }: SelectProps) {
+  return (
+    <SelectContent
+      className={cn(
+        "z-50 min-w-[8rem] rounded-md border border-border bg-background p-1 shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/separator.tsx b/beatsmarketlebon/src/components/ui/separator.tsx
new file mode 100644
index 0000000..8e6d81c
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/separator.tsx
@@ -0,0 +1,18 @@
+"use client"
+
+import * as React from "react"
+import { cn } from "@/lib/utils"
+
+const Separator = React.forwardRef<
+  React.ElementRef<"hr">,
+  React.ComponentPropsWithoutRef<"hr">
+>(({ className, ...props }, ref) => (
+  <hr
+    ref={ref}
+    className={cn("border-border bg-border h-px border-0", className)}
+    {...props}
+  />
+))
+Separator.displayName = "Separator"
+
+export { Separator }
diff --git a/beatsmarketlebon/src/components/ui/stat-card.tsx b/beatsmarketlebon/src/components/ui/stat-card.tsx
new file mode 100644
index 0000000..f12b700
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/stat-card.tsx
@@ -0,0 +1,24 @@
+import React from "react"
+import { Card, CardContent } from "@/components/ui/card"
+
+interface StatCardProps {
+  title: string
+  value: string
+  icon?: React.ReactNode
+  description?: string
+}
+
+export default function StatCard({ title, value, icon, description }: StatCardProps) {
+  return (
+    <Card className="w-full">
+      <CardContent className="flex items-center justify-between p-4">
+        <div>
+          <div className="text-sm text-muted-foreground">{title}</div>
+          <div className="text-2xl font-bold">{value}</div>
+          {description && <p className="text-xs text-muted-foreground mt-1">{description}</p>}
+        </div>
+        {icon && <div className="text-3xl text-muted-foreground">{icon}</div>}
+      </CardContent>
+    </Card>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/status-badge.tsx b/beatsmarketlebon/src/components/ui/status-badge.tsx
new file mode 100644
index 0000000..a01f3e6
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/status-badge.tsx
@@ -0,0 +1,30 @@
+import { Badge } from "@/components/ui/badge"
+
+interface StatusBadgeProps {
+  status: "actif" | "en attente" | "refusé" | "brouillon"
+}
+
+export function StatusBadge({ status }: StatusBadgeProps) {
+  const statusMap: Record<StatusBadgeProps["status"], { label: string; variant: "default" | "secondary" | "destructive" | "outline" }> = {
+    actif: {
+      label: "Actif",
+      variant: "default", // vert ou couleur principale
+    },
+    "en attente": {
+      label: "En attente",
+      variant: "secondary", // gris
+    },
+    refusé: {
+      label: "Refusé",
+      variant: "destructive", // rouge
+    },
+    brouillon: {
+      label: "Brouillon",
+      variant: "outline", // contour simple
+    },
+  }
+
+  const { label, variant } = statusMap[status]
+
+  return <Badge variant={variant}>{label}</Badge>
+}
diff --git a/beatsmarketlebon/src/components/ui/status-toggle.tsx b/beatsmarketlebon/src/components/ui/status-toggle.tsx
new file mode 100644
index 0000000..6912947
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/status-toggle.tsx
@@ -0,0 +1,16 @@
+import { Switch } from "@/components/ui/switch"
+
+interface StatusToggleProps {
+  checked: boolean
+  onChange: (value: boolean) => void
+  label?: string
+}
+
+export function StatusToggle({ checked, onChange, label }: StatusToggleProps) {
+  return (
+    <div className="flex items-center gap-2">
+      {label && <span className="text-sm text-muted-foreground">{label}</span>}
+      <Switch checked={checked} onCheckedChange={onChange} />
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/switch.tsx b/beatsmarketlebon/src/components/ui/switch.tsx
new file mode 100644
index 0000000..02d0f4a
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/switch.tsx
@@ -0,0 +1,27 @@
+"use client"
+
+import * as React from "react"
+import * as SwitchPrimitive from "@radix-ui/react-switch"
+import { cn } from "@/lib/utils"
+
+export const Switch = React.forwardRef<
+  React.ElementRef<typeof SwitchPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root>
+>(({ className, ...props }, ref) => (
+  <SwitchPrimitive.Root
+    className={cn(
+      "relative inline-flex h-[24px] w-[42px] shrink-0 cursor-pointer rounded-full border border-border bg-background transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+      className
+    )}
+    {...props}
+    ref={ref}
+  >
+    <SwitchPrimitive.Thumb
+      className={cn(
+        "pointer-events-none block h-5 w-5 rounded-full bg-primary shadow-lg ring-0 transition-transform will-change-transform",
+        "data-[state=checked]:translate-x-5"
+      )}
+    />
+  </SwitchPrimitive.Root>
+))
+Switch.displayName = SwitchPrimitive.Root.displayName
diff --git a/beatsmarketlebon/src/components/ui/table-empty.tsx b/beatsmarketlebon/src/components/ui/table-empty.tsx
new file mode 100644
index 0000000..1d68984
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/table-empty.tsx
@@ -0,0 +1,14 @@
+import { Inbox } from "lucide-react"
+
+interface TableEmptyProps {
+  message?: string
+}
+
+export function TableEmpty({ message = "Aucune donnée à afficher." }: TableEmptyProps) {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Inbox className="mb-4 h-8 w-8" />
+      <p className="text-sm">{message}</p>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/table-loading.tsx b/beatsmarketlebon/src/components/ui/table-loading.tsx
new file mode 100644
index 0000000..679600a
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/table-loading.tsx
@@ -0,0 +1,10 @@
+import { Loader2 } from "lucide-react"
+
+export function TableLoading() {
+  return (
+    <div className="flex flex-col items-center justify-center py-10 text-muted-foreground">
+      <Loader2 className="mb-4 h-6 w-6 animate-spin" />
+      <p className="text-sm">Chargement des données...</p>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/table-pagination.tsx b/beatsmarketlebon/src/components/ui/table-pagination.tsx
new file mode 100644
index 0000000..0b6a379
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/table-pagination.tsx
@@ -0,0 +1,44 @@
+import { Button } from "@/components/ui/button"
+
+interface TablePaginationProps {
+  page: number
+  totalPages: number
+  onPageChange: (page: number) => void
+}
+
+export function TablePagination({ page, totalPages, onPageChange }: TablePaginationProps) {
+  const isFirstPage = page <= 1
+  const isLastPage = page >= totalPages
+
+  const handlePrevious = () => {
+    if (!isFirstPage) onPageChange(page - 1)
+  }
+
+  const handleNext = () => {
+    if (!isLastPage) onPageChange(page + 1)
+  }
+
+  return (
+    <div className="mt-4 flex items-center justify-center gap-2">
+      <Button
+        variant="outline"
+        size="sm"
+        onClick={handlePrevious}
+        disabled={isFirstPage}
+      >
+        Précédent
+      </Button>
+      <span className="text-sm text-muted-foreground">
+        Page {page} sur {totalPages}
+      </span>
+      <Button
+        variant="outline"
+        size="sm"
+        onClick={handleNext}
+        disabled={isLastPage}
+      >
+        Suivant
+      </Button>
+    </div>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/tabs.tsx b/beatsmarketlebon/src/components/ui/tabs.tsx
new file mode 100644
index 0000000..70073b2
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/tabs.tsx
@@ -0,0 +1,54 @@
+"use client"
+
+import * as React from "react"
+import * as TabsPrimitive from "@radix-ui/react-tabs"
+import { cn } from "@/lib/utils"
+
+const Tabs = TabsPrimitive.Root
+
+const TabsList = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.List>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.List
+    ref={ref}
+    className={cn(
+      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+TabsList.displayName = TabsPrimitive.List.displayName
+
+const TabsTrigger = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Trigger>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Trigger
+    ref={ref}
+    className={cn(
+      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
+
+const TabsContent = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Content
+    ref={ref}
+    className={cn(
+      "mt-2 rounded-md border border-border p-6 outline-none",
+      className
+    )}
+    {...props}
+  />
+))
+TabsContent.displayName = TabsPrimitive.Content.displayName
+
+export { Tabs, TabsList, TabsTrigger, TabsContent }
diff --git a/beatsmarketlebon/src/components/ui/textarea.tsx b/beatsmarketlebon/src/components/ui/textarea.tsx
new file mode 100644
index 0000000..d8b8bdf
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/textarea.tsx
@@ -0,0 +1,23 @@
+import React from "react"
+import { cn } from "@/lib/utils"
+
+interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {
+  className?: string
+}
+
+export const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
+  ({ className, ...props }, ref) => {
+    return (
+      <textarea
+        className={cn(
+          "w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:opacity-50",
+          className
+        )}
+        ref={ref}
+        {...props}
+      />
+    )
+  }
+)
+
+Textarea.displayName = "Textarea"
diff --git a/beatsmarketlebon/src/components/ui/toast.tsx b/beatsmarketlebon/src/components/ui/toast.tsx
new file mode 100644
index 0000000..3e6b871
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/toast.tsx
@@ -0,0 +1,37 @@
+"use client"
+
+import * as React from "react"
+import * as ToastPrimitive from "@radix-ui/react-toast"
+import { cn } from "@/lib/utils"
+
+const ToastProvider = ToastPrimitive.Provider
+const ToastRoot = ToastPrimitive.Root
+const ToastTitle = ToastPrimitive.Title
+const ToastDescription = ToastPrimitive.Description
+const ToastAction = ToastPrimitive.Action
+const ToastViewport = ToastPrimitive.Viewport
+
+export {
+  ToastProvider,
+  ToastRoot,
+  ToastTitle,
+  ToastDescription,
+  ToastAction,
+  ToastViewport,
+}
+
+interface ToastProps extends React.ComponentPropsWithoutRef<typeof ToastRoot> {
+  className?: string
+}
+
+export function CustomToastRoot({ className, ...props }: ToastProps) {
+  return (
+    <ToastRoot
+      className={cn(
+        "group pointer-events-auto relative mb-4 w-full max-w-sm rounded-md border border-border bg-background p-4 shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/toggle.tsx b/beatsmarketlebon/src/components/ui/toggle.tsx
new file mode 100644
index 0000000..f2b72af
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/toggle.tsx
@@ -0,0 +1,17 @@
+import * as React from "react"
+
+interface ToggleProps extends React.InputHTMLAttributes<HTMLInputElement> {
+  label: string
+}
+
+export function Toggle({ label, ...props }: ToggleProps) {
+  return (
+    <label className="inline-flex items-center cursor-pointer">
+      <input type="checkbox" className="sr-only peer" {...props} />
+      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary rounded-full peer peer-checked:bg-primary transition-colors duration-200"></div>
+      <span className="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">
+        {label}
+      </span>
+    </label>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/tooltip.tsx b/beatsmarketlebon/src/components/ui/tooltip.tsx
new file mode 100644
index 0000000..9a088cc
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/tooltip.tsx
@@ -0,0 +1,35 @@
+"use client"
+
+import * as React from "react"
+import * as TooltipPrimitive from "@radix-ui/react-tooltip"
+import { cn } from "@/lib/utils"
+
+const TooltipProvider = TooltipPrimitive.Provider
+const Tooltip = TooltipPrimitive.Root
+const TooltipTrigger = TooltipPrimitive.Trigger
+const TooltipContent = TooltipPrimitive.Content
+const TooltipArrow = TooltipPrimitive.Arrow
+
+export {
+  TooltipProvider,
+  Tooltip,
+  TooltipTrigger,
+  TooltipContent,
+  TooltipArrow,
+}
+
+interface TooltipContentProps extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> {
+  className?: string
+}
+
+export function CustomTooltipContent({ className, ...props }: TooltipContentProps) {
+  return (
+    <TooltipContent
+      className={cn(
+        "z-50 rounded-md bg-gray-900 px-3 py-1.5 text-sm text-white shadow-md animate-in fade-in-80",
+        className
+      )}
+      {...props}
+    />
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/user-avatar.tsx b/beatsmarketlebon/src/components/ui/user-avatar.tsx
new file mode 100644
index 0000000..74c26de
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/user-avatar.tsx
@@ -0,0 +1,25 @@
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
+
+interface UserAvatarProps {
+  name: string
+  imageUrl?: string | null
+  className?: string
+}
+
+export function UserAvatar({ name, imageUrl, className }: UserAvatarProps) {
+  const getInitials = (fullName: string) => {
+    const names = fullName.trim().split(" ")
+    const initials = names.map((n) => n[0].toUpperCase())
+    return initials.slice(0, 2).join("")
+  }
+
+  return (
+    <Avatar className={className}>
+      {imageUrl ? (
+        <AvatarImage src={imageUrl} alt={name} />
+      ) : (
+        <AvatarFallback>{getInitials(name)}</AvatarFallback>
+      )}
+    </Avatar>
+  )
+}
diff --git a/beatsmarketlebon/src/components/ui/user-role-badge.tsx b/beatsmarketlebon/src/components/ui/user-role-badge.tsx
new file mode 100644
index 0000000..9cb07ec
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/user-role-badge.tsx
@@ -0,0 +1,26 @@
+import { Badge } from "@/components/ui/badge"
+
+interface UserRoleBadgeProps {
+  role: "superadmin" | "admin-artist" | "admin-beatmaker"
+}
+
+export function UserRoleBadge({ role }: UserRoleBadgeProps) {
+  const roleMap: Record<UserRoleBadgeProps["role"], { label: string; variant: "default" | "secondary" | "destructive" }> = {
+    superadmin: {
+      label: "SuperAdmin",
+      variant: "default", // couleur principale
+    },
+    "admin-artist": {
+      label: "Admin Artiste",
+      variant: "secondary", // gris
+    },
+    "admin-beatmaker": {
+      label: "Admin Beatmaker",
+      variant: "destructive", // rouge ou accent
+    },
+  }
+
+  const { label, variant } = roleMap[role]
+
+  return <Badge variant={variant}>{label}</Badge>
+}
diff --git a/beatsmarketlebon/src/components/ui/user-status-badge.tsx b/beatsmarketlebon/src/components/ui/user-status-badge.tsx
new file mode 100644
index 0000000..6924461
--- /dev/null
+++ b/beatsmarketlebon/src/components/ui/user-status-badge.tsx
@@ -0,0 +1,26 @@
+import { Badge } from "@/components/ui/badge"
+
+interface UserStatusBadgeProps {
+  status: "validé" | "en attente" | "refusé"
+}
+
+export function UserStatusBadge({ status }: UserStatusBadgeProps) {
+  const statusMap: Record<UserStatusBadgeProps["status"], { label: string; variant: "default" | "secondary" | "destructive" }> = {
+    validé: {
+      label: "Validé",
+      variant: "default", // couleur principale (ex : vert ou rose vif)
+    },
+    "en attente": {
+      label: "En attente",
+      variant: "secondary", // gris
+    },
+    refusé: {
+      label: "Refusé",
+      variant: "destructive", // rouge
+    },
+  }
+
+  const { label, variant } = statusMap[status]
+
+  return <Badge variant={variant}>{label}</Badge>
+}
diff --git a/beatsmarketlebon/src/fonts.ts b/beatsmarketlebon/src/fonts.ts
new file mode 100644
index 0000000..a232044
--- /dev/null
+++ b/beatsmarketlebon/src/fonts.ts
@@ -0,0 +1,15 @@
+import { Poppins, PT_Sans } from '@next/font/google';
+
+export const poppins = Poppins({
+  subsets: ['latin'],
+  weight: ['400', '700'],
+  variable: '--font-poppins',
+  display: 'swap',
+});
+
+export const ptSans = PT_Sans({
+  subsets: ['latin'],
+  weight: ['400', '700'],
+  variable: '--font-pt-sans',
+  display: 'swap',
+});
diff --git a/beatsmarketlebon/src/hooks/useAuth.ts b/beatsmarketlebon/src/hooks/useAuth.ts
new file mode 100644
index 0000000..093e662
--- /dev/null
+++ b/beatsmarketlebon/src/hooks/useAuth.ts
@@ -0,0 +1,45 @@
+import { useState, useEffect } from 'react'
+import { supabase } from '@/lib/supabase'
+
+export function useAuth() {
+  const [user, setUser] = useState(supabase.auth.getUser ? null : null)
+  const [loading, setLoading] = useState(true)
+
+  useEffect(() => {
+    // Vérifie l'utilisateur connecté au montage du hook
+    supabase.auth.getUser().then(({ data, error }) => {
+      if (!error && data.user) {
+        setUser(data.user)
+      } else {
+        setUser(null)
+      }
+      setLoading(false)
+    })
+
+    // Écoute les changements d'état d'authentification
+    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {
+      setUser(session?.user ?? null)
+    })
+
+    return () => {
+      listener?.subscription.unsubscribe()
+    }
+  }, [])
+
+  const signIn = async (email: string, password: string) => {
+    const { error } = await supabase.auth.signInWithPassword({ email, password })
+    if (error) throw error
+  }
+
+  const signUp = async (email: string, password: string) => {
+    const { error } = await supabase.auth.signUp({ email, password })
+    if (error) throw error
+  }
+
+  const signOut = async () => {
+    await supabase.auth.signOut()
+    setUser(null)
+  }
+
+  return { user, loading, signIn, signUp, signOut }
+}
diff --git a/beatsmarketlebon/src/lib/api.ts b/beatsmarketlebon/src/lib/api.ts
new file mode 100644
index 0000000..d68ca81
--- /dev/null
+++ b/beatsmarketlebon/src/lib/api.ts
@@ -0,0 +1,7 @@
+import { supabase } from './supabase'
+
+export async function getUsers() {
+  const { data, error } = await supabase.from('users').select('*')
+  if (error) throw error
+  return data
+}
diff --git a/beatsmarketlebon/src/lib/api/beats.ts b/beatsmarketlebon/src/lib/api/beats.ts
new file mode 100644
index 0000000..17ed3fc
--- /dev/null
+++ b/beatsmarketlebon/src/lib/api/beats.ts
@@ -0,0 +1,40 @@
+// API simplifiée pour gestion beats
+
+export type Beat = {
+  id: string
+  title: string
+  description?: string
+  miniatureUrl?: string
+  prices: {
+    basique: number
+    premium: number
+    exclusive: number
+    exclusive_plus: number
+  }
+}
+
+// Simulation fetch beats
+export async function fetchBeats(): Promise<Beat[]> {
+  const res = await fetch("/api/beats")
+  if (!res.ok) throw new Error("Erreur récupération beats")
+  return res.json()
+}
+
+// Simulation save beat (create or update)
+export async function saveBeat(beat: Partial<Beat>): Promise<Beat> {
+  const method = beat.id ? "PUT" : "POST"
+  const url = beat.id ? `/api/beats/${beat.id}` : "/api/beats"
+  const res = await fetch(url, {
+    method,
+    headers: { "Content-Type": "application/json" },
+    body: JSON.stringify(beat),
+  })
+  if (!res.ok) throw new Error("Erreur sauvegarde beat")
+  return res.json()
+}
+
+// Simulation delete beat
+export async function deleteBeat(id: string): Promise<void> {
+  const res = await fetch(`/api/beats/${id}`, { method: "DELETE" })
+  if (!res.ok) throw new Error("Erreur suppression beat")
+}
diff --git a/beatsmarketlebon/src/lib/api/upload.ts b/beatsmarketlebon/src/lib/api/upload.ts
new file mode 100644
index 0000000..8b912ff
--- /dev/null
+++ b/beatsmarketlebon/src/lib/api/upload.ts
@@ -0,0 +1,19 @@
+// Exemple simple de fonction upload fichier vers API
+
+export async function uploadFile(file: File): Promise<string> {
+  const formData = new FormData()
+  formData.append("file", file)
+
+  const res = await fetch("/api/upload", {
+    method: "POST",
+    body: formData,
+  })
+
+  if (!res.ok) {
+    throw new Error("Erreur lors de l'upload du fichier")
+  }
+
+  // Retourne l'URL du fichier uploadé
+  const data = await res.json()
+  return data.url
+}
diff --git a/beatsmarketlebon/src/lib/revenueCalculator.ts b/beatsmarketlebon/src/lib/revenueCalculator.ts
new file mode 100644
index 0000000..04fd2e6
--- /dev/null
+++ b/beatsmarketlebon/src/lib/revenueCalculator.ts
@@ -0,0 +1,28 @@
+import { BeatmakerPlan } from "./constants"
+
+const commissionRates: Record<BeatmakerPlan, number> = {
+  FREE: 0.4,
+  BRONZE: 0.35,
+  GOLD: 0.3,
+  DIAMOND: 0.2,
+  DIAMOND_PLUS: 0.1,
+}
+
+export function calculateNetRevenue({
+  price,
+  plan,
+  promoPercent,
+}: {
+  price: number
+  plan: BeatmakerPlan
+  promoPercent: number
+}) {
+  const priceAfterPromo = price * (1 - promoPercent / 100)
+  const priceExclVAT = priceAfterPromo / 1.2 // TVA = 20%
+
+  const stripeFee = priceExclVAT * 0.025 + 0.25
+  const beatsmarketFee = priceExclVAT * commissionRates[plan]
+
+  const net = priceExclVAT - stripeFee - beatsmarketFee
+  return Math.max(0, net)
+}
diff --git a/beatsmarketlebon/src/lib/supabase.ts b/beatsmarketlebon/src/lib/supabase.ts
new file mode 100644
index 0000000..5bd177b
--- /dev/null
+++ b/beatsmarketlebon/src/lib/supabase.ts
@@ -0,0 +1,6 @@
+import { createClient } from '@supabase/supabase-js'
+
+const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string
+const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string
+
+export const supabase = createClient(supabaseUrl, supabaseAnonKey)
diff --git a/beatsmarketlebon/src/lib/supabaseClient.ts b/beatsmarketlebon/src/lib/supabaseClient.ts
new file mode 100644
index 0000000..15a8e7e
--- /dev/null
+++ b/beatsmarketlebon/src/lib/supabaseClient.ts
@@ -0,0 +1,6 @@
+import { createClient } from '@supabase/supabase-js'
+
+const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
+const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
+
+export const supabase = createClient(supabaseUrl, supabaseAnonKey)
diff --git a/beatsmarketlebon/src/lib/utils.ts b/beatsmarketlebon/src/lib/utils.ts
new file mode 100644
index 0000000..52cc1fb
--- /dev/null
+++ b/beatsmarketlebon/src/lib/utils.ts
@@ -0,0 +1,3 @@
+export function cn(...inputs: (string | boolean | undefined | null)[]) {
+  return inputs.filter(Boolean).join(" ")
+}
diff --git a/beatsmarketlebon/src/styles/globals.css b/beatsmarketlebon/src/styles/globals.css
new file mode 100644
index 0000000..b5c61c9
--- /dev/null
+++ b/beatsmarketlebon/src/styles/globals.css
@@ -0,0 +1,3 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
diff --git a/beatsmarketlebon/vite.config.js b/beatsmarketlebon/vite.config.js
new file mode 100644
index 0000000..8b0f57b
--- /dev/null
+++ b/beatsmarketlebon/vite.config.js
@@ -0,0 +1,7 @@
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+
+// https://vite.dev/config/
+export default defineConfig({
+  plugins: [react()],
+})

commit 911dc3ec4f2eea67b6f8b7986386647fa3558f08
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:49:00 2025 +0200

    Correction finale package.json après rebase

diff --git a/package.json b/package.json
index 9e5388e..1f3cafd 100644
--- a/package.json
+++ b/package.json
@@ -1,44 +1,9 @@
-<<<<<<< HEAD
 {
   "name": "beatsmarketlebon",
-  "private": true,
-  "version": "0.0.0",
-  "type": "module",
+  "version": "0.0.1",
   "scripts": {
     "dev": "vite",
     "build": "vite build",
-    "lint": "eslint .",
-    "preview": "vite preview"
-  },
-  "dependencies": {
-    "react": "^19.1.0",
-    "react-dom": "^19.1.0"
-  },
-  "devDependencies": {
-    "@eslint/js": "^9.30.1",
-    "@types/react": "^19.1.8",
-    "@types/react-dom": "^19.1.6",
-    "@vitejs/plugin-react": "^4.6.0",
-    "eslint": "^9.30.1",
-    "eslint-plugin-react-hooks": "^5.2.0",
-    "eslint-plugin-react-refresh": "^0.4.20",
-    "globals": "^16.3.0",
-    "vite": "^7.0.4"
+    "start": "vite preview"
   }
-=======
-"dependencies": {
-  "@radix-ui/react-accordion": "^1.2.11",
-  "@tailwindcss/forms": "^0.5.10",
-  "@tailwindcss/typography": "^0.5.16",
-  "lucide-react": "^0.525.0",
-  "next": "^15.4.2",
-  "openai": "^4.12.0",
-  "react": "^18.2.0",
-  "react-dom": "^18.2.0",
-  "tailwindcss": "^3.2.7",
-  "typescript": "^5.1.3"
-},
-"devDependencies": {
-  "vite": "^4.0.0"
->>>>>>> 5ea80a4 (Mise à jour des fichiers package.json et package-lock.json)
 }

commit 1675ccc6ed0b1d3c6b5450b16e2db42fb13bc4df
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 12:55:56 2025 +0200

    Create githubBot.js

diff --git a/githubBot.js b/githubBot.js
new file mode 100644
index 0000000..06dcf26
--- /dev/null
+++ b/githubBot.js
@@ -0,0 +1,19 @@
+import { Octokit } from "octokit";
+import dotenv from "dotenv";
+
+dotenv.config();
+
+const octokit = new Octokit({
+  auth: process.env.GITHUB_TOKEN,
+});
+
+async function test() {
+  try {
+    const { data: user } = await octokit.rest.users.getAuthenticated();
+    console.log("Connecté avec le compte GitHub :", user.login);
+  } catch (error) {
+    console.error("Erreur :", error);
+  }
+}
+
+test();

commit be8a90f7fd3a4295ef3a2f0dd569c82482545e45
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 13:21:16 2025 +0200

    Update githubBot.js

diff --git a/githubBot.js b/githubBot.js
index 06dcf26..0f6de05 100644
--- a/githubBot.js
+++ b/githubBot.js
@@ -1,19 +1,33 @@
-import { Octokit } from "octokit";
-import dotenv from "dotenv";
+import fetch from "node-fetch";
 
-dotenv.config();
+const GITHUB_API_URL = "https://api.github.com";
+const REPO_OWNER = "jaypms";
+const REPO_NAME = "beatsmarketlebon";
+const TOKEN = process.env.GITHUB_TOKEN;
 
-const octokit = new Octokit({
-  auth: process.env.GITHUB_TOKEN,
-});
+async function createIssue(title, body) {
+  const res = await fetch(`${GITHUB_API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/issues`, {
+    method: "POST",
+    headers: {
+      "Authorization": `token ${TOKEN}`,
+      "Accept": "application/vnd.github.v3+json",
+      "Content-Type": "application/json",
+    },
+    body: JSON.stringify({
+      title,
+      body,
+    }),
+  });
 
-async function test() {
-  try {
-    const { data: user } = await octokit.rest.users.getAuthenticated();
-    console.log("Connecté avec le compte GitHub :", user.login);
-  } catch (error) {
-    console.error("Erreur :", error);
+  if (!res.ok) {
+    const error = await res.text();
+    throw new Error(`GitHub API error: ${res.status} - ${error}`);
   }
+
+  const data = await res.json();
+  console.log(`✅ Issue créée : ${data.html_url}`);
 }
 
-test();
+// Exemple d'utilisation :
+createIssue("Test auto via script", "Cette issue a été créée depuis Node.js via API GitHub.")
+  .catch(err => console.error("❌ Erreur :", err));

commit 524b711fdf851ba7d5eebf13328d61008fa312f2
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 13:37:41 2025 +0200

    Create githubBot.js

diff --git a/scripts/githubBot.js b/scripts/githubBot.js
new file mode 100644
index 0000000..0f6d34e
--- /dev/null
+++ b/scripts/githubBot.js
@@ -0,0 +1,44 @@
+// scripts/githubBot.js
+import "dotenv/config";
+import fetch from "node-fetch";
+
+// 🔐 Token stocké dans .env.local
+const token = process.env.GITHUB_TOKEN;
+const owner = "jaypms";
+const repo = "beatsmarketlebon";
+
+/**
+ * Crée une issue sur GitHub
+ * @param {string} title - Titre de l'issue
+ * @param {string} body - Corps de l'issue
+ */
+const createIssue = async (title, body) => {
+  try {
+    const res = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues`, {
+      method: "POST",
+      headers: {
+        "Authorization": `Bearer ${token}`,
+        "Accept": "application/vnd.github+json",
+        "X-GitHub-Api-Version": "2022-11-28"
+      },
+      body: JSON.stringify({ title, body }),
+    });
+
+    const data = await res.json();
+
+    if (!res.ok) {
+      console.error("❌ Erreur :", data);
+      throw new Error(`GitHub API error: ${res.status} - ${JSON.stringify(data)}`);
+    }
+
+    console.log(`✅ Issue créée avec succès : ${data.html_url}`);
+  } catch (err) {
+    console.error("❌ Erreur : ", err.message);
+  }
+};
+
+// 🧪 Test automatique
+createIssue(
+  "🎯 Test automatique via githubBot.js",
+  "Ceci est un test d'issue générée automatiquement via Node.js + GitHub API."
+);

commit fe8113a16f1a0c9ab403d45175ce2a08140187fa
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 13:40:46 2025 +0200

    Update githubBot.js

diff --git a/githubBot.js b/githubBot.js
index 0f6de05..579cbd6 100644
--- a/githubBot.js
+++ b/githubBot.js
@@ -1,33 +1,40 @@
-import fetch from "node-fetch";
-
-const GITHUB_API_URL = "https://api.github.com";
-const REPO_OWNER = "jaypms";
-const REPO_NAME = "beatsmarketlebon";
-const TOKEN = process.env.GITHUB_TOKEN;
-
-async function createIssue(title, body) {
-  const res = await fetch(`${GITHUB_API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/issues`, {
-    method: "POST",
-    headers: {
-      "Authorization": `token ${TOKEN}`,
-      "Accept": "application/vnd.github.v3+json",
-      "Content-Type": "application/json",
-    },
-    body: JSON.stringify({
+import { Octokit } from "octokit";
+import dotenv from "dotenv";
+
+dotenv.config(); // Charge les variables d’environnement depuis .env ou .env.local
+
+const token = process.env.GITHUB_TOKEN;
+
+if (!token) {
+  console.error("❌ Erreur : Le token GitHub GITHUB_TOKEN n’est pas défini dans l’environnement.");
+  process.exit(1);
+}
+
+// Arguments CLI : node githubBot.js "Titre de l’issue" "Description détaillée"
+const [,, title, body] = process.argv;
+
+if (!title || !body) {
+  console.error("❌ Usage : node githubBot.js \"Titre de l’issue\" \"Description détaillée\"");
+  process.exit(1);
+}
+
+const octokit = new Octokit({ auth: token });
+
+async function createIssue() {
+  try {
+    const response = await octokit.rest.issues.create({
+      owner: "jaypms",        // Ton compte GitHub
+      repo: "beatsmarketlebon", // Le nom du repo
       title,
       body,
-    }),
-  });
-
-  if (!res.ok) {
-    const error = await res.text();
-    throw new Error(`GitHub API error: ${res.status} - ${error}`);
+    });
+    console.log(`✅ Issue créée avec succès : ${response.data.html_url}`);
+  } catch (error) {
+    console.error("❌ Erreur lors de la création de l’issue :", error.message);
+    if (error.status) {
+      console.error(`Status: ${error.status}`);
+    }
   }
-
-  const data = await res.json();
-  console.log(`✅ Issue créée : ${data.html_url}`);
 }
 
-// Exemple d'utilisation :
-createIssue("Test auto via script", "Cette issue a été créée depuis Node.js via API GitHub.")
-  .catch(err => console.error("❌ Erreur :", err));
+createIssue();

commit fb6d7442ffb4a970407ca59aa24bf9735c28c9d0
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 14:20:19 2025 +0200

    Update .env.local

diff --git a/.env.local b/.env.local
index 4b81262..842c33b 100644
--- a/.env.local
+++ b/.env.local
@@ -1,4 +1,4 @@
 NEXT_PUBLIC_SUPABASE_URL=https://fyptndbnmuimfapyftsl.supabase.co
 NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5cHRuZGJubXVpbWZhcHlmdHNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMzAxNTQsImV4cCI6MjA2ODYwNjE1NH0.YFPvXXXyQxOzo2gS9jCJXmHv0crvd106drNgJMpdHzk
 NEXT_PUBLIC_SITE_URL=http://localhost:3000
-GITHUB_TOKEN=ton_token_ici
+

commit a9bf1e34447b6125e31783704e12d55cc0b216cc
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 14:56:39 2025 +0200

    Mise à jour Footer automatique

diff --git a/beatsmarketlebon/src/components/Footer.tsx b/beatsmarketlebon/src/components/Footer.tsx
index d228e26..985d9e8 100644
--- a/beatsmarketlebon/src/components/Footer.tsx
+++ b/beatsmarketlebon/src/components/Footer.tsx
@@ -1,26 +1 @@
-import React from "react";
-
-export function Footer() {
-  return (
-    <footer className="bg-[#121212] text-white py-8 px-4 text-center">
-      {/* Contenu principal du footer */}
-      <div className="max-w-7xl mx-auto">
-        {/* Ici tu peux ajouter d'autres éléments du footer comme liens, logo, etc. */}
-
-        {/* Image en bas du footer */}
-        <div className="mt-6">
-          <img
-            src="/images/footerbeatsmarket.jpg"
-            alt="Footer BeatsMarket"
-            className="mx-auto max-w-full h-auto rounded-md shadow-lg"
-          />
-        </div>
-
-        {/* Texte en dessous de l'image */}
-        <p className="mt-4 text-sm opacity-70">
-          © 2025 BeatsMarket - Tous droits réservés.
-        </p>
-      </div>
-    </footer>
-  );
-}
+<!-- Contenu modifié par script -->
\ No newline at end of file

commit 3000ceb6c9f0c9da95c0ec7278c13753d13e2b1f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 15:04:50 2025 +0200

    Message de commit automatique

diff --git a/beatsmarketlebon/.env b/beatsmarketlebon/.env
new file mode 100644
index 0000000..9a9dac0
--- /dev/null
+++ b/beatsmarketlebon/.env
@@ -0,0 +1 @@
+GITHUB_TOKEN=REMOVED_SECRETm8md1fZ9gyscpeFd1XMc14yqga
diff --git a/beatsmarketlebon/autoGit.js b/beatsmarketlebon/autoGit.js
new file mode 100644
index 0000000..4a8a482
--- /dev/null
+++ b/beatsmarketlebon/autoGit.js
@@ -0,0 +1,46 @@
+import 'dotenv/config';
+import { Octokit } from "@octokit/rest";
+import simpleGit from "simple-git";
+import fs from "fs/promises";
+import path from "path";
+
+const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
+const git = simpleGit();
+
+const OWNER = "jaypms";
+const REPO = "beatsmarketlebon";
+
+async function modifyFile(filePath, newContent, commitMessage) {
+  try {
+    await fs.writeFile(path.resolve(filePath), newContent, "utf-8");
+    console.log(`Fichier modifié localement: ${filePath}`);
+
+    await git.add(filePath);
+    await git.commit(commitMessage);
+    await git.push("origin", "main");
+    console.log(`Commit & push effectués: ${commitMessage}`);
+  } catch (error) {
+    console.error("Erreur modification + push:", error);
+  }
+}
+
+async function createIssue(title, body) {
+  try {
+    const response = await octokit.issues.create({
+      owner: OWNER,
+      repo: REPO,
+      title,
+      body,
+    });
+    console.log("Issue créée:", response.data.html_url);
+  } catch (error) {
+    console.error("Erreur création issue:", error);
+  }
+}
+
+async function main() {
+  await modifyFile("src/components/Footer.tsx", "<!-- Contenu modifié par script -->", "Mise à jour Footer automatique");
+  await createIssue("Mise à jour Footer", "Le footer a été mis à jour automatiquement par le script.");
+}
+
+main();
diff --git a/beatsmarketlebon/githubBot.js b/beatsmarketlebon/githubBot.js
new file mode 100644
index 0000000..fee4a6e
--- /dev/null
+++ b/beatsmarketlebon/githubBot.js
@@ -0,0 +1,37 @@
+import 'dotenv/config';
+import fetch from "node-fetch";
+
+const GITHUB_API_URL = "https://api.github.com";
+const REPO_OWNER = "jaypms";          // Remplace par ton pseudo GitHub
+const REPO_NAME = "beatsmarketlebon"; // Remplace par le nom de ton repo
+const TOKEN = process.env.GITHUB_TOKEN;
+
+async function createIssue(title, body) {
+  const res = await fetch(`${GITHUB_API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/issues`, {
+    method: "POST",
+    headers: {
+      "Authorization": `token ${TOKEN}`,
+      "Accept": "application/vnd.github.v3+json",
+      "Content-Type": "application/json",
+    },
+    body: JSON.stringify({ title, body }),
+  });
+
+  if (!res.ok) {
+    const errorText = await res.text();
+    throw new Error(`GitHub API error: ${res.status} - ${errorText}`);
+  }
+
+  const data = await res.json();
+  console.log("Issue créée :", data.html_url);
+}
+
+// Récupère les arguments passés dans la console
+const [title, body] = process.argv.slice(2);
+
+if (!title || !body) {
+  console.log('Usage : node githubBot.js "Titre de l\'issue" "Description de l\'issue"');
+  process.exit(1);
+}
+
+createIssue(title, body);
diff --git a/beatsmarketlebon/package-lock.json b/beatsmarketlebon/package-lock.json
index 64d626e..15c90f5 100644
--- a/beatsmarketlebon/package-lock.json
+++ b/beatsmarketlebon/package-lock.json
@@ -8,8 +8,12 @@
       "name": "beatsmarketlebon",
       "version": "0.0.0",
       "dependencies": {
+        "@octokit/rest": "^22.0.0",
+        "dotenv": "^17.2.0",
+        "node-fetch": "^3.3.2",
         "react": "^19.1.0",
-        "react-dom": "^19.1.0"
+        "react-dom": "^19.1.0",
+        "simple-git": "^3.28.0"
       },
       "devDependencies": {
         "@eslint/js": "^9.30.1",
@@ -1020,6 +1024,175 @@
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@kwsites/file-exists": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@kwsites/file-exists/-/file-exists-1.1.1.tgz",
+      "integrity": "sha512-m9/5YGR18lIwxSFDwfE3oA7bWuq9kdau6ugN4H2rJeyhFQZcG9AgSHkQtSD15a8WvTgfz9aikZMrKPHvbpqFiw==",
+      "license": "MIT",
+      "dependencies": {
+        "debug": "^4.1.1"
+      }
+    },
+    "node_modules/@kwsites/promise-deferred": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@kwsites/promise-deferred/-/promise-deferred-1.1.1.tgz",
+      "integrity": "sha512-GaHYm+c0O9MjZRu0ongGBRbinu8gVAMd2UZjji6jVmqKtZluZnptXGWhz1E8j8D2HJ3f/yMxKAUC0b+57wncIw==",
+      "license": "MIT"
+    },
+    "node_modules/@octokit/auth-token": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-token/-/auth-token-6.0.0.tgz",
+      "integrity": "sha512-P4YJBPdPSpWTQ1NU4XYdvHvXJJDxM6YwpS0FZHRgP7YFkdVxsWcpWGy/NVqlAA7PcPCnMacXlRm1y2PFZRWL/w==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/core": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/@octokit/core/-/core-7.0.3.tgz",
+      "integrity": "sha512-oNXsh2ywth5aowwIa7RKtawnkdH6LgU1ztfP9AIUCQCvzysB+WeU8o2kyyosDPwBZutPpjZDKPQGIzzrfTWweQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/auth-token": "^6.0.0",
+        "@octokit/graphql": "^9.0.1",
+        "@octokit/request": "^10.0.2",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "before-after-hook": "^4.0.0",
+        "universal-user-agent": "^7.0.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/endpoint": {
+      "version": "11.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/endpoint/-/endpoint-11.0.0.tgz",
+      "integrity": "sha512-hoYicJZaqISMAI3JfaDr1qMNi48OctWuOih1m80bkYow/ayPw6Jj52tqWJ6GEoFTk1gBqfanSoI1iY99Z5+ekQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.2"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/graphql": {
+      "version": "9.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/graphql/-/graphql-9.0.1.tgz",
+      "integrity": "sha512-j1nQNU1ZxNFx2ZtKmL4sMrs4egy5h65OMDmSbVyuCzjOcwsHq6EaYjOTGXPQxgfiN8dJ4CriYHk6zF050WEULg==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/request": "^10.0.2",
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/openapi-types": {
+      "version": "25.1.0",
+      "resolved": "https://registry.npmjs.org/@octokit/openapi-types/-/openapi-types-25.1.0.tgz",
+      "integrity": "sha512-idsIggNXUKkk0+BExUn1dQ92sfysJrje03Q0bv0e+KPLrvyqZF8MnBpFz8UNfYDwB3Ie7Z0TByjWfzxt7vseaA==",
+      "license": "MIT"
+    },
+    "node_modules/@octokit/plugin-paginate-rest": {
+      "version": "13.1.1",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-13.1.1.tgz",
+      "integrity": "sha512-q9iQGlZlxAVNRN2jDNskJW/Cafy7/XE52wjZ5TTvyhyOD904Cvx//DNyoO3J/MXJ0ve3rPoNWKEg5iZrisQSuw==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/types": "^14.1.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      },
+      "peerDependencies": {
+        "@octokit/core": ">=6"
+      }
+    },
+    "node_modules/@octokit/plugin-request-log": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-request-log/-/plugin-request-log-6.0.0.tgz",
+      "integrity": "sha512-UkOzeEN3W91/eBq9sPZNQ7sUBvYCqYbrrD8gTbBuGtHEuycE4/awMXcYvx6sVYo7LypPhmQwwpUe4Yyu4QZN5Q==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 20"
+      },
+      "peerDependencies": {
+        "@octokit/core": ">=6"
+      }
+    },
+    "node_modules/@octokit/plugin-rest-endpoint-methods": {
+      "version": "16.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-rest-endpoint-methods/-/plugin-rest-endpoint-methods-16.0.0.tgz",
+      "integrity": "sha512-kJVUQk6/dx/gRNLWUnAWKFs1kVPn5O5CYZyssyEoNYaFedqZxsfYs7DwI3d67hGz4qOwaJ1dpm07hOAD1BXx6g==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/types": "^14.1.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      },
+      "peerDependencies": {
+        "@octokit/core": ">=6"
+      }
+    },
+    "node_modules/@octokit/request": {
+      "version": "10.0.3",
+      "resolved": "https://registry.npmjs.org/@octokit/request/-/request-10.0.3.tgz",
+      "integrity": "sha512-V6jhKokg35vk098iBqp2FBKunk3kMTXlmq+PtbV9Gl3TfskWlebSofU9uunVKhUN7xl+0+i5vt0TGTG8/p/7HA==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/endpoint": "^11.0.0",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "fast-content-type-parse": "^3.0.0",
+        "universal-user-agent": "^7.0.2"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/request-error": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/request-error/-/request-error-7.0.0.tgz",
+      "integrity": "sha512-KRA7VTGdVyJlh0cP5Tf94hTiYVVqmt2f3I6mnimmaVz4UG3gQV/k4mDJlJv3X67iX6rmN7gSHCF8ssqeMnmhZg==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/types": "^14.0.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/rest": {
+      "version": "22.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/rest/-/rest-22.0.0.tgz",
+      "integrity": "sha512-z6tmTu9BTnw51jYGulxrlernpsQYXpui1RK21vmXn8yF5bp6iX16yfTtJYGK5Mh1qDkvDOmp2n8sRMcQmR8jiA==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/core": "^7.0.2",
+        "@octokit/plugin-paginate-rest": "^13.0.1",
+        "@octokit/plugin-request-log": "^6.0.0",
+        "@octokit/plugin-rest-endpoint-methods": "^16.0.0"
+      },
+      "engines": {
+        "node": ">= 20"
+      }
+    },
+    "node_modules/@octokit/types": {
+      "version": "14.1.0",
+      "resolved": "https://registry.npmjs.org/@octokit/types/-/types-14.1.0.tgz",
+      "integrity": "sha512-1y6DgTy8Jomcpu33N+p5w58l6xyt55Ar2I91RPiIA0xCJBXyUAhXCcmZaDWSANiha7R9a6qJJ2CRomGPZ6f46g==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/openapi-types": "^25.1.0"
+      }
+    },
     "node_modules/@rolldown/pluginutils": {
       "version": "1.0.0-beta.27",
       "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
@@ -1477,6 +1650,12 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/before-after-hook": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/before-after-hook/-/before-after-hook-4.0.0.tgz",
+      "integrity": "sha512-q6tR3RPqIB1pMiTRMFcZwuG5T8vwp+vUvEG0vuI6B+Rikh5BfPp2fQ82c925FOs+b0lcFQ8CFrL+KbilfZFhOQ==",
+      "license": "Apache-2.0"
+    },
     "node_modules/brace-expansion": {
       "version": "1.1.12",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
@@ -1625,11 +1804,19 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/data-uri-to-buffer": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
+      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 12"
+      }
+    },
     "node_modules/debug": {
       "version": "4.4.1",
       "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
       "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ms": "^2.1.3"
@@ -1650,6 +1837,18 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/dotenv": {
+      "version": "17.2.0",
+      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-17.2.0.tgz",
+      "integrity": "sha512-Q4sgBT60gzd0BB0lSyYD3xM4YxrXA9y4uBDof1JNYGzOXrQdQ6yX+7XIAqoFOGQFOTK1D3Hts5OllpxMDZFONQ==",
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://dotenvx.com"
+      }
+    },
     "node_modules/electron-to-chromium": {
       "version": "1.5.190",
       "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.190.tgz",
@@ -1900,6 +2099,22 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/fast-content-type-parse": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/fast-content-type-parse/-/fast-content-type-parse-3.0.0.tgz",
+      "integrity": "sha512-ZvLdcY8P+N8mGQJahJV5G4U88CSvT1rP8ApL6uETe88MBXrBHAkZlSEySdUlyztF7ccb+Znos3TFqaepHxdhBg==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/fastify"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/fastify"
+        }
+      ],
+      "license": "MIT"
+    },
     "node_modules/fast-deep-equal": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
@@ -1936,6 +2151,29 @@
         }
       }
     },
+    "node_modules/fetch-blob": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
+      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/jimmywarting"
+        },
+        {
+          "type": "paypal",
+          "url": "https://paypal.me/jimmywarting"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "node-domexception": "^1.0.0",
+        "web-streams-polyfill": "^3.0.3"
+      },
+      "engines": {
+        "node": "^12.20 || >= 14.13"
+      }
+    },
     "node_modules/file-entry-cache": {
       "version": "8.0.0",
       "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
@@ -1987,6 +2225,18 @@
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/formdata-polyfill": {
+      "version": "4.0.10",
+      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
+      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
+      "license": "MIT",
+      "dependencies": {
+        "fetch-blob": "^3.1.2"
+      },
+      "engines": {
+        "node": ">=12.20.0"
+      }
+    },
     "node_modules/fsevents": {
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
@@ -2256,7 +2506,6 @@
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
       "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/nanoid": {
@@ -2285,6 +2534,44 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/node-domexception": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
+      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
+      "deprecated": "Use your platform's native DOMException instead",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/jimmywarting"
+        },
+        {
+          "type": "github",
+          "url": "https://paypal.me/jimmywarting"
+        }
+      ],
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.5.0"
+      }
+    },
+    "node_modules/node-fetch": {
+      "version": "3.3.2",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
+      "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
+      "license": "MIT",
+      "dependencies": {
+        "data-uri-to-buffer": "^4.0.0",
+        "fetch-blob": "^3.1.4",
+        "formdata-polyfill": "^4.0.10"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/node-fetch"
+      }
+    },
     "node_modules/node-releases": {
       "version": "2.0.19",
       "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
@@ -2564,6 +2851,21 @@
         "node": ">=8"
       }
     },
+    "node_modules/simple-git": {
+      "version": "3.28.0",
+      "resolved": "https://registry.npmjs.org/simple-git/-/simple-git-3.28.0.tgz",
+      "integrity": "sha512-Rs/vQRwsn1ILH1oBUy8NucJlXmnnLeLCfcvbSehkPzbv3wwoFWIdtfd6Ndo6ZPhlPsCZ60CPI4rxurnwAa+a2w==",
+      "license": "MIT",
+      "dependencies": {
+        "@kwsites/file-exists": "^1.1.1",
+        "@kwsites/promise-deferred": "^1.1.1",
+        "debug": "^4.4.0"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/steveukx/git-js?sponsor=1"
+      }
+    },
     "node_modules/source-map-js": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
@@ -2630,6 +2932,12 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/universal-user-agent": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/universal-user-agent/-/universal-user-agent-7.0.3.tgz",
+      "integrity": "sha512-TmnEAEAsBJVZM/AADELsK76llnwcf9vMKuPz8JflO1frO8Lchitr0fNaN9d+Ap0BjKtqWqd/J17qeDnXh8CL2A==",
+      "license": "ISC"
+    },
     "node_modules/update-browserslist-db": {
       "version": "1.1.3",
       "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
@@ -2746,6 +3054,15 @@
         }
       }
     },
+    "node_modules/web-streams-polyfill": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
+      "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
     "node_modules/which": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
diff --git a/beatsmarketlebon/package.json b/beatsmarketlebon/package.json
index 117b760..574fc29 100644
--- a/beatsmarketlebon/package.json
+++ b/beatsmarketlebon/package.json
@@ -10,8 +10,12 @@
     "preview": "vite preview"
   },
   "dependencies": {
+    "@octokit/rest": "^22.0.0",
+    "dotenv": "^17.2.0",
+    "node-fetch": "^3.3.2",
     "react": "^19.1.0",
-    "react-dom": "^19.1.0"
+    "react-dom": "^19.1.0",
+    "simple-git": "^3.28.0"
   },
   "devDependencies": {
     "@eslint/js": "^9.30.1",
diff --git a/beatsmarketlebon/testEnv.js b/beatsmarketlebon/testEnv.js
new file mode 100644
index 0000000..91f0ff1
--- /dev/null
+++ b/beatsmarketlebon/testEnv.js
@@ -0,0 +1,5 @@
+import dotenv from 'dotenv';
+
+dotenv.config(); // Charge le fichier .env
+
+console.log("Token :", process.env.GITHUB_TOKEN || "Aucun token détecté");
diff --git a/beatsmarketlebon/viteAutoPush.js b/beatsmarketlebon/viteAutoPush.js
new file mode 100644
index 0000000..1fda32c
--- /dev/null
+++ b/beatsmarketlebon/viteAutoPush.js
@@ -0,0 +1,33 @@
+import simpleGit from 'simple-git';
+
+const git = simpleGit();
+
+async function updateAndPush(commitMessage) {
+  try {
+    console.log("➕ Ajout des fichiers modifiés...");
+    await git.add('.');
+
+    // On tente de committer, si pas de changement ça ne bloquera pas
+    const status = await git.status();
+    if (status.staged.length > 0) {
+      console.log(`💾 Commit avec message : "${commitMessage}"`);
+      await git.commit(commitMessage);
+    } else {
+      console.log("📝 Aucun changement à committer.");
+    }
+
+    console.log("🔄 Pull --rebase en cours...");
+    await git.pull('origin', 'main', { '--rebase': 'true' });
+
+    console.log("🚀 Push vers origin/main...");
+    await git.push('origin', 'main');
+
+    console.log("✅ Push réussi !");
+  } catch (error) {
+    console.error("❌ Erreur git :", error.message);
+  }
+}
+
+const commitMessage = process.argv.slice(2).join(' ') || 'Mise à jour automatique';
+
+updateAndPush(commitMessage);

commit 668896a12834d84fcb859c9aac339b3914e5449f
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 16:03:03 2025 +0200

    Ajout autoGit.js et mise à jour des packages

diff --git a/autoGit.js b/autoGit.js
new file mode 100644
index 0000000..7db47ad
--- /dev/null
+++ b/autoGit.js
@@ -0,0 +1,88 @@
+import 'dotenv/config';
+import { Octokit } from "octokit";
+
+const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
+
+const OWNER = "jaypms";            // Remplace par ton user GitHub
+const REPO = "beatsmarketlebon";   // Remplace par ton repo
+const BRANCH = "main";             // Branche cible
+
+/**
+ * Crée ou met à jour un fichier sur GitHub
+ * @param {string} path Chemin du fichier dans le repo
+ * @param {string} content Contenu texte du fichier
+ * @param {string} message Message de commit
+ */
+async function createOrUpdateFile(path, content, message) {
+  try {
+    let sha;
+    try {
+      const { data } = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {
+        owner: OWNER,
+        repo: REPO,
+        path,
+        ref: BRANCH,
+      });
+      sha = data.sha;  // fichier existe, on récupère le sha pour mise à jour
+    } catch {
+      // fichier n'existe pas encore, pas de sha
+    }
+
+    await octokit.request('PUT /repos/{owner}/{repo}/contents/{path}', {
+      owner: OWNER,
+      repo: REPO,
+      path,
+      message,
+      content: Buffer.from(content).toString('base64'),
+      sha,
+      branch: BRANCH,
+    });
+
+    console.log(`✅ Fichier ${path} créé/mis à jour.`);
+  } catch (error) {
+    console.error(`❌ Erreur GitHub API pour ${path} :`, error.message);
+  }
+}
+
+async function main() {
+  // Liste des fichiers à créer / modifier
+  const filesToCreate = [
+    {
+      path: "src/pages/index.tsx",
+      content: `
+import React from 'react';
+
+export default function Home() {
+  return (
+    <div>
+      <h1>Bienvenue sur BeatsMarket</h1>
+    </div>
+  );
+}
+`.trim(),
+      message: "Création / mise à jour page d'accueil"
+    },
+    {
+      path: "src/components/Footer.tsx",
+      content: `
+import React from 'react';
+
+export default function Footer() {
+  return (
+    <footer>
+      <p>© 2025 BeatsMarket - Tous droits réservés</p>
+    </footer>
+  );
+}
+`.trim(),
+      message: "Création / mise à jour Footer"
+    },
+    // Ajoute ici d'autres fichiers avec leur contenu et message de commit
+  ];
+
+  for (const file of filesToCreate) {
+    await createOrUpdateFile(file.path, file.content, file.message);
+  }
+}
+
+main();
diff --git a/package-lock.json b/package-lock.json
index 50a4c38..76e6cd4 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,5319 +1,500 @@
 {
-  "name": "beatsmarket",
-  "version": "1.0.0",
+  "name": "beatsmarketlebon",
+  "version": "0.0.1",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
-      "name": "beatsmarket",
-      "version": "1.0.0",
-      "dependencies": {
-        "@radix-ui/react-accordion": "^1.2.11",
-        "@tailwindcss/forms": "^0.5.10",
-        "@tailwindcss/typography": "^0.5.16",
-        "lucide-react": "^0.525.0",
-        "next": "^15.4.2",
-        "openai": "^4.12.0",
-        "react": "^18.2.0",
-        "react-dom": "^18.2.0",
-        "tailwindcss": "^3.2.7",
-        "typescript": "^5.1.3"
-      },
-      "devDependencies": {
-        "@tailwindcss/postcss": "^4.0.0",
-        "@types/node": "^20.19.9",
-        "@types/react": "^18.2.6",
-        "@vitejs/plugin-react": "^4.7.0",
-        "autoprefixer": "^10.4.19",
-        "postcss": "^8.4.38",
-        "vite": "^7.0.6"
-      }
-    },
-    "node_modules/@alloc/quick-lru": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
-      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/@ampproject/remapping": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
-      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
-      "dev": true,
-      "license": "Apache-2.0",
-      "dependencies": {
-        "@jridgewell/gen-mapping": "^0.3.5",
-        "@jridgewell/trace-mapping": "^0.3.24"
-      },
-      "engines": {
-        "node": ">=6.0.0"
-      }
-    },
-    "node_modules/@babel/code-frame": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
-      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/helper-validator-identifier": "^7.27.1",
-        "js-tokens": "^4.0.0",
-        "picocolors": "^1.1.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/compat-data": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
-      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/core": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz",
-      "integrity": "sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@ampproject/remapping": "^2.2.0",
-        "@babel/code-frame": "^7.27.1",
-        "@babel/generator": "^7.28.0",
-        "@babel/helper-compilation-targets": "^7.27.2",
-        "@babel/helper-module-transforms": "^7.27.3",
-        "@babel/helpers": "^7.27.6",
-        "@babel/parser": "^7.28.0",
-        "@babel/template": "^7.27.2",
-        "@babel/traverse": "^7.28.0",
-        "@babel/types": "^7.28.0",
-        "convert-source-map": "^2.0.0",
-        "debug": "^4.1.0",
-        "gensync": "^1.0.0-beta.2",
-        "json5": "^2.2.3",
-        "semver": "^6.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/babel"
-      }
-    },
-    "node_modules/@babel/generator": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz",
-      "integrity": "sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/parser": "^7.28.0",
-        "@babel/types": "^7.28.0",
-        "@jridgewell/gen-mapping": "^0.3.12",
-        "@jridgewell/trace-mapping": "^0.3.28",
-        "jsesc": "^3.0.2"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-compilation-targets": {
-      "version": "7.27.2",
-      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
-      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/compat-data": "^7.27.2",
-        "@babel/helper-validator-option": "^7.27.1",
-        "browserslist": "^4.24.0",
-        "lru-cache": "^5.1.1",
-        "semver": "^6.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-globals": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
-      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-module-imports": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
-      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/traverse": "^7.27.1",
-        "@babel/types": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-module-transforms": {
-      "version": "7.27.3",
-      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
-      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/helper-module-imports": "^7.27.1",
-        "@babel/helper-validator-identifier": "^7.27.1",
-        "@babel/traverse": "^7.27.3"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0"
-      }
-    },
-    "node_modules/@babel/helper-plugin-utils": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
-      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-string-parser": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
-      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-validator-identifier": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
-      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-validator-option": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
-      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helpers": {
-      "version": "7.27.6",
-      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
-      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/template": "^7.27.2",
-        "@babel/types": "^7.27.6"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/parser": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz",
-      "integrity": "sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/types": "^7.28.0"
-      },
-      "bin": {
-        "parser": "bin/babel-parser.js"
-      },
-      "engines": {
-        "node": ">=6.0.0"
-      }
-    },
-    "node_modules/@babel/plugin-transform-react-jsx-self": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
-      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-transform-react-jsx-source": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
-      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/template": {
-      "version": "7.27.2",
-      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
-      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@babel/parser": "^7.27.2",
-        "@babel/types": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/traverse": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz",
-      "integrity": "sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@babel/generator": "^7.28.0",
-        "@babel/helper-globals": "^7.28.0",
-        "@babel/parser": "^7.28.0",
-        "@babel/template": "^7.27.2",
-        "@babel/types": "^7.28.0",
-        "debug": "^4.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/types": {
-      "version": "7.28.1",
-      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz",
-      "integrity": "sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/helper-string-parser": "^7.27.1",
-        "@babel/helper-validator-identifier": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@emnapi/runtime": {
-      "version": "1.4.5",
-      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.5.tgz",
-      "integrity": "sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==",
-      "license": "MIT",
-      "optional": true,
-      "dependencies": {
-        "tslib": "^2.4.0"
-      }
-    },
-    "node_modules/@esbuild/aix-ppc64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz",
-      "integrity": "sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==",
-      "cpu": [
-        "ppc64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "aix"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/android-arm": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz",
-      "integrity": "sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/android-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz",
-      "integrity": "sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/android-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz",
-      "integrity": "sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/darwin-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz",
-      "integrity": "sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/darwin-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz",
-      "integrity": "sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/freebsd-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz",
-      "integrity": "sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/freebsd-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz",
-      "integrity": "sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-arm": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz",
-      "integrity": "sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz",
-      "integrity": "sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-ia32": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz",
-      "integrity": "sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==",
-      "cpu": [
-        "ia32"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-loong64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz",
-      "integrity": "sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==",
-      "cpu": [
-        "loong64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-mips64el": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz",
-      "integrity": "sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==",
-      "cpu": [
-        "mips64el"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-ppc64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz",
-      "integrity": "sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==",
-      "cpu": [
-        "ppc64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-riscv64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz",
-      "integrity": "sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==",
-      "cpu": [
-        "riscv64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-s390x": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz",
-      "integrity": "sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==",
-      "cpu": [
-        "s390x"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/linux-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz",
-      "integrity": "sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/netbsd-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz",
-      "integrity": "sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "netbsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/netbsd-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz",
-      "integrity": "sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "netbsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/openbsd-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz",
-      "integrity": "sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "openbsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/openbsd-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz",
-      "integrity": "sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "openbsd"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/openharmony-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz",
-      "integrity": "sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "openharmony"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/sunos-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz",
-      "integrity": "sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "sunos"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/win32-arm64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz",
-      "integrity": "sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/win32-ia32": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz",
-      "integrity": "sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==",
-      "cpu": [
-        "ia32"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@esbuild/win32-x64": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz",
-      "integrity": "sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@img/sharp-darwin-arm64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
-      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-darwin-arm64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-darwin-x64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
-      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-darwin-x64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-libvips-darwin-arm64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
-      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-darwin-x64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
-      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linux-arm": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
-      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
-      "cpu": [
-        "arm"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linux-arm64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
-      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linux-ppc64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
-      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
-      "cpu": [
-        "ppc64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linux-s390x": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
-      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
-      "cpu": [
-        "s390x"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linux-x64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
-      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
-      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
-      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-linux-arm": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
-      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
-      "cpu": [
-        "arm"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linux-arm": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linux-arm64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
-      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linux-arm64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linux-ppc64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
-      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
-      "cpu": [
-        "ppc64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linux-ppc64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linux-s390x": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
-      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
-      "cpu": [
-        "s390x"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linux-s390x": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linux-x64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
-      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linux-x64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linuxmusl-arm64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
-      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-linuxmusl-x64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
-      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "Apache-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
-      }
-    },
-    "node_modules/@img/sharp-wasm32": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
-      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
-      "cpu": [
-        "wasm32"
-      ],
-      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
-      "optional": true,
-      "dependencies": {
-        "@emnapi/runtime": "^1.4.4"
-      },
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-win32-arm64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
-      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "Apache-2.0 AND LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-win32-ia32": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
-      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
-      "cpu": [
-        "ia32"
-      ],
-      "license": "Apache-2.0 AND LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@img/sharp-win32-x64": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
-      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "Apache-2.0 AND LGPL-3.0-or-later",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      }
-    },
-    "node_modules/@isaacs/cliui": {
-      "version": "8.0.2",
-      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
-      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
-      "license": "ISC",
-      "dependencies": {
-        "string-width": "^5.1.2",
-        "string-width-cjs": "npm:string-width@^4.2.0",
-        "strip-ansi": "^7.0.1",
-        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
-        "wrap-ansi": "^8.1.0",
-        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
-      },
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/@isaacs/fs-minipass": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
-      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
-      "dev": true,
-      "license": "ISC",
-      "dependencies": {
-        "minipass": "^7.0.4"
-      },
-      "engines": {
-        "node": ">=18.0.0"
-      }
-    },
-    "node_modules/@jridgewell/gen-mapping": {
-      "version": "0.3.12",
-      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
-      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
-      "license": "MIT",
-      "dependencies": {
-        "@jridgewell/sourcemap-codec": "^1.5.0",
-        "@jridgewell/trace-mapping": "^0.3.24"
-      }
-    },
-    "node_modules/@jridgewell/resolve-uri": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
-      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.0.0"
-      }
-    },
-    "node_modules/@jridgewell/sourcemap-codec": {
-      "version": "1.5.4",
-      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
-      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
-      "license": "MIT"
-    },
-    "node_modules/@jridgewell/trace-mapping": {
-      "version": "0.3.29",
-      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
-      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
-      "license": "MIT",
-      "dependencies": {
-        "@jridgewell/resolve-uri": "^3.1.0",
-        "@jridgewell/sourcemap-codec": "^1.4.14"
-      }
-    },
-    "node_modules/@next/env": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.3.tgz",
-      "integrity": "sha512-lKJ9KJAvaWzqurIsz6NWdQOLj96mdhuDMusLSYHw9HBe2On7BjUwU1WeRvq19x7NrEK3iOgMeSBV5qEhVH1cMw==",
-      "license": "MIT"
-    },
-    "node_modules/@next/swc-darwin-arm64": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.3.tgz",
-      "integrity": "sha512-YAhZWKeEYY7LHQJiQ8fe3Y6ymfcDcTn7rDC8PDu/pdeIl1Z2LHD4uyPNuQUGCEQT//MSNv6oZCeQzZfTCKZv+A==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-darwin-x64": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.3.tgz",
-      "integrity": "sha512-ZPHRdd51xaxCMpT4viQ6h8TgYM1zPW1JIeksPY9wKlyvBVUQqrWqw8kEh1sa7/x0Ied+U7pYHkAkutrUwxbMcg==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-linux-arm64-gnu": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.3.tgz",
-      "integrity": "sha512-QUdqftCXC5vw5cowucqi9FeOPQ0vdMxoOHLY0J5jPdercwSJFjdi9CkEO4Xkq1eG4t1TB/BG81n6rmTsWoILnw==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-linux-arm64-musl": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.3.tgz",
-      "integrity": "sha512-HTL31NsmoafX+r5g91Yj3+q34nrn1xKmCWVuNA+fUWO4X0pr+n83uGzLyEOn0kUqbMZ40KmWx+4wsbMoUChkiQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-linux-x64-gnu": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.3.tgz",
-      "integrity": "sha512-HRQLWoeFkKXd2YCEEy9GhfwOijRm37x4w5r0MMVHxBKSA6ms3JoPUXvGhfHT6srnGRcEUWNrQ2vzkHir5ZWTSw==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-linux-x64-musl": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.3.tgz",
-      "integrity": "sha512-NyXUx6G7AayaRGUsVPenuwhyAoyxjQuQPaK50AXoaAHPwRuif4WmSrXUs8/Y0HJIZh8E/YXRm9H7uuGfiacpuQ==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-win32-arm64-msvc": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.3.tgz",
-      "integrity": "sha512-2CUTmpzN/7cL1a7GjdLkDFlfH3nwMwW8a6JiaAUsL9MtKmNNO3fnXqnY0Zk30fii3hVEl4dr7ztrpYt0t2CcGQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@next/swc-win32-x64-msvc": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.3.tgz",
-      "integrity": "sha512-i54YgUhvrUQxQD84SjAbkfWhYkOdm/DNRAVekCHLWxVg3aUbyC6NFQn9TwgCkX5QAS2pXCJo3kFboSFvrsd7dA==",
-      "cpu": [
-        "x64"
-      ],
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@nodelib/fs.scandir": {
-      "version": "2.1.5",
-      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
-      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
-      "license": "MIT",
-      "dependencies": {
-        "@nodelib/fs.stat": "2.0.5",
-        "run-parallel": "^1.1.9"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/@nodelib/fs.stat": {
-      "version": "2.0.5",
-      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
-      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/@nodelib/fs.walk": {
-      "version": "1.2.8",
-      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
-      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
-      "license": "MIT",
-      "dependencies": {
-        "@nodelib/fs.scandir": "2.1.5",
-        "fastq": "^1.6.0"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/@pkgjs/parseargs": {
-      "version": "0.11.0",
-      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
-      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
-      "license": "MIT",
-      "optional": true,
-      "engines": {
-        "node": ">=14"
-      }
-    },
-    "node_modules/@radix-ui/primitive": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
-      "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==",
-      "license": "MIT"
-    },
-    "node_modules/@radix-ui/react-accordion": {
-      "version": "1.2.11",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.11.tgz",
-      "integrity": "sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/primitive": "1.1.2",
-        "@radix-ui/react-collapsible": "1.1.11",
-        "@radix-ui/react-collection": "1.1.7",
-        "@radix-ui/react-compose-refs": "1.1.2",
-        "@radix-ui/react-context": "1.1.2",
-        "@radix-ui/react-direction": "1.1.1",
-        "@radix-ui/react-id": "1.1.1",
-        "@radix-ui/react-primitive": "2.1.3",
-        "@radix-ui/react-use-controllable-state": "1.2.2"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collapsible": {
-      "version": "1.1.11",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.11.tgz",
-      "integrity": "sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/primitive": "1.1.2",
-        "@radix-ui/react-compose-refs": "1.1.2",
-        "@radix-ui/react-context": "1.1.2",
-        "@radix-ui/react-id": "1.1.1",
-        "@radix-ui/react-presence": "1.1.4",
-        "@radix-ui/react-primitive": "2.1.3",
-        "@radix-ui/react-use-controllable-state": "1.2.2",
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collapsible/node_modules/@radix-ui/react-presence": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz",
-      "integrity": "sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-compose-refs": "1.1.2",
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-collection": {
-      "version": "1.1.7",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
-      "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-compose-refs": "1.1.2",
-        "@radix-ui/react-context": "1.1.2",
-        "@radix-ui/react-primitive": "2.1.3",
-        "@radix-ui/react-slot": "1.2.3"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-accordion/node_modules/@radix-ui/react-primitive": {
-      "version": "2.1.3",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
-      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-slot": "1.2.3"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-compose-refs": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
-      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
-      "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-context": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
-      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
-      "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-direction": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
-      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
-      "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-id": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
-      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-slot": {
-      "version": "1.2.3",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
-      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-compose-refs": "1.1.2"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-use-controllable-state": {
-      "version": "1.2.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
-      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-effect-event": "0.0.2",
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-use-effect-event": {
-      "version": "0.0.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
-      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
-      "license": "MIT",
-      "dependencies": {
-        "@radix-ui/react-use-layout-effect": "1.1.1"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-use-layout-effect": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
-      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
-      "license": "MIT",
-      "peerDependencies": {
-        "@types/react": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@rolldown/pluginutils": {
-      "version": "1.0.0-beta.27",
-      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
-      "integrity": "sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/@rollup/rollup-android-arm-eabi": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.45.1.tgz",
-      "integrity": "sha512-NEySIFvMY0ZQO+utJkgoMiCAjMrGvnbDLHvcmlA33UXJpYBCvlBEbMMtV837uCkS+plG2umfhn0T5mMAxGrlRA==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ]
-    },
-    "node_modules/@rollup/rollup-android-arm64": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.45.1.tgz",
-      "integrity": "sha512-ujQ+sMXJkg4LRJaYreaVx7Z/VMgBBd89wGS4qMrdtfUFZ+TSY5Rs9asgjitLwzeIbhwdEhyj29zhst3L1lKsRQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ]
-    },
-    "node_modules/@rollup/rollup-darwin-arm64": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.45.1.tgz",
-      "integrity": "sha512-FSncqHvqTm3lC6Y13xncsdOYfxGSLnP+73k815EfNmpewPs+EyM49haPS105Rh4aF5mJKywk9X0ogzLXZzN9lA==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ]
-    },
-    "node_modules/@rollup/rollup-darwin-x64": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.45.1.tgz",
-      "integrity": "sha512-2/vVn/husP5XI7Fsf/RlhDaQJ7x9zjvC81anIVbr4b/f0xtSmXQTFcGIQ/B1cXIYM6h2nAhJkdMHTnD7OtQ9Og==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ]
-    },
-    "node_modules/@rollup/rollup-freebsd-arm64": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.45.1.tgz",
-      "integrity": "sha512-4g1kaDxQItZsrkVTdYQ0bxu4ZIQ32cotoQbmsAnW1jAE4XCMbcBPDirX5fyUzdhVCKgPcrwWuucI8yrVRBw2+g==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ]
-    },
-    "node_modules/@rollup/rollup-freebsd-x64": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.45.1.tgz",
-      "integrity": "sha512-L/6JsfiL74i3uK1Ti2ZFSNsp5NMiM4/kbbGEcOCps99aZx3g8SJMO1/9Y0n/qKlWZfn6sScf98lEOUe2mBvW9A==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.45.1.tgz",
-      "integrity": "sha512-RkdOTu2jK7brlu+ZwjMIZfdV2sSYHK2qR08FUWcIoqJC2eywHbXr0L8T/pONFwkGukQqERDheaGTeedG+rra6Q==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.45.1.tgz",
-      "integrity": "sha512-3kJ8pgfBt6CIIr1o+HQA7OZ9mp/zDk3ctekGl9qn/pRBgrRgfwiffaUmqioUGN9hv0OHv2gxmvdKOkARCtRb8Q==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-arm64-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.45.1.tgz",
-      "integrity": "sha512-k3dOKCfIVixWjG7OXTCOmDfJj3vbdhN0QYEqB+OuGArOChek22hn7Uy5A/gTDNAcCy5v2YcXRJ/Qcnm4/ma1xw==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-arm64-musl": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.45.1.tgz",
-      "integrity": "sha512-PmI1vxQetnM58ZmDFl9/Uk2lpBBby6B6rF4muJc65uZbxCs0EA7hhKCk2PKlmZKuyVSHAyIw3+/SiuMLxKxWog==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.45.1.tgz",
-      "integrity": "sha512-9UmI0VzGmNJ28ibHW2GpE2nF0PBQqsyiS4kcJ5vK+wuwGnV5RlqdczVocDSUfGX/Na7/XINRVoUgJyFIgipoRg==",
-      "cpu": [
-        "loong64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.45.1.tgz",
-      "integrity": "sha512-7nR2KY8oEOUTD3pBAxIBBbZr0U7U+R9HDTPNy+5nVVHDXI4ikYniH1oxQz9VoB5PbBU1CZuDGHkLJkd3zLMWsg==",
-      "cpu": [
-        "ppc64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.45.1.tgz",
-      "integrity": "sha512-nlcl3jgUultKROfZijKjRQLUu9Ma0PeNv/VFHkZiKbXTBQXhpytS8CIj5/NfBeECZtY2FJQubm6ltIxm/ftxpw==",
-      "cpu": [
-        "riscv64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-riscv64-musl": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.45.1.tgz",
-      "integrity": "sha512-HJV65KLS51rW0VY6rvZkiieiBnurSzpzore1bMKAhunQiECPuxsROvyeaot/tcK3A3aGnI+qTHqisrpSgQrpgA==",
-      "cpu": [
-        "riscv64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-s390x-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.45.1.tgz",
-      "integrity": "sha512-NITBOCv3Qqc6hhwFt7jLV78VEO/il4YcBzoMGGNxznLgRQf43VQDae0aAzKiBeEPIxnDrACiMgbqjuihx08OOw==",
-      "cpu": [
-        "s390x"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-x64-gnu": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.45.1.tgz",
-      "integrity": "sha512-+E/lYl6qu1zqgPEnTrs4WysQtvc/Sh4fC2nByfFExqgYrqkKWp1tWIbe+ELhixnenSpBbLXNi6vbEEJ8M7fiHw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-linux-x64-musl": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.45.1.tgz",
-      "integrity": "sha512-a6WIAp89p3kpNoYStITT9RbTbTnqarU7D8N8F2CV+4Cl9fwCOZraLVuVFvlpsW0SbIiYtEnhCZBPLoNdRkjQFw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@rollup/rollup-win32-arm64-msvc": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.45.1.tgz",
-      "integrity": "sha512-T5Bi/NS3fQiJeYdGvRpTAP5P02kqSOpqiopwhj0uaXB6nzs5JVi2XMJb18JUSKhCOX8+UE1UKQufyD6Or48dJg==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/@rollup/rollup-win32-ia32-msvc": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.45.1.tgz",
-      "integrity": "sha512-lxV2Pako3ujjuUe9jiU3/s7KSrDfH6IgTSQOnDWr9aJ92YsFd7EurmClK0ly/t8dzMkDtd04g60WX6yl0sGfdw==",
-      "cpu": [
-        "ia32"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/@rollup/rollup-win32-x64-msvc": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.45.1.tgz",
-      "integrity": "sha512-M/fKi4sasCdM8i0aWJjCSFm2qEnYRR8AMLG2kxp6wD13+tMGA4Z1tVAuHkNRjud5SW2EM3naLuK35w9twvf6aA==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/@swc/helpers": {
-      "version": "0.5.15",
-      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
-      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
-      "license": "Apache-2.0",
-      "dependencies": {
-        "tslib": "^2.8.0"
-      }
-    },
-    "node_modules/@tailwindcss/forms": {
-      "version": "0.5.10",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.10.tgz",
-      "integrity": "sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==",
-      "license": "MIT",
-      "dependencies": {
-        "mini-svg-data-uri": "^1.2.3"
-      },
-      "peerDependencies": {
-        "tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1"
-      }
-    },
-    "node_modules/@tailwindcss/node": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.11.tgz",
-      "integrity": "sha512-yzhzuGRmv5QyU9qLNg4GTlYI6STedBWRE7NjxP45CsFYYq9taI0zJXZBMqIC/c8fViNLhmrbpSFS57EoxUmD6Q==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@ampproject/remapping": "^2.3.0",
-        "enhanced-resolve": "^5.18.1",
-        "jiti": "^2.4.2",
-        "lightningcss": "1.30.1",
-        "magic-string": "^0.30.17",
-        "source-map-js": "^1.2.1",
-        "tailwindcss": "4.1.11"
-      }
-    },
-    "node_modules/@tailwindcss/node/node_modules/tailwindcss": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
-      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/@tailwindcss/oxide": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.11.tgz",
-      "integrity": "sha512-Q69XzrtAhuyfHo+5/HMgr1lAiPP/G40OMFAnws7xcFEYqcypZmdW8eGXaOUIeOl1dzPJBPENXgbjsOyhg2nkrg==",
-      "dev": true,
-      "hasInstallScript": true,
-      "license": "MIT",
-      "dependencies": {
-        "detect-libc": "^2.0.4",
-        "tar": "^7.4.3"
-      },
-      "engines": {
-        "node": ">= 10"
-      },
-      "optionalDependencies": {
-        "@tailwindcss/oxide-android-arm64": "4.1.11",
-        "@tailwindcss/oxide-darwin-arm64": "4.1.11",
-        "@tailwindcss/oxide-darwin-x64": "4.1.11",
-        "@tailwindcss/oxide-freebsd-x64": "4.1.11",
-        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.11",
-        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.11",
-        "@tailwindcss/oxide-linux-arm64-musl": "4.1.11",
-        "@tailwindcss/oxide-linux-x64-gnu": "4.1.11",
-        "@tailwindcss/oxide-linux-x64-musl": "4.1.11",
-        "@tailwindcss/oxide-wasm32-wasi": "4.1.11",
-        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.11",
-        "@tailwindcss/oxide-win32-x64-msvc": "4.1.11"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-android-arm64": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.11.tgz",
-      "integrity": "sha512-3IfFuATVRUMZZprEIx9OGDjG3Ou3jG4xQzNTvjDoKmU9JdmoCohQJ83MYd0GPnQIu89YoJqvMM0G3uqLRFtetg==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "android"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-darwin-arm64": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.11.tgz",
-      "integrity": "sha512-ESgStEOEsyg8J5YcMb1xl8WFOXfeBmrhAwGsFxxB2CxY9evy63+AtpbDLAyRkJnxLy2WsD1qF13E97uQyP1lfQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-darwin-x64": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.11.tgz",
-      "integrity": "sha512-EgnK8kRchgmgzG6jE10UQNaH9Mwi2n+yw1jWmof9Vyg2lpKNX2ioe7CJdf9M5f8V9uaQxInenZkOxnTVL3fhAw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-freebsd-x64": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.11.tgz",
-      "integrity": "sha512-xdqKtbpHs7pQhIKmqVpxStnY1skuNh4CtbcyOHeX1YBE0hArj2romsFGb6yUmzkq/6M24nkxDqU8GYrKrz+UcA==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.11.tgz",
-      "integrity": "sha512-ryHQK2eyDYYMwB5wZL46uoxz2zzDZsFBwfjssgB7pzytAeCCa6glsiJGjhTEddq/4OsIjsLNMAiMlHNYnkEEeg==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.11.tgz",
-      "integrity": "sha512-mYwqheq4BXF83j/w75ewkPJmPZIqqP1nhoghS9D57CLjsh3Nfq0m4ftTotRYtGnZd3eCztgbSPJ9QhfC91gDZQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.11.tgz",
-      "integrity": "sha512-m/NVRFNGlEHJrNVk3O6I9ggVuNjXHIPoD6bqay/pubtYC9QIdAMpS+cswZQPBLvVvEF6GtSNONbDkZrjWZXYNQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.11.tgz",
-      "integrity": "sha512-YW6sblI7xukSD2TdbbaeQVDysIm/UPJtObHJHKxDEcW2exAtY47j52f8jZXkqE1krdnkhCMGqP3dbniu1Te2Fg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.11.tgz",
-      "integrity": "sha512-e3C/RRhGunWYNC3aSF7exsQkdXzQ/M+aYuZHKnw4U7KQwTJotnWsGOIVih0s2qQzmEzOFIJ3+xt7iq67K/p56Q==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.11.tgz",
-      "integrity": "sha512-Xo1+/GU0JEN/C/dvcammKHzeM6NqKovG+6921MR6oadee5XPBaKOumrJCXvopJ/Qb5TH7LX/UAywbqrP4lax0g==",
-      "bundleDependencies": [
-        "@napi-rs/wasm-runtime",
-        "@emnapi/core",
-        "@emnapi/runtime",
-        "@tybys/wasm-util",
-        "@emnapi/wasi-threads",
-        "tslib"
-      ],
-      "cpu": [
-        "wasm32"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "dependencies": {
-        "@emnapi/core": "^1.4.3",
-        "@emnapi/runtime": "^1.4.3",
-        "@emnapi/wasi-threads": "^1.0.2",
-        "@napi-rs/wasm-runtime": "^0.2.11",
-        "@tybys/wasm-util": "^0.9.0",
-        "tslib": "^2.8.0"
-      },
-      "engines": {
-        "node": ">=14.0.0"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.11.tgz",
-      "integrity": "sha512-UgKYx5PwEKrac3GPNPf6HVMNhUIGuUh4wlDFR2jYYdkX6pL/rn73zTq/4pzUm8fOjAn5L8zDeHp9iXmUGOXZ+w==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.11.tgz",
-      "integrity": "sha512-YfHoggn1j0LK7wR82TOucWc5LDCguHnoS879idHekmmiR7g9HUtMw9MI0NHatS28u/Xlkfi9w5RJWgz2Dl+5Qg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 10"
-      }
-    },
-    "node_modules/@tailwindcss/postcss": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.11.tgz",
-      "integrity": "sha512-q/EAIIpF6WpLhKEuQSEVMZNMIY8KhWoAemZ9eylNAih9jxMGAYPPWBn3I9QL/2jZ+e7OEz/tZkX5HwbBR4HohA==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@alloc/quick-lru": "^5.2.0",
-        "@tailwindcss/node": "4.1.11",
-        "@tailwindcss/oxide": "4.1.11",
-        "postcss": "^8.4.41",
-        "tailwindcss": "4.1.11"
-      }
-    },
-    "node_modules/@tailwindcss/postcss/node_modules/tailwindcss": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
-      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/@tailwindcss/typography": {
-      "version": "0.5.16",
-      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.16.tgz",
-      "integrity": "sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==",
-      "license": "MIT",
-      "dependencies": {
-        "lodash.castarray": "^4.4.0",
-        "lodash.isplainobject": "^4.0.6",
-        "lodash.merge": "^4.6.2",
-        "postcss-selector-parser": "6.0.10"
-      },
-      "peerDependencies": {
-        "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1"
-      }
-    },
-    "node_modules/@types/babel__core": {
-      "version": "7.20.5",
-      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
-      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/parser": "^7.20.7",
-        "@babel/types": "^7.20.7",
-        "@types/babel__generator": "*",
-        "@types/babel__template": "*",
-        "@types/babel__traverse": "*"
-      }
-    },
-    "node_modules/@types/babel__generator": {
-      "version": "7.27.0",
-      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
-      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/types": "^7.0.0"
-      }
-    },
-    "node_modules/@types/babel__template": {
-      "version": "7.4.4",
-      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
-      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/parser": "^7.1.0",
-        "@babel/types": "^7.0.0"
-      }
-    },
-    "node_modules/@types/babel__traverse": {
-      "version": "7.20.7",
-      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
-      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/types": "^7.20.7"
-      }
-    },
-    "node_modules/@types/estree": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
-      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/@types/node": {
-      "version": "20.19.9",
-      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
-      "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
-      "license": "MIT",
-      "dependencies": {
-        "undici-types": "~6.21.0"
-      }
-    },
-    "node_modules/@types/node-fetch": {
-      "version": "2.6.12",
-      "resolved": "https://registry.npmjs.org/@types/node-fetch/-/node-fetch-2.6.12.tgz",
-      "integrity": "sha512-8nneRWKCg3rMtF69nLQJnOYUcbafYeFSjqkw3jCRLsqkWFlHaoQrr5mXmofFGOx3DKn7UfmBMyov8ySvLRVldA==",
-      "license": "MIT",
-      "dependencies": {
-        "@types/node": "*",
-        "form-data": "^4.0.0"
-      }
-    },
-    "node_modules/@types/prop-types": {
-      "version": "15.7.15",
-      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
-      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
-      "devOptional": true,
-      "license": "MIT"
-    },
-    "node_modules/@types/react": {
-      "version": "18.3.23",
-      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz",
-      "integrity": "sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==",
-      "devOptional": true,
-      "license": "MIT",
-      "dependencies": {
-        "@types/prop-types": "*",
-        "csstype": "^3.0.2"
-      }
-    },
-    "node_modules/@vitejs/plugin-react": {
-      "version": "4.7.0",
-      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz",
-      "integrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@babel/core": "^7.28.0",
-        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
-        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
-        "@rolldown/pluginutils": "1.0.0-beta.27",
-        "@types/babel__core": "^7.20.5",
-        "react-refresh": "^0.17.0"
-      },
-      "engines": {
-        "node": "^14.18.0 || >=16.0.0"
-      },
-      "peerDependencies": {
-        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
-      }
-    },
-    "node_modules/abort-controller": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
-      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
-      "license": "MIT",
-      "dependencies": {
-        "event-target-shim": "^5.0.0"
-      },
-      "engines": {
-        "node": ">=6.5"
-      }
-    },
-    "node_modules/agentkeepalive": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.6.0.tgz",
-      "integrity": "sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==",
-      "license": "MIT",
-      "dependencies": {
-        "humanize-ms": "^1.2.1"
-      },
-      "engines": {
-        "node": ">= 8.0.0"
-      }
-    },
-    "node_modules/ansi-regex": {
-      "version": "6.1.0",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
-      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
-      }
-    },
-    "node_modules/ansi-styles": {
-      "version": "6.2.1",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
-      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/any-promise": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
-      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
-      "license": "MIT"
-    },
-    "node_modules/anymatch": {
-      "version": "3.1.3",
-      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
-      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
-      "license": "ISC",
-      "dependencies": {
-        "normalize-path": "^3.0.0",
-        "picomatch": "^2.0.4"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/arg": {
-      "version": "5.0.2",
-      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
-      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
-      "license": "MIT"
-    },
-    "node_modules/asynckit": {
-      "version": "0.4.0",
-      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
-      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
-      "license": "MIT"
-    },
-    "node_modules/autoprefixer": {
-      "version": "10.4.21",
-      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
-      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/postcss/"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "browserslist": "^4.24.4",
-        "caniuse-lite": "^1.0.30001702",
-        "fraction.js": "^4.3.7",
-        "normalize-range": "^0.1.2",
-        "picocolors": "^1.1.1",
-        "postcss-value-parser": "^4.2.0"
-      },
-      "bin": {
-        "autoprefixer": "bin/autoprefixer"
-      },
-      "engines": {
-        "node": "^10 || ^12 || >=14"
-      },
-      "peerDependencies": {
-        "postcss": "^8.1.0"
-      }
-    },
-    "node_modules/balanced-match": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
-      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "license": "MIT"
-    },
-    "node_modules/binary-extensions": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
-      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/brace-expansion": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
-      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
-      "license": "MIT",
-      "dependencies": {
-        "balanced-match": "^1.0.0"
-      }
-    },
-    "node_modules/braces": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
-      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
-      "license": "MIT",
-      "dependencies": {
-        "fill-range": "^7.1.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/browserslist": {
-      "version": "4.25.1",
-      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
-      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/browserslist"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "caniuse-lite": "^1.0.30001726",
-        "electron-to-chromium": "^1.5.173",
-        "node-releases": "^2.0.19",
-        "update-browserslist-db": "^1.1.3"
-      },
-      "bin": {
-        "browserslist": "cli.js"
-      },
-      "engines": {
-        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
-      }
-    },
-    "node_modules/call-bind-apply-helpers": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
-      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
-      "license": "MIT",
-      "dependencies": {
-        "es-errors": "^1.3.0",
-        "function-bind": "^1.1.2"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/camelcase-css": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
-      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/caniuse-lite": {
-      "version": "1.0.30001727",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
-      "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "CC-BY-4.0"
-    },
-    "node_modules/chokidar": {
-      "version": "3.6.0",
-      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
-      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
-      "license": "MIT",
-      "dependencies": {
-        "anymatch": "~3.1.2",
-        "braces": "~3.0.2",
-        "glob-parent": "~5.1.2",
-        "is-binary-path": "~2.1.0",
-        "is-glob": "~4.0.1",
-        "normalize-path": "~3.0.0",
-        "readdirp": "~3.6.0"
-      },
-      "engines": {
-        "node": ">= 8.10.0"
-      },
-      "funding": {
-        "url": "https://paulmillr.com/funding/"
-      },
-      "optionalDependencies": {
-        "fsevents": "~2.3.2"
-      }
-    },
-    "node_modules/chokidar/node_modules/glob-parent": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
-      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
-      "license": "ISC",
-      "dependencies": {
-        "is-glob": "^4.0.1"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/chownr": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
-      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
-      "dev": true,
-      "license": "BlueOak-1.0.0",
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/client-only": {
-      "version": "0.0.1",
-      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
-      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
-      "license": "MIT"
-    },
-    "node_modules/color": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
-      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
-      "license": "MIT",
-      "optional": true,
-      "dependencies": {
-        "color-convert": "^2.0.1",
-        "color-string": "^1.9.0"
-      },
-      "engines": {
-        "node": ">=12.5.0"
-      }
-    },
-    "node_modules/color-convert": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
-      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-      "license": "MIT",
-      "dependencies": {
-        "color-name": "~1.1.4"
-      },
-      "engines": {
-        "node": ">=7.0.0"
-      }
-    },
-    "node_modules/color-name": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
-      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-      "license": "MIT"
-    },
-    "node_modules/color-string": {
-      "version": "1.9.1",
-      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
-      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
-      "license": "MIT",
-      "optional": true,
-      "dependencies": {
-        "color-name": "^1.0.0",
-        "simple-swizzle": "^0.2.2"
-      }
-    },
-    "node_modules/combined-stream": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
-      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
-      "license": "MIT",
-      "dependencies": {
-        "delayed-stream": "~1.0.0"
-      },
-      "engines": {
-        "node": ">= 0.8"
-      }
-    },
-    "node_modules/commander": {
-      "version": "4.1.1",
-      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
-      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/convert-source-map": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
-      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/cross-spawn": {
-      "version": "7.0.6",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
-      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
-      "license": "MIT",
-      "dependencies": {
-        "path-key": "^3.1.0",
-        "shebang-command": "^2.0.0",
-        "which": "^2.0.1"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/cssesc": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
-      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
-      "license": "MIT",
-      "bin": {
-        "cssesc": "bin/cssesc"
-      },
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/csstype": {
-      "version": "3.1.3",
-      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
-      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
-      "devOptional": true,
-      "license": "MIT"
-    },
-    "node_modules/debug": {
-      "version": "4.4.1",
-      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
-      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "ms": "^2.1.3"
-      },
-      "engines": {
-        "node": ">=6.0"
-      },
-      "peerDependenciesMeta": {
-        "supports-color": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/delayed-stream": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
-      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.4.0"
-      }
-    },
-    "node_modules/detect-libc": {
-      "version": "2.0.4",
-      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
-      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
-      "devOptional": true,
-      "license": "Apache-2.0",
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/didyoumean": {
-      "version": "1.2.2",
-      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
-      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
-      "license": "Apache-2.0"
-    },
-    "node_modules/dlv": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
-      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
-      "license": "MIT"
-    },
-    "node_modules/dunder-proto": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
-      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
-      "license": "MIT",
-      "dependencies": {
-        "call-bind-apply-helpers": "^1.0.1",
-        "es-errors": "^1.3.0",
-        "gopd": "^1.2.0"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/eastasianwidth": {
-      "version": "0.2.0",
-      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
-      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
-      "license": "MIT"
-    },
-    "node_modules/electron-to-chromium": {
-      "version": "1.5.190",
-      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.190.tgz",
-      "integrity": "sha512-k4McmnB2091YIsdCgkS0fMVMPOJgxl93ltFzaryXqwip1AaxeDqKCGLxkXODDA5Ab/D+tV5EL5+aTx76RvLRxw==",
-      "dev": true,
-      "license": "ISC"
-    },
-    "node_modules/emoji-regex": {
-      "version": "9.2.2",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
-      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
-      "license": "MIT"
-    },
-    "node_modules/enhanced-resolve": {
-      "version": "5.18.2",
-      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
-      "integrity": "sha512-6Jw4sE1maoRJo3q8MsSIn2onJFbLTOjY9hlx4DZXmOKvLRd1Ok2kXmAGXaafL2+ijsJZ1ClYbl/pmqr9+k4iUQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "graceful-fs": "^4.2.4",
-        "tapable": "^2.2.0"
-      },
-      "engines": {
-        "node": ">=10.13.0"
-      }
-    },
-    "node_modules/es-define-property": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
-      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/es-errors": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
-      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/es-object-atoms": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
-      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
-      "license": "MIT",
-      "dependencies": {
-        "es-errors": "^1.3.0"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/es-set-tostringtag": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
-      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
-      "license": "MIT",
-      "dependencies": {
-        "es-errors": "^1.3.0",
-        "get-intrinsic": "^1.2.6",
-        "has-tostringtag": "^1.0.2",
-        "hasown": "^2.0.2"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/esbuild": {
-      "version": "0.25.8",
-      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz",
-      "integrity": "sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==",
-      "dev": true,
-      "hasInstallScript": true,
-      "license": "MIT",
-      "bin": {
-        "esbuild": "bin/esbuild"
-      },
-      "engines": {
-        "node": ">=18"
-      },
-      "optionalDependencies": {
-        "@esbuild/aix-ppc64": "0.25.8",
-        "@esbuild/android-arm": "0.25.8",
-        "@esbuild/android-arm64": "0.25.8",
-        "@esbuild/android-x64": "0.25.8",
-        "@esbuild/darwin-arm64": "0.25.8",
-        "@esbuild/darwin-x64": "0.25.8",
-        "@esbuild/freebsd-arm64": "0.25.8",
-        "@esbuild/freebsd-x64": "0.25.8",
-        "@esbuild/linux-arm": "0.25.8",
-        "@esbuild/linux-arm64": "0.25.8",
-        "@esbuild/linux-ia32": "0.25.8",
-        "@esbuild/linux-loong64": "0.25.8",
-        "@esbuild/linux-mips64el": "0.25.8",
-        "@esbuild/linux-ppc64": "0.25.8",
-        "@esbuild/linux-riscv64": "0.25.8",
-        "@esbuild/linux-s390x": "0.25.8",
-        "@esbuild/linux-x64": "0.25.8",
-        "@esbuild/netbsd-arm64": "0.25.8",
-        "@esbuild/netbsd-x64": "0.25.8",
-        "@esbuild/openbsd-arm64": "0.25.8",
-        "@esbuild/openbsd-x64": "0.25.8",
-        "@esbuild/openharmony-arm64": "0.25.8",
-        "@esbuild/sunos-x64": "0.25.8",
-        "@esbuild/win32-arm64": "0.25.8",
-        "@esbuild/win32-ia32": "0.25.8",
-        "@esbuild/win32-x64": "0.25.8"
-      }
-    },
-    "node_modules/escalade": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
-      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/event-target-shim": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
-      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/fast-glob": {
-      "version": "3.3.3",
-      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
-      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
-      "license": "MIT",
-      "dependencies": {
-        "@nodelib/fs.stat": "^2.0.2",
-        "@nodelib/fs.walk": "^1.2.3",
-        "glob-parent": "^5.1.2",
-        "merge2": "^1.3.0",
-        "micromatch": "^4.0.8"
-      },
-      "engines": {
-        "node": ">=8.6.0"
-      }
-    },
-    "node_modules/fast-glob/node_modules/glob-parent": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
-      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
-      "license": "ISC",
-      "dependencies": {
-        "is-glob": "^4.0.1"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/fastq": {
-      "version": "1.19.1",
-      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
-      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
-      "license": "ISC",
-      "dependencies": {
-        "reusify": "^1.0.4"
-      }
-    },
-    "node_modules/fill-range": {
-      "version": "7.1.1",
-      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
-      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
-      "license": "MIT",
-      "dependencies": {
-        "to-regex-range": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/foreground-child": {
-      "version": "3.3.1",
-      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
-      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
-      "license": "ISC",
-      "dependencies": {
-        "cross-spawn": "^7.0.6",
-        "signal-exit": "^4.0.1"
-      },
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/form-data": {
-      "version": "4.0.4",
-      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
-      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
-      "license": "MIT",
-      "dependencies": {
-        "asynckit": "^0.4.0",
-        "combined-stream": "^1.0.8",
-        "es-set-tostringtag": "^2.1.0",
-        "hasown": "^2.0.2",
-        "mime-types": "^2.1.12"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/form-data-encoder": {
-      "version": "1.7.2",
-      "resolved": "https://registry.npmjs.org/form-data-encoder/-/form-data-encoder-1.7.2.tgz",
-      "integrity": "sha512-qfqtYan3rxrnCk1VYaA4H+Ms9xdpPqvLZa6xmMgFvhO32x7/3J/ExcTd6qpxM0vH2GdMI+poehyBZvqfMTto8A==",
-      "license": "MIT"
-    },
-    "node_modules/formdata-node": {
-      "version": "4.4.1",
-      "resolved": "https://registry.npmjs.org/formdata-node/-/formdata-node-4.4.1.tgz",
-      "integrity": "sha512-0iirZp3uVDjVGt9p49aTaqjk84TrglENEDuqfdlZQ1roC9CWlPk6Avf8EEnZNcAqPonwkG35x4n3ww/1THYAeQ==",
-      "license": "MIT",
-      "dependencies": {
-        "node-domexception": "1.0.0",
-        "web-streams-polyfill": "4.0.0-beta.3"
-      },
-      "engines": {
-        "node": ">= 12.20"
-      }
-    },
-    "node_modules/fraction.js": {
-      "version": "4.3.7",
-      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
-      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": "*"
-      },
-      "funding": {
-        "type": "patreon",
-        "url": "https://github.com/sponsors/rawify"
-      }
-    },
-    "node_modules/fsevents": {
-      "version": "2.3.3",
-      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
-      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
-      "hasInstallScript": true,
-      "license": "MIT",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
-      }
-    },
-    "node_modules/function-bind": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
-      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
-      "license": "MIT",
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/gensync": {
-      "version": "1.0.0-beta.2",
-      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
-      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/get-intrinsic": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
-      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
-      "license": "MIT",
-      "dependencies": {
-        "call-bind-apply-helpers": "^1.0.2",
-        "es-define-property": "^1.0.1",
-        "es-errors": "^1.3.0",
-        "es-object-atoms": "^1.1.1",
-        "function-bind": "^1.1.2",
-        "get-proto": "^1.0.1",
-        "gopd": "^1.2.0",
-        "has-symbols": "^1.1.0",
-        "hasown": "^2.0.2",
-        "math-intrinsics": "^1.1.0"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/get-proto": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
-      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
-      "license": "MIT",
-      "dependencies": {
-        "dunder-proto": "^1.0.1",
-        "es-object-atoms": "^1.0.0"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/glob": {
-      "version": "10.4.5",
-      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
-      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
-      "license": "ISC",
-      "dependencies": {
-        "foreground-child": "^3.1.0",
-        "jackspeak": "^3.1.2",
-        "minimatch": "^9.0.4",
-        "minipass": "^7.1.2",
-        "package-json-from-dist": "^1.0.0",
-        "path-scurry": "^1.11.1"
-      },
-      "bin": {
-        "glob": "dist/esm/bin.mjs"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/glob-parent": {
-      "version": "6.0.2",
-      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
-      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
-      "license": "ISC",
-      "dependencies": {
-        "is-glob": "^4.0.3"
-      },
-      "engines": {
-        "node": ">=10.13.0"
-      }
-    },
-    "node_modules/gopd": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
-      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/graceful-fs": {
-      "version": "4.2.11",
-      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
-      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
-      "dev": true,
-      "license": "ISC"
-    },
-    "node_modules/has-symbols": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
-      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/has-tostringtag": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
-      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
-      "license": "MIT",
-      "dependencies": {
-        "has-symbols": "^1.0.3"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/hasown": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
-      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
-      "license": "MIT",
-      "dependencies": {
-        "function-bind": "^1.1.2"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/humanize-ms": {
-      "version": "1.2.1",
-      "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
-      "integrity": "sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==",
-      "license": "MIT",
-      "dependencies": {
-        "ms": "^2.0.0"
-      }
-    },
-    "node_modules/is-arrayish": {
-      "version": "0.3.2",
-      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
-      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
-      "license": "MIT",
-      "optional": true
-    },
-    "node_modules/is-binary-path": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
-      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
-      "license": "MIT",
-      "dependencies": {
-        "binary-extensions": "^2.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/is-core-module": {
-      "version": "2.16.1",
-      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
-      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
-      "license": "MIT",
-      "dependencies": {
-        "hasown": "^2.0.2"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/is-extglob": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
-      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/is-fullwidth-code-point": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
-      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/is-glob": {
-      "version": "4.0.3",
-      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
-      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
-      "license": "MIT",
-      "dependencies": {
-        "is-extglob": "^2.1.1"
-      },
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/is-number": {
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
-      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.12.0"
-      }
-    },
-    "node_modules/isexe": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
-      "license": "ISC"
-    },
-    "node_modules/jackspeak": {
-      "version": "3.4.3",
-      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
-      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
-      "license": "BlueOak-1.0.0",
-      "dependencies": {
-        "@isaacs/cliui": "^8.0.2"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      },
-      "optionalDependencies": {
-        "@pkgjs/parseargs": "^0.11.0"
-      }
-    },
-    "node_modules/jiti": {
-      "version": "2.5.0",
-      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.0.tgz",
-      "integrity": "sha512-NWDAhdnATItTnRhip9VTd8oXDjVcbhetRN6YzckApnXGxpGUooKMAaf0KVvlZG0+KlJMGkeLElVn4M1ReuxKUQ==",
-      "dev": true,
-      "license": "MIT",
-      "bin": {
-        "jiti": "lib/jiti-cli.mjs"
-      }
-    },
-    "node_modules/js-tokens": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
-      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
-      "license": "MIT"
-    },
-    "node_modules/jsesc": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
-      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
-      "dev": true,
-      "license": "MIT",
-      "bin": {
-        "jsesc": "bin/jsesc"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/json5": {
-      "version": "2.2.3",
-      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
-      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
-      "dev": true,
-      "license": "MIT",
-      "bin": {
-        "json5": "lib/cli.js"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/lightningcss": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
-      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
-      "dev": true,
-      "license": "MPL-2.0",
-      "dependencies": {
-        "detect-libc": "^2.0.3"
-      },
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      },
-      "optionalDependencies": {
-        "lightningcss-darwin-arm64": "1.30.1",
-        "lightningcss-darwin-x64": "1.30.1",
-        "lightningcss-freebsd-x64": "1.30.1",
-        "lightningcss-linux-arm-gnueabihf": "1.30.1",
-        "lightningcss-linux-arm64-gnu": "1.30.1",
-        "lightningcss-linux-arm64-musl": "1.30.1",
-        "lightningcss-linux-x64-gnu": "1.30.1",
-        "lightningcss-linux-x64-musl": "1.30.1",
-        "lightningcss-win32-arm64-msvc": "1.30.1",
-        "lightningcss-win32-x64-msvc": "1.30.1"
-      }
-    },
-    "node_modules/lightningcss-darwin-arm64": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
-      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-darwin-x64": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
-      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-freebsd-x64": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
-      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "freebsd"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-linux-arm-gnueabihf": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
-      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-linux-arm64-gnu": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
-      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-linux-arm64-musl": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
-      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-linux-x64-gnu": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
-      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-linux-x64-musl": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
-      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "linux"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-win32-arm64-msvc": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
-      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lightningcss-win32-x64-msvc": {
-      "version": "1.30.1",
-      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
-      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "license": "MPL-2.0",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": ">= 12.0.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/parcel"
-      }
-    },
-    "node_modules/lilconfig": {
-      "version": "3.1.3",
-      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
-      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/antonk52"
-      }
-    },
-    "node_modules/lines-and-columns": {
-      "version": "1.2.4",
-      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
-      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
-      "license": "MIT"
-    },
-    "node_modules/lodash.castarray": {
-      "version": "4.4.0",
-      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
-      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
-      "license": "MIT"
-    },
-    "node_modules/lodash.isplainobject": {
-      "version": "4.0.6",
-      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
-      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
-      "license": "MIT"
-    },
-    "node_modules/lodash.merge": {
-      "version": "4.6.2",
-      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
-      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
-      "license": "MIT"
-    },
-    "node_modules/loose-envify": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
-      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
-      "license": "MIT",
-      "dependencies": {
-        "js-tokens": "^3.0.0 || ^4.0.0"
-      },
-      "bin": {
-        "loose-envify": "cli.js"
-      }
-    },
-    "node_modules/lru-cache": {
-      "version": "5.1.1",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
-      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
-      "dev": true,
-      "license": "ISC",
-      "dependencies": {
-        "yallist": "^3.0.2"
-      }
-    },
-    "node_modules/lucide-react": {
-      "version": "0.525.0",
-      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.525.0.tgz",
-      "integrity": "sha512-Tm1txJ2OkymCGkvwoHt33Y2JpN5xucVq1slHcgE6Lk0WjDfjgKWor5CdVER8U6DvcfMwh4M8XxmpTiyzfmfDYQ==",
-      "license": "ISC",
-      "peerDependencies": {
-        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
-      }
-    },
-    "node_modules/magic-string": {
-      "version": "0.30.17",
-      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
-      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "@jridgewell/sourcemap-codec": "^1.5.0"
-      }
-    },
-    "node_modules/math-intrinsics": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
-      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.4"
-      }
-    },
-    "node_modules/merge2": {
-      "version": "1.4.1",
-      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
-      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/micromatch": {
-      "version": "4.0.8",
-      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
-      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
-      "license": "MIT",
-      "dependencies": {
-        "braces": "^3.0.3",
-        "picomatch": "^2.3.1"
-      },
-      "engines": {
-        "node": ">=8.6"
-      }
-    },
-    "node_modules/mime-db": {
-      "version": "1.52.0",
-      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
-      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 0.6"
-      }
-    },
-    "node_modules/mime-types": {
-      "version": "2.1.35",
-      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
-      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
-      "license": "MIT",
-      "dependencies": {
-        "mime-db": "1.52.0"
-      },
-      "engines": {
-        "node": ">= 0.6"
-      }
-    },
-    "node_modules/mini-svg-data-uri": {
-      "version": "1.4.4",
-      "resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",
-      "integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",
-      "license": "MIT",
-      "bin": {
-        "mini-svg-data-uri": "cli.js"
-      }
-    },
-    "node_modules/minimatch": {
-      "version": "9.0.5",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
-      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
-      "license": "ISC",
-      "dependencies": {
-        "brace-expansion": "^2.0.1"
-      },
-      "engines": {
-        "node": ">=16 || 14 >=14.17"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/minipass": {
-      "version": "7.1.2",
-      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
-      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
-      "license": "ISC",
-      "engines": {
-        "node": ">=16 || 14 >=14.17"
-      }
-    },
-    "node_modules/minizlib": {
-      "version": "3.0.2",
-      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
-      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "minipass": "^7.1.2"
-      },
-      "engines": {
-        "node": ">= 18"
-      }
-    },
-    "node_modules/mkdirp": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
-      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
-      "dev": true,
-      "license": "MIT",
-      "bin": {
-        "mkdirp": "dist/cjs/src/bin.js"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/ms": {
-      "version": "2.1.3",
-      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
-      "license": "MIT"
-    },
-    "node_modules/mz": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
-      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
-      "license": "MIT",
-      "dependencies": {
-        "any-promise": "^1.0.0",
-        "object-assign": "^4.0.1",
-        "thenify-all": "^1.0.0"
-      }
-    },
-    "node_modules/nanoid": {
-      "version": "3.3.11",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
-      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "bin": {
-        "nanoid": "bin/nanoid.cjs"
-      },
-      "engines": {
-        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
-      }
-    },
-    "node_modules/next": {
-      "version": "15.4.3",
-      "resolved": "https://registry.npmjs.org/next/-/next-15.4.3.tgz",
-      "integrity": "sha512-uW7Qe6poVasNIE1X382nI29oxSdFJzjQzTgJFLD43MxyPfGKKxCMySllhBpvqr48f58Om+tLMivzRwBpXEytvA==",
-      "license": "MIT",
-      "dependencies": {
-        "@next/env": "15.4.3",
-        "@swc/helpers": "0.5.15",
-        "caniuse-lite": "^1.0.30001579",
-        "postcss": "8.4.31",
-        "styled-jsx": "5.1.6"
-      },
-      "bin": {
-        "next": "dist/bin/next"
-      },
-      "engines": {
-        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
-      },
-      "optionalDependencies": {
-        "@next/swc-darwin-arm64": "15.4.3",
-        "@next/swc-darwin-x64": "15.4.3",
-        "@next/swc-linux-arm64-gnu": "15.4.3",
-        "@next/swc-linux-arm64-musl": "15.4.3",
-        "@next/swc-linux-x64-gnu": "15.4.3",
-        "@next/swc-linux-x64-musl": "15.4.3",
-        "@next/swc-win32-arm64-msvc": "15.4.3",
-        "@next/swc-win32-x64-msvc": "15.4.3",
-        "sharp": "^0.34.3"
-      },
-      "peerDependencies": {
-        "@opentelemetry/api": "^1.1.0",
-        "@playwright/test": "^1.51.1",
-        "babel-plugin-react-compiler": "*",
-        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
-        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
-        "sass": "^1.3.0"
-      },
-      "peerDependenciesMeta": {
-        "@opentelemetry/api": {
-          "optional": true
-        },
-        "@playwright/test": {
-          "optional": true
-        },
-        "babel-plugin-react-compiler": {
-          "optional": true
-        },
-        "sass": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/next/node_modules/postcss": {
-      "version": "8.4.31",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
-      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/postcss/"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/postcss"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "nanoid": "^3.3.6",
-        "picocolors": "^1.0.0",
-        "source-map-js": "^1.0.2"
-      },
-      "engines": {
-        "node": "^10 || ^12 || >=14"
-      }
-    },
-    "node_modules/node-domexception": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
-      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
-      "deprecated": "Use your platform's native DOMException instead",
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/jimmywarting"
-        },
-        {
-          "type": "github",
-          "url": "https://paypal.me/jimmywarting"
-        }
-      ],
-      "license": "MIT",
-      "engines": {
-        "node": ">=10.5.0"
-      }
-    },
-    "node_modules/node-fetch": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
-      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
-      "license": "MIT",
-      "dependencies": {
-        "whatwg-url": "^5.0.0"
-      },
-      "engines": {
-        "node": "4.x || >=6.0.0"
-      },
-      "peerDependencies": {
-        "encoding": "^0.1.0"
-      },
-      "peerDependenciesMeta": {
-        "encoding": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/node-releases": {
-      "version": "2.0.19",
-      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
-      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
-      "dev": true,
-      "license": "MIT"
-    },
-    "node_modules/normalize-path": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
-      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/normalize-range": {
-      "version": "0.1.2",
-      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
-      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/object-assign": {
-      "version": "4.1.1",
-      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
-      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/object-hash": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
-      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/openai": {
-      "version": "4.104.0",
-      "resolved": "https://registry.npmjs.org/openai/-/openai-4.104.0.tgz",
-      "integrity": "sha512-p99EFNsA/yX6UhVO93f5kJsDRLAg+CTA2RBqdHK4RtK8u5IJw32Hyb2dTGKbnnFmnuoBv5r7Z2CURI9sGZpSuA==",
-      "license": "Apache-2.0",
-      "dependencies": {
-        "@types/node": "^18.11.18",
-        "@types/node-fetch": "^2.6.4",
-        "abort-controller": "^3.0.0",
-        "agentkeepalive": "^4.2.1",
-        "form-data-encoder": "1.7.2",
-        "formdata-node": "^4.3.2",
-        "node-fetch": "^2.6.7"
-      },
-      "bin": {
-        "openai": "bin/cli"
-      },
-      "peerDependencies": {
-        "ws": "^8.18.0",
-        "zod": "^3.23.8"
-      },
-      "peerDependenciesMeta": {
-        "ws": {
-          "optional": true
-        },
-        "zod": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/openai/node_modules/@types/node": {
-      "version": "18.19.120",
-      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.19.120.tgz",
-      "integrity": "sha512-WtCGHFXnVI8WHLxDAt5TbnCM4eSE+nI0QN2NJtwzcgMhht2eNz6V9evJrk+lwC8bCY8OWV5Ym8Jz7ZEyGnKnMA==",
-      "license": "MIT",
-      "dependencies": {
-        "undici-types": "~5.26.4"
-      }
-    },
-    "node_modules/openai/node_modules/undici-types": {
-      "version": "5.26.5",
-      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz",
-      "integrity": "sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==",
-      "license": "MIT"
-    },
-    "node_modules/package-json-from-dist": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
-      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
-      "license": "BlueOak-1.0.0"
-    },
-    "node_modules/path-key": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
-      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/path-parse": {
-      "version": "1.0.7",
-      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
-      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
-      "license": "MIT"
-    },
-    "node_modules/path-scurry": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
-      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
-      "license": "BlueOak-1.0.0",
-      "dependencies": {
-        "lru-cache": "^10.2.0",
-        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
-      },
-      "engines": {
-        "node": ">=16 || 14 >=14.18"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/path-scurry/node_modules/lru-cache": {
-      "version": "10.4.3",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
-      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
-      "license": "ISC"
-    },
-    "node_modules/picocolors": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
-      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
-      "license": "ISC"
-    },
-    "node_modules/picomatch": {
-      "version": "2.3.1",
-      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
-      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8.6"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/jonschlinkert"
-      }
-    },
-    "node_modules/pify": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
-      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/pirates": {
-      "version": "4.0.7",
-      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
-      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/postcss": {
-      "version": "8.5.6",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
-      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/postcss/"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/postcss"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "nanoid": "^3.3.11",
-        "picocolors": "^1.1.1",
-        "source-map-js": "^1.2.1"
-      },
-      "engines": {
-        "node": "^10 || ^12 || >=14"
-      }
-    },
-    "node_modules/postcss-import": {
-      "version": "15.1.0",
-      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
-      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
-      "license": "MIT",
-      "dependencies": {
-        "postcss-value-parser": "^4.0.0",
-        "read-cache": "^1.0.0",
-        "resolve": "^1.1.7"
-      },
-      "engines": {
-        "node": ">=14.0.0"
-      },
-      "peerDependencies": {
-        "postcss": "^8.0.0"
-      }
-    },
-    "node_modules/postcss-js": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
-      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
-      "license": "MIT",
-      "dependencies": {
-        "camelcase-css": "^2.0.1"
-      },
-      "engines": {
-        "node": "^12 || ^14 || >= 16"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/postcss/"
-      },
-      "peerDependencies": {
-        "postcss": "^8.4.21"
-      }
-    },
-    "node_modules/postcss-nested": {
-      "version": "6.2.0",
-      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
-      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/postcss/"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "postcss-selector-parser": "^6.1.1"
-      },
-      "engines": {
-        "node": ">=12.0"
-      },
-      "peerDependencies": {
-        "postcss": "^8.2.14"
-      }
-    },
-    "node_modules/postcss-nested/node_modules/postcss-selector-parser": {
-      "version": "6.1.2",
-      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
-      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
-      "license": "MIT",
-      "dependencies": {
-        "cssesc": "^3.0.0",
-        "util-deprecate": "^1.0.2"
-      },
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/postcss-selector-parser": {
-      "version": "6.0.10",
-      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
-      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
-      "license": "MIT",
-      "dependencies": {
-        "cssesc": "^3.0.0",
-        "util-deprecate": "^1.0.2"
-      },
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/postcss-value-parser": {
-      "version": "4.2.0",
-      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
-      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
-      "license": "MIT"
-    },
-    "node_modules/queue-microtask": {
-      "version": "1.2.3",
-      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
-      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/feross"
-        },
-        {
-          "type": "patreon",
-          "url": "https://www.patreon.com/feross"
-        },
-        {
-          "type": "consulting",
-          "url": "https://feross.org/support"
-        }
-      ],
-      "license": "MIT"
-    },
-    "node_modules/react": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
-      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
-      "license": "MIT",
-      "dependencies": {
-        "loose-envify": "^1.1.0"
-      },
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/react-dom": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
-      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
-      "license": "MIT",
-      "dependencies": {
-        "loose-envify": "^1.1.0",
-        "scheduler": "^0.23.2"
-      },
-      "peerDependencies": {
-        "react": "^18.3.1"
-      }
-    },
-    "node_modules/react-refresh": {
-      "version": "0.17.0",
-      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
-      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/read-cache": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
-      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
-      "license": "MIT",
-      "dependencies": {
-        "pify": "^2.3.0"
-      }
-    },
-    "node_modules/readdirp": {
-      "version": "3.6.0",
-      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
-      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
-      "license": "MIT",
-      "dependencies": {
-        "picomatch": "^2.2.1"
-      },
-      "engines": {
-        "node": ">=8.10.0"
-      }
-    },
-    "node_modules/resolve": {
-      "version": "1.22.10",
-      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
-      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
-      "license": "MIT",
-      "dependencies": {
-        "is-core-module": "^2.16.0",
-        "path-parse": "^1.0.7",
-        "supports-preserve-symlinks-flag": "^1.0.0"
-      },
-      "bin": {
-        "resolve": "bin/resolve"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
+      "name": "beatsmarketlebon",
+      "version": "0.0.1",
+      "dependencies": {
+        "dotenv": "^17.2.0",
+        "octokit": "^5.0.3",
+        "simple-git": "^3.28.0"
       }
     },
-    "node_modules/reusify": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
-      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
+    "node_modules/@kwsites/file-exists": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@kwsites/file-exists/-/file-exists-1.1.1.tgz",
+      "integrity": "sha512-m9/5YGR18lIwxSFDwfE3oA7bWuq9kdau6ugN4H2rJeyhFQZcG9AgSHkQtSD15a8WvTgfz9aikZMrKPHvbpqFiw==",
       "license": "MIT",
-      "engines": {
-        "iojs": ">=1.0.0",
-        "node": ">=0.10.0"
+      "dependencies": {
+        "debug": "^4.1.1"
       }
     },
-    "node_modules/rollup": {
-      "version": "4.45.1",
-      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.45.1.tgz",
-      "integrity": "sha512-4iya7Jb76fVpQyLoiVpzUrsjQ12r3dM7fIVz+4NwoYvZOShknRmiv+iu9CClZml5ZLGb0XMcYLutK6w9tgxHDw==",
-      "dev": true,
+    "node_modules/@kwsites/promise-deferred": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@kwsites/promise-deferred/-/promise-deferred-1.1.1.tgz",
+      "integrity": "sha512-GaHYm+c0O9MjZRu0ongGBRbinu8gVAMd2UZjji6jVmqKtZluZnptXGWhz1E8j8D2HJ3f/yMxKAUC0b+57wncIw==",
+      "license": "MIT"
+    },
+    "node_modules/@octokit/app": {
+      "version": "16.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/app/-/app-16.0.1.tgz",
+      "integrity": "sha512-kgTeTsWmpUX+s3Fs4EK4w1K+jWCDB6ClxLSWUWTyhlw7+L3jHtuXDR4QtABu2GsmCMdk67xRhruiXotS3ay3Yw==",
       "license": "MIT",
       "dependencies": {
-        "@types/estree": "1.0.8"
-      },
-      "bin": {
-        "rollup": "dist/bin/rollup"
+        "@octokit/auth-app": "^8.0.1",
+        "@octokit/auth-unauthenticated": "^7.0.1",
+        "@octokit/core": "^7.0.2",
+        "@octokit/oauth-app": "^8.0.1",
+        "@octokit/plugin-paginate-rest": "^13.0.0",
+        "@octokit/types": "^14.0.0",
+        "@octokit/webhooks": "^14.0.0"
       },
       "engines": {
-        "node": ">=18.0.0",
-        "npm": ">=8.0.0"
-      },
-      "optionalDependencies": {
-        "@rollup/rollup-android-arm-eabi": "4.45.1",
-        "@rollup/rollup-android-arm64": "4.45.1",
-        "@rollup/rollup-darwin-arm64": "4.45.1",
-        "@rollup/rollup-darwin-x64": "4.45.1",
-        "@rollup/rollup-freebsd-arm64": "4.45.1",
-        "@rollup/rollup-freebsd-x64": "4.45.1",
-        "@rollup/rollup-linux-arm-gnueabihf": "4.45.1",
-        "@rollup/rollup-linux-arm-musleabihf": "4.45.1",
-        "@rollup/rollup-linux-arm64-gnu": "4.45.1",
-        "@rollup/rollup-linux-arm64-musl": "4.45.1",
-        "@rollup/rollup-linux-loongarch64-gnu": "4.45.1",
-        "@rollup/rollup-linux-powerpc64le-gnu": "4.45.1",
-        "@rollup/rollup-linux-riscv64-gnu": "4.45.1",
-        "@rollup/rollup-linux-riscv64-musl": "4.45.1",
-        "@rollup/rollup-linux-s390x-gnu": "4.45.1",
-        "@rollup/rollup-linux-x64-gnu": "4.45.1",
-        "@rollup/rollup-linux-x64-musl": "4.45.1",
-        "@rollup/rollup-win32-arm64-msvc": "4.45.1",
-        "@rollup/rollup-win32-ia32-msvc": "4.45.1",
-        "@rollup/rollup-win32-x64-msvc": "4.45.1",
-        "fsevents": "~2.3.2"
+        "node": ">= 20"
       }
     },
-    "node_modules/run-parallel": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
-      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/feross"
-        },
-        {
-          "type": "patreon",
-          "url": "https://www.patreon.com/feross"
-        },
-        {
-          "type": "consulting",
-          "url": "https://feross.org/support"
-        }
-      ],
+    "node_modules/@octokit/auth-app": {
+      "version": "8.0.2",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-app/-/auth-app-8.0.2.tgz",
+      "integrity": "sha512-dLTmmA9gUlqiAJZgozfOsZFfpN/OldH3xweb7lqSnngax5Rs+PfO5dDlokaBfc41H1xOtsLYV5QqR0DkBAtPmw==",
       "license": "MIT",
       "dependencies": {
-        "queue-microtask": "^1.2.2"
+        "@octokit/auth-oauth-app": "^9.0.1",
+        "@octokit/auth-oauth-user": "^6.0.0",
+        "@octokit/request": "^10.0.2",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "toad-cache": "^3.7.0",
+        "universal-github-app-jwt": "^2.2.0",
+        "universal-user-agent": "^7.0.0"
+      },
+      "engines": {
+        "node": ">= 20"
       }
     },
-    "node_modules/scheduler": {
-      "version": "0.23.2",
-      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
-      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
+    "node_modules/@octokit/auth-oauth-app": {
+      "version": "9.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-oauth-app/-/auth-oauth-app-9.0.1.tgz",
+      "integrity": "sha512-TthWzYxuHKLAbmxdFZwFlmwVyvynpyPmjwc+2/cI3cvbT7mHtsAW9b1LvQaNnAuWL+pFnqtxdmrU8QpF633i1g==",
       "license": "MIT",
       "dependencies": {
-        "loose-envify": "^1.1.0"
-      }
-    },
-    "node_modules/semver": {
-      "version": "6.3.1",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
-      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
-      "dev": true,
-      "license": "ISC",
-      "bin": {
-        "semver": "bin/semver.js"
-      }
-    },
-    "node_modules/sharp": {
-      "version": "0.34.3",
-      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
-      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
-      "hasInstallScript": true,
-      "license": "Apache-2.0",
-      "optional": true,
-      "dependencies": {
-        "color": "^4.2.3",
-        "detect-libc": "^2.0.4",
-        "semver": "^7.7.2"
+        "@octokit/auth-oauth-device": "^8.0.1",
+        "@octokit/auth-oauth-user": "^6.0.0",
+        "@octokit/request": "^10.0.2",
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.0"
       },
       "engines": {
-        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/libvips"
-      },
-      "optionalDependencies": {
-        "@img/sharp-darwin-arm64": "0.34.3",
-        "@img/sharp-darwin-x64": "0.34.3",
-        "@img/sharp-libvips-darwin-arm64": "1.2.0",
-        "@img/sharp-libvips-darwin-x64": "1.2.0",
-        "@img/sharp-libvips-linux-arm": "1.2.0",
-        "@img/sharp-libvips-linux-arm64": "1.2.0",
-        "@img/sharp-libvips-linux-ppc64": "1.2.0",
-        "@img/sharp-libvips-linux-s390x": "1.2.0",
-        "@img/sharp-libvips-linux-x64": "1.2.0",
-        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
-        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
-        "@img/sharp-linux-arm": "0.34.3",
-        "@img/sharp-linux-arm64": "0.34.3",
-        "@img/sharp-linux-ppc64": "0.34.3",
-        "@img/sharp-linux-s390x": "0.34.3",
-        "@img/sharp-linux-x64": "0.34.3",
-        "@img/sharp-linuxmusl-arm64": "0.34.3",
-        "@img/sharp-linuxmusl-x64": "0.34.3",
-        "@img/sharp-wasm32": "0.34.3",
-        "@img/sharp-win32-arm64": "0.34.3",
-        "@img/sharp-win32-ia32": "0.34.3",
-        "@img/sharp-win32-x64": "0.34.3"
+        "node": ">= 20"
       }
     },
-    "node_modules/sharp/node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
-      "license": "ISC",
-      "optional": true,
-      "bin": {
-        "semver": "bin/semver.js"
+    "node_modules/@octokit/auth-oauth-device": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-oauth-device/-/auth-oauth-device-8.0.1.tgz",
+      "integrity": "sha512-TOqId/+am5yk9zor0RGibmlqn4V0h8vzjxlw/wYr3qzkQxl8aBPur384D1EyHtqvfz0syeXji4OUvKkHvxk/Gw==",
+      "license": "MIT",
+      "dependencies": {
+        "@octokit/oauth-methods": "^6.0.0",
+        "@octokit/request": "^10.0.2",
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.0"
       },
       "engines": {
-        "node": ">=10"
+        "node": ">= 20"
       }
     },
-    "node_modules/shebang-command": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
-      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+    "node_modules/@octokit/auth-oauth-user": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-oauth-user/-/auth-oauth-user-6.0.0.tgz",
+      "integrity": "sha512-GV9IW134PHsLhtUad21WIeP9mlJ+QNpFd6V9vuPWmaiN25HEJeEQUcS4y5oRuqCm9iWDLtfIs+9K8uczBXKr6A==",
       "license": "MIT",
       "dependencies": {
-        "shebang-regex": "^3.0.0"
+        "@octokit/auth-oauth-device": "^8.0.1",
+        "@octokit/oauth-methods": "^6.0.0",
+        "@octokit/request": "^10.0.2",
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.0"
       },
       "engines": {
-        "node": ">=8"
+        "node": ">= 20"
       }
     },
-    "node_modules/shebang-regex": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
-      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+    "node_modules/@octokit/auth-token": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-token/-/auth-token-6.0.0.tgz",
+      "integrity": "sha512-P4YJBPdPSpWTQ1NU4XYdvHvXJJDxM6YwpS0FZHRgP7YFkdVxsWcpWGy/NVqlAA7PcPCnMacXlRm1y2PFZRWL/w==",
       "license": "MIT",
       "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/signal-exit": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
-      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
-      "license": "ISC",
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
+        "node": ">= 20"
       }
     },
-    "node_modules/simple-swizzle": {
-      "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
-      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
+    "node_modules/@octokit/auth-unauthenticated": {
+      "version": "7.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/auth-unauthenticated/-/auth-unauthenticated-7.0.1.tgz",
+      "integrity": "sha512-qVq1vdjLLZdE8kH2vDycNNjuJRCD1q2oet1nA/GXWaYlpDxlR7rdVhX/K/oszXslXiQIiqrQf+rdhDlA99JdTQ==",
       "license": "MIT",
-      "optional": true,
       "dependencies": {
-        "is-arrayish": "^0.3.1"
-      }
-    },
-    "node_modules/source-map-js": {
-      "version": "1.2.1",
-      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
-      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
-      "license": "BSD-3-Clause",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0"
+      },
       "engines": {
-        "node": ">=0.10.0"
+        "node": ">= 20"
       }
     },
-    "node_modules/string-width": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
-      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
+    "node_modules/@octokit/core": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/@octokit/core/-/core-7.0.3.tgz",
+      "integrity": "sha512-oNXsh2ywth5aowwIa7RKtawnkdH6LgU1ztfP9AIUCQCvzysB+WeU8o2kyyosDPwBZutPpjZDKPQGIzzrfTWweQ==",
       "license": "MIT",
       "dependencies": {
-        "eastasianwidth": "^0.2.0",
-        "emoji-regex": "^9.2.2",
-        "strip-ansi": "^7.0.1"
+        "@octokit/auth-token": "^6.0.0",
+        "@octokit/graphql": "^9.0.1",
+        "@octokit/request": "^10.0.2",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "before-after-hook": "^4.0.0",
+        "universal-user-agent": "^7.0.0"
       },
       "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
+        "node": ">= 20"
       }
     },
-    "node_modules/string-width-cjs": {
-      "name": "string-width",
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
+    "node_modules/@octokit/endpoint": {
+      "version": "11.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/endpoint/-/endpoint-11.0.0.tgz",
+      "integrity": "sha512-hoYicJZaqISMAI3JfaDr1qMNi48OctWuOih1m80bkYow/ayPw6Jj52tqWJ6GEoFTk1gBqfanSoI1iY99Z5+ekQ==",
       "license": "MIT",
       "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.2"
       },
       "engines": {
-        "node": ">=8"
+        "node": ">= 20"
       }
     },
-    "node_modules/string-width-cjs/node_modules/ansi-regex": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
-      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+    "node_modules/@octokit/graphql": {
+      "version": "9.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/graphql/-/graphql-9.0.1.tgz",
+      "integrity": "sha512-j1nQNU1ZxNFx2ZtKmL4sMrs4egy5h65OMDmSbVyuCzjOcwsHq6EaYjOTGXPQxgfiN8dJ4CriYHk6zF050WEULg==",
       "license": "MIT",
+      "dependencies": {
+        "@octokit/request": "^10.0.2",
+        "@octokit/types": "^14.0.0",
+        "universal-user-agent": "^7.0.0"
+      },
       "engines": {
-        "node": ">=8"
+        "node": ">= 20"
       }
     },
-    "node_modules/string-width-cjs/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "license": "MIT"
-    },
-    "node_modules/string-width-cjs/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+    "node_modules/@octokit/oauth-app": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/oauth-app/-/oauth-app-8.0.1.tgz",
+      "integrity": "sha512-QnhMYEQpnYbEPn9cae+wXL2LuPMFglmfeuDJXXsyxIXdoORwkLK8y0cHhd/5du9MbO/zdG/BXixzB7EEwU63eQ==",
       "license": "MIT",
       "dependencies": {
-        "ansi-regex": "^5.0.1"
+        "@octokit/auth-oauth-app": "^9.0.1",
+        "@octokit/auth-oauth-user": "^6.0.0",
+        "@octokit/auth-unauthenticated": "^7.0.1",
+        "@octokit/core": "^7.0.2",
+        "@octokit/oauth-authorization-url": "^8.0.0",
+        "@octokit/oauth-methods": "^6.0.0",
+        "@types/aws-lambda": "^8.10.83",
+        "universal-user-agent": "^7.0.0"
       },
       "engines": {
-        "node": ">=8"
+        "node": ">= 20"
       }
     },
-    "node_modules/strip-ansi": {
-      "version": "7.1.0",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
-      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
+    "node_modules/@octokit/oauth-authorization-url": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/oauth-authorization-url/-/oauth-authorization-url-8.0.0.tgz",
+      "integrity": "sha512-7QoLPRh/ssEA/HuHBHdVdSgF8xNLz/Bc5m9fZkArJE5bb6NmVkDm3anKxXPmN1zh6b5WKZPRr3697xKT/yM3qQ==",
       "license": "MIT",
-      "dependencies": {
-        "ansi-regex": "^6.0.1"
-      },
       "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
+        "node": ">= 20"
       }
     },
-    "node_modules/strip-ansi-cjs": {
-      "name": "strip-ansi",
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+    "node_modules/@octokit/oauth-methods": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/oauth-methods/-/oauth-methods-6.0.0.tgz",
+      "integrity": "sha512-Q8nFIagNLIZgM2odAraelMcDssapc+lF+y3OlcIPxyAU+knefO8KmozGqfnma1xegRDP4z5M73ABsamn72bOcA==",
       "license": "MIT",
       "dependencies": {
-        "ansi-regex": "^5.0.1"
+        "@octokit/oauth-authorization-url": "^8.0.0",
+        "@octokit/request": "^10.0.2",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0"
       },
       "engines": {
-        "node": ">=8"
+        "node": ">= 20"
       }
     },
-    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
-      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8"
-      }
+    "node_modules/@octokit/openapi-types": {
+      "version": "25.1.0",
+      "resolved": "https://registry.npmjs.org/@octokit/openapi-types/-/openapi-types-25.1.0.tgz",
+      "integrity": "sha512-idsIggNXUKkk0+BExUn1dQ92sfysJrje03Q0bv0e+KPLrvyqZF8MnBpFz8UNfYDwB3Ie7Z0TByjWfzxt7vseaA==",
+      "license": "MIT"
     },
-    "node_modules/styled-jsx": {
-      "version": "5.1.6",
-      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
-      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
+    "node_modules/@octokit/openapi-webhooks-types": {
+      "version": "12.0.3",
+      "resolved": "https://registry.npmjs.org/@octokit/openapi-webhooks-types/-/openapi-webhooks-types-12.0.3.tgz",
+      "integrity": "sha512-90MF5LVHjBedwoHyJsgmaFhEN1uzXyBDRLEBe7jlTYx/fEhPAk3P3DAJsfZwC54m8hAIryosJOL+UuZHB3K3yA==",
+      "license": "MIT"
+    },
+    "node_modules/@octokit/plugin-paginate-graphql": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-graphql/-/plugin-paginate-graphql-6.0.0.tgz",
+      "integrity": "sha512-crfpnIoFiBtRkvPqOyLOsw12XsveYuY2ieP6uYDosoUegBJpSVxGwut9sxUgFFcll3VTOTqpUf8yGd8x1OmAkQ==",
       "license": "MIT",
-      "dependencies": {
-        "client-only": "0.0.1"
-      },
       "engines": {
-        "node": ">= 12.0.0"
+        "node": ">= 20"
       },
       "peerDependencies": {
-        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
-      },
-      "peerDependenciesMeta": {
-        "@babel/core": {
-          "optional": true
-        },
-        "babel-plugin-macros": {
-          "optional": true
-        }
+        "@octokit/core": ">=6"
       }
     },
-    "node_modules/sucrase": {
-      "version": "3.35.0",
-      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
-      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
+    "node_modules/@octokit/plugin-paginate-rest": {
+      "version": "13.1.1",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-13.1.1.tgz",
+      "integrity": "sha512-q9iQGlZlxAVNRN2jDNskJW/Cafy7/XE52wjZ5TTvyhyOD904Cvx//DNyoO3J/MXJ0ve3rPoNWKEg5iZrisQSuw==",
       "license": "MIT",
       "dependencies": {
-        "@jridgewell/gen-mapping": "^0.3.2",
-        "commander": "^4.0.0",
-        "glob": "^10.3.10",
-        "lines-and-columns": "^1.1.6",
-        "mz": "^2.7.0",
-        "pirates": "^4.0.1",
-        "ts-interface-checker": "^0.1.9"
+        "@octokit/types": "^14.1.0"
       },
-      "bin": {
-        "sucrase": "bin/sucrase",
-        "sucrase-node": "bin/sucrase-node"
-      },
-      "engines": {
-        "node": ">=16 || 14 >=14.17"
-      }
-    },
-    "node_modules/supports-preserve-symlinks-flag": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
-      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
-      "license": "MIT",
       "engines": {
-        "node": ">= 0.4"
+        "node": ">= 20"
       },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
+      "peerDependencies": {
+        "@octokit/core": ">=6"
       }
     },
-    "node_modules/tailwindcss": {
-      "version": "3.4.17",
-      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
-      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
+    "node_modules/@octokit/plugin-rest-endpoint-methods": {
+      "version": "16.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-rest-endpoint-methods/-/plugin-rest-endpoint-methods-16.0.0.tgz",
+      "integrity": "sha512-kJVUQk6/dx/gRNLWUnAWKFs1kVPn5O5CYZyssyEoNYaFedqZxsfYs7DwI3d67hGz4qOwaJ1dpm07hOAD1BXx6g==",
       "license": "MIT",
       "dependencies": {
-        "@alloc/quick-lru": "^5.2.0",
-        "arg": "^5.0.2",
-        "chokidar": "^3.6.0",
-        "didyoumean": "^1.2.2",
-        "dlv": "^1.1.3",
-        "fast-glob": "^3.3.2",
-        "glob-parent": "^6.0.2",
-        "is-glob": "^4.0.3",
-        "jiti": "^1.21.6",
-        "lilconfig": "^3.1.3",
-        "micromatch": "^4.0.8",
-        "normalize-path": "^3.0.0",
-        "object-hash": "^3.0.0",
-        "picocolors": "^1.1.1",
-        "postcss": "^8.4.47",
-        "postcss-import": "^15.1.0",
-        "postcss-js": "^4.0.1",
-        "postcss-load-config": "^4.0.2",
-        "postcss-nested": "^6.2.0",
-        "postcss-selector-parser": "^6.1.2",
-        "resolve": "^1.22.8",
-        "sucrase": "^3.35.0"
-      },
-      "bin": {
-        "tailwind": "lib/cli.js",
-        "tailwindcss": "lib/cli.js"
+        "@octokit/types": "^14.1.0"
       },
       "engines": {
-        "node": ">=14.0.0"
-      }
-    },
-    "node_modules/tailwindcss/node_modules/jiti": {
-      "version": "1.21.7",
-      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
-      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
-      "license": "MIT",
-      "bin": {
-        "jiti": "bin/jiti.js"
+        "node": ">= 20"
+      },
+      "peerDependencies": {
+        "@octokit/core": ">=6"
       }
     },
-    "node_modules/tailwindcss/node_modules/postcss-load-config": {
-      "version": "4.0.2",
-      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
-      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/postcss/"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
+    "node_modules/@octokit/plugin-retry": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-retry/-/plugin-retry-8.0.1.tgz",
+      "integrity": "sha512-KUoYR77BjF5O3zcwDQHRRZsUvJwepobeqiSSdCJ8lWt27FZExzb0GgVxrhhfuyF6z2B2zpO0hN5pteni1sqWiw==",
       "license": "MIT",
       "dependencies": {
-        "lilconfig": "^3.0.0",
-        "yaml": "^2.3.4"
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "bottleneck": "^2.15.3"
       },
       "engines": {
-        "node": ">= 14"
+        "node": ">= 20"
       },
       "peerDependencies": {
-        "postcss": ">=8.0.9",
-        "ts-node": ">=9.0.0"
-      },
-      "peerDependenciesMeta": {
-        "postcss": {
-          "optional": true
-        },
-        "ts-node": {
-          "optional": true
-        }
+        "@octokit/core": ">=7"
       }
     },
-    "node_modules/tailwindcss/node_modules/postcss-selector-parser": {
-      "version": "6.1.2",
-      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
-      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
+    "node_modules/@octokit/plugin-throttling": {
+      "version": "11.0.1",
+      "resolved": "https://registry.npmjs.org/@octokit/plugin-throttling/-/plugin-throttling-11.0.1.tgz",
+      "integrity": "sha512-S+EVhy52D/272L7up58dr3FNSMXWuNZolkL4zMJBNIfIxyZuUcczsQAU4b5w6dewJXnKYVgSHSV5wxitMSW1kw==",
       "license": "MIT",
       "dependencies": {
-        "cssesc": "^3.0.0",
-        "util-deprecate": "^1.0.2"
+        "@octokit/types": "^14.0.0",
+        "bottleneck": "^2.15.3"
       },
       "engines": {
-        "node": ">=4"
+        "node": ">= 20"
+      },
+      "peerDependencies": {
+        "@octokit/core": "^7.0.0"
       }
     },
-    "node_modules/tapable": {
-      "version": "2.2.2",
-      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.2.tgz",
-      "integrity": "sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==",
-      "dev": true,
+    "node_modules/@octokit/request": {
+      "version": "10.0.3",
+      "resolved": "https://registry.npmjs.org/@octokit/request/-/request-10.0.3.tgz",
+      "integrity": "sha512-V6jhKokg35vk098iBqp2FBKunk3kMTXlmq+PtbV9Gl3TfskWlebSofU9uunVKhUN7xl+0+i5vt0TGTG8/p/7HA==",
       "license": "MIT",
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/tar": {
-      "version": "7.4.3",
-      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
-      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
-      "dev": true,
-      "license": "ISC",
       "dependencies": {
-        "@isaacs/fs-minipass": "^4.0.0",
-        "chownr": "^3.0.0",
-        "minipass": "^7.1.2",
-        "minizlib": "^3.0.1",
-        "mkdirp": "^3.0.1",
-        "yallist": "^5.0.0"
+        "@octokit/endpoint": "^11.0.0",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "fast-content-type-parse": "^3.0.0",
+        "universal-user-agent": "^7.0.2"
       },
       "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/tar/node_modules/yallist": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
-      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
-      "dev": true,
-      "license": "BlueOak-1.0.0",
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/thenify": {
-      "version": "3.3.1",
-      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
-      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
-      "license": "MIT",
-      "dependencies": {
-        "any-promise": "^1.0.0"
+        "node": ">= 20"
       }
     },
-    "node_modules/thenify-all": {
-      "version": "1.6.0",
-      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
-      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
+    "node_modules/@octokit/request-error": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/request-error/-/request-error-7.0.0.tgz",
+      "integrity": "sha512-KRA7VTGdVyJlh0cP5Tf94hTiYVVqmt2f3I6mnimmaVz4UG3gQV/k4mDJlJv3X67iX6rmN7gSHCF8ssqeMnmhZg==",
       "license": "MIT",
       "dependencies": {
-        "thenify": ">= 3.1.0 < 4"
+        "@octokit/types": "^14.0.0"
       },
       "engines": {
-        "node": ">=0.8"
+        "node": ">= 20"
       }
     },
-    "node_modules/tinyglobby": {
-      "version": "0.2.14",
-      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
-      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
-      "dev": true,
+    "node_modules/@octokit/types": {
+      "version": "14.1.0",
+      "resolved": "https://registry.npmjs.org/@octokit/types/-/types-14.1.0.tgz",
+      "integrity": "sha512-1y6DgTy8Jomcpu33N+p5w58l6xyt55Ar2I91RPiIA0xCJBXyUAhXCcmZaDWSANiha7R9a6qJJ2CRomGPZ6f46g==",
       "license": "MIT",
       "dependencies": {
-        "fdir": "^6.4.4",
-        "picomatch": "^4.0.2"
-      },
-      "engines": {
-        "node": ">=12.0.0"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/SuperchupuDev"
+        "@octokit/openapi-types": "^25.1.0"
       }
     },
-    "node_modules/tinyglobby/node_modules/fdir": {
-      "version": "6.4.6",
-      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
-      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
-      "dev": true,
+    "node_modules/@octokit/webhooks": {
+      "version": "14.1.1",
+      "resolved": "https://registry.npmjs.org/@octokit/webhooks/-/webhooks-14.1.1.tgz",
+      "integrity": "sha512-4kN/yPhcZEP+X7iMMuBTk+dD4ZGOpU57F7kHKrFlD2SSY/Sxh01t79oVn4npchLdPIXvLKrQw0uBXhmEaiZAdw==",
       "license": "MIT",
-      "peerDependencies": {
-        "picomatch": "^3 || ^4"
+      "dependencies": {
+        "@octokit/openapi-webhooks-types": "12.0.3",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/webhooks-methods": "^6.0.0"
       },
-      "peerDependenciesMeta": {
-        "picomatch": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/tinyglobby/node_modules/picomatch": {
-      "version": "4.0.3",
-      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
-      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
-      "dev": true,
-      "license": "MIT",
       "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/jonschlinkert"
+        "node": ">= 20"
       }
     },
-    "node_modules/to-regex-range": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
-      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+    "node_modules/@octokit/webhooks-methods": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/@octokit/webhooks-methods/-/webhooks-methods-6.0.0.tgz",
+      "integrity": "sha512-MFlzzoDJVw/GcbfzVC1RLR36QqkTLUf79vLVO3D+xn7r0QgxnFoLZgtrzxiQErAjFUOdH6fas2KeQJ1yr/qaXQ==",
       "license": "MIT",
-      "dependencies": {
-        "is-number": "^7.0.0"
-      },
       "engines": {
-        "node": ">=8.0"
+        "node": ">= 20"
       }
     },
-    "node_modules/tr46": {
-      "version": "0.0.3",
-      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
-      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
+    "node_modules/@types/aws-lambda": {
+      "version": "8.10.152",
+      "resolved": "https://registry.npmjs.org/@types/aws-lambda/-/aws-lambda-8.10.152.tgz",
+      "integrity": "sha512-soT/c2gYBnT5ygwiHPmd9a1bftj462NWVk2tKCc1PYHSIacB2UwbTS2zYG4jzag1mRDuzg/OjtxQjQ2NKRB6Rw==",
       "license": "MIT"
     },
-    "node_modules/ts-interface-checker": {
-      "version": "0.1.13",
-      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
-      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
+    "node_modules/before-after-hook": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/before-after-hook/-/before-after-hook-4.0.0.tgz",
+      "integrity": "sha512-q6tR3RPqIB1pMiTRMFcZwuG5T8vwp+vUvEG0vuI6B+Rikh5BfPp2fQ82c925FOs+b0lcFQ8CFrL+KbilfZFhOQ==",
       "license": "Apache-2.0"
     },
-    "node_modules/tslib": {
-      "version": "2.8.1",
-      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
-      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
-      "license": "0BSD"
-    },
-    "node_modules/typescript": {
-      "version": "5.8.3",
-      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
-      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
-      "license": "Apache-2.0",
-      "bin": {
-        "tsc": "bin/tsc",
-        "tsserver": "bin/tsserver"
-      },
-      "engines": {
-        "node": ">=14.17"
-      }
-    },
-    "node_modules/undici-types": {
-      "version": "6.21.0",
-      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
-      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
-      "license": "MIT"
-    },
-    "node_modules/update-browserslist-db": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
-      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/browserslist"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "license": "MIT",
-      "dependencies": {
-        "escalade": "^3.2.0",
-        "picocolors": "^1.1.1"
-      },
-      "bin": {
-        "update-browserslist-db": "cli.js"
-      },
-      "peerDependencies": {
-        "browserslist": ">= 4.21.0"
-      }
-    },
-    "node_modules/util-deprecate": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
-      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+    "node_modules/bottleneck": {
+      "version": "2.19.5",
+      "resolved": "https://registry.npmjs.org/bottleneck/-/bottleneck-2.19.5.tgz",
+      "integrity": "sha512-VHiNCbI1lKdl44tGrhNfU3lup0Tj/ZBMJB5/2ZbNXRCPuRCO7ed2mgcK4r17y+KB2EfuYuRaVlwNbAeaWGSpbw==",
       "license": "MIT"
     },
-    "node_modules/vite": {
-      "version": "7.0.6",
-      "resolved": "https://registry.npmjs.org/vite/-/vite-7.0.6.tgz",
-      "integrity": "sha512-MHFiOENNBd+Bd9uvc8GEsIzdkn1JxMmEeYX35tI3fv0sJBUTfW5tQsoaOwuY4KhBI09A3dUJ/DXf2yxPVPUceg==",
-      "dev": true,
+    "node_modules/debug": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
       "license": "MIT",
       "dependencies": {
-        "esbuild": "^0.25.0",
-        "fdir": "^6.4.6",
-        "picomatch": "^4.0.3",
-        "postcss": "^8.5.6",
-        "rollup": "^4.40.0",
-        "tinyglobby": "^0.2.14"
-      },
-      "bin": {
-        "vite": "bin/vite.js"
+        "ms": "^2.1.3"
       },
       "engines": {
-        "node": "^20.19.0 || >=22.12.0"
-      },
-      "funding": {
-        "url": "https://github.com/vitejs/vite?sponsor=1"
-      },
-      "optionalDependencies": {
-        "fsevents": "~2.3.3"
-      },
-      "peerDependencies": {
-        "@types/node": "^20.19.0 || >=22.12.0",
-        "jiti": ">=1.21.0",
-        "less": "^4.0.0",
-        "lightningcss": "^1.21.0",
-        "sass": "^1.70.0",
-        "sass-embedded": "^1.70.0",
-        "stylus": ">=0.54.8",
-        "sugarss": "^5.0.0",
-        "terser": "^5.16.0",
-        "tsx": "^4.8.1",
-        "yaml": "^2.4.2"
-      },
-      "peerDependenciesMeta": {
-        "@types/node": {
-          "optional": true
-        },
-        "jiti": {
-          "optional": true
-        },
-        "less": {
-          "optional": true
-        },
-        "lightningcss": {
-          "optional": true
-        },
-        "sass": {
-          "optional": true
-        },
-        "sass-embedded": {
-          "optional": true
-        },
-        "stylus": {
-          "optional": true
-        },
-        "sugarss": {
-          "optional": true
-        },
-        "terser": {
-          "optional": true
-        },
-        "tsx": {
-          "optional": true
-        },
-        "yaml": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/vite/node_modules/fdir": {
-      "version": "6.4.6",
-      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
-      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
-      "dev": true,
-      "license": "MIT",
-      "peerDependencies": {
-        "picomatch": "^3 || ^4"
+        "node": ">=6.0"
       },
       "peerDependenciesMeta": {
-        "picomatch": {
+        "supports-color": {
           "optional": true
         }
       }
     },
-    "node_modules/vite/node_modules/picomatch": {
-      "version": "4.0.3",
-      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
-      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
-      "dev": true,
-      "license": "MIT",
+    "node_modules/dotenv": {
+      "version": "17.2.0",
+      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-17.2.0.tgz",
+      "integrity": "sha512-Q4sgBT60gzd0BB0lSyYD3xM4YxrXA9y4uBDof1JNYGzOXrQdQ6yX+7XIAqoFOGQFOTK1D3Hts5OllpxMDZFONQ==",
+      "license": "BSD-2-Clause",
       "engines": {
         "node": ">=12"
       },
       "funding": {
-        "url": "https://github.com/sponsors/jonschlinkert"
-      }
-    },
-    "node_modules/web-streams-polyfill": {
-      "version": "4.0.0-beta.3",
-      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz",
-      "integrity": "sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==",
-      "license": "MIT",
-      "engines": {
-        "node": ">= 14"
+        "url": "https://dotenvx.com"
       }
     },
-    "node_modules/webidl-conversions": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
-      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
-      "license": "BSD-2-Clause"
-    },
-    "node_modules/whatwg-url": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
-      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
-      "license": "MIT",
-      "dependencies": {
-        "tr46": "~0.0.3",
-        "webidl-conversions": "^3.0.0"
-      }
+    "node_modules/fast-content-type-parse": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/fast-content-type-parse/-/fast-content-type-parse-3.0.0.tgz",
+      "integrity": "sha512-ZvLdcY8P+N8mGQJahJV5G4U88CSvT1rP8ApL6uETe88MBXrBHAkZlSEySdUlyztF7ccb+Znos3TFqaepHxdhBg==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/fastify"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/fastify"
+        }
+      ],
+      "license": "MIT"
     },
-    "node_modules/which": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
-      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
-      "license": "ISC",
-      "dependencies": {
-        "isexe": "^2.0.0"
-      },
-      "bin": {
-        "node-which": "bin/node-which"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
     },
-    "node_modules/wrap-ansi": {
-      "version": "8.1.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
-      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
+    "node_modules/octokit": {
+      "version": "5.0.3",
+      "resolved": "https://registry.npmjs.org/octokit/-/octokit-5.0.3.tgz",
+      "integrity": "sha512-+bwYsAIRmYv30NTmBysPIlgH23ekVDriB07oRxlPIAH5PI0yTMSxg5i5Xy0OetcnZw+nk/caD4szD7a9YZ3QyQ==",
       "license": "MIT",
       "dependencies": {
-        "ansi-styles": "^6.1.0",
-        "string-width": "^5.0.1",
-        "strip-ansi": "^7.0.1"
+        "@octokit/app": "^16.0.1",
+        "@octokit/core": "^7.0.2",
+        "@octokit/oauth-app": "^8.0.1",
+        "@octokit/plugin-paginate-graphql": "^6.0.0",
+        "@octokit/plugin-paginate-rest": "^13.0.0",
+        "@octokit/plugin-rest-endpoint-methods": "^16.0.0",
+        "@octokit/plugin-retry": "^8.0.1",
+        "@octokit/plugin-throttling": "^11.0.1",
+        "@octokit/request-error": "^7.0.0",
+        "@octokit/types": "^14.0.0",
+        "@octokit/webhooks": "^14.0.0"
       },
       "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
+        "node": ">= 20"
       }
     },
-    "node_modules/wrap-ansi-cjs": {
-      "name": "wrap-ansi",
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
-      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
+    "node_modules/simple-git": {
+      "version": "3.28.0",
+      "resolved": "https://registry.npmjs.org/simple-git/-/simple-git-3.28.0.tgz",
+      "integrity": "sha512-Rs/vQRwsn1ILH1oBUy8NucJlXmnnLeLCfcvbSehkPzbv3wwoFWIdtfd6Ndo6ZPhlPsCZ60CPI4rxurnwAa+a2w==",
       "license": "MIT",
       "dependencies": {
-        "ansi-styles": "^4.0.0",
-        "string-width": "^4.1.0",
-        "strip-ansi": "^6.0.0"
-      },
-      "engines": {
-        "node": ">=10"
+        "@kwsites/file-exists": "^1.1.1",
+        "@kwsites/promise-deferred": "^1.1.1",
+        "debug": "^4.4.0"
       },
       "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
-      }
-    },
-    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
-      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "license": "MIT",
-      "engines": {
-        "node": ">=8"
+        "type": "github",
+        "url": "https://github.com/steveukx/git-js?sponsor=1"
       }
     },
-    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
-      "version": "4.3.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
-      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+    "node_modules/toad-cache": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/toad-cache/-/toad-cache-3.7.0.tgz",
+      "integrity": "sha512-/m8M+2BJUpoJdgAHoG+baCwBT+tf2VraSfkBgl0Y00qIWt41DJ8R5B8nsEw0I58YwF5IZH6z24/2TobDKnqSWw==",
       "license": "MIT",
-      "dependencies": {
-        "color-convert": "^2.0.1"
-      },
       "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+        "node": ">=12"
       }
     },
-    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
+    "node_modules/universal-github-app-jwt": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/universal-github-app-jwt/-/universal-github-app-jwt-2.2.2.tgz",
+      "integrity": "sha512-dcmbeSrOdTnsjGjUfAlqNDJrhxXizjAz94ija9Qw8YkZ1uu0d+GoZzyH+Jb9tIIqvGsadUfwg+22k5aDqqwzbw==",
       "license": "MIT"
     },
-    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "license": "MIT",
-      "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "license": "MIT",
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/yallist": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
-      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
-      "dev": true,
+    "node_modules/universal-user-agent": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/universal-user-agent/-/universal-user-agent-7.0.3.tgz",
+      "integrity": "sha512-TmnEAEAsBJVZM/AADELsK76llnwcf9vMKuPz8JflO1frO8Lchitr0fNaN9d+Ap0BjKtqWqd/J17qeDnXh8CL2A==",
       "license": "ISC"
-    },
-    "node_modules/yaml": {
-      "version": "2.8.0",
-      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
-      "integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
-      "license": "ISC",
-      "bin": {
-        "yaml": "bin.mjs"
-      },
-      "engines": {
-        "node": ">= 14.6"
-      }
     }
   }
 }
diff --git a/package.json b/package.json
index 1f3cafd..3d9b758 100644
--- a/package.json
+++ b/package.json
@@ -5,5 +5,10 @@
     "dev": "vite",
     "build": "vite build",
     "start": "vite preview"
+  },
+  "dependencies": {
+    "dotenv": "^17.2.0",
+    "octokit": "^5.0.3",
+    "simple-git": "^3.28.0"
   }
 }

commit e0aa15639842d2291a19913894ee0a1f693a60e5
Author: jaypms <beatsmarket.best@gmail.com>
Date:   Thu Jul 24 17:35:07 2025 +0200

    Ajout du fichier git-logs.txt

diff --git a/git-logs.txt b/git-logs.txt
new file mode 100644
index 0000000..92341e8
--- /dev/null
+++ b/git-logs.txt
@@ -0,0 +1,418 @@
+fa76f8c Create package.json
+8c86450 Create next.config.js
+9371f89 Create tailwind.config.ts
+09f94aa Create postcss.config.js
+bf4229b Create globals.css
+542b094 Create page.tsx
+7a41a44 Create tsconfig.json
+afbbbd0 Create next-env.d.ts
+3a81c7d Create README.md
+beb098f Create layout.tsx
+f0b902d Create Header.tsx
+14b61af Update layout.tsx
+afedd77 Create Footer.tsx
+b9d6b95 Update layout.tsx
+f5eae9a Create page.tsx
+3bc010b Create page.tsx
+941f5f0 Create page.tsx
+da17a8d Update page.tsx
+530fbf0 Create page.tsx
+223fc2a Update page.tsx
+feb620c Update page.tsx
+d793cfe Create page.tsx
+c9388f8 Create page.tsx
+b59fb30 Create page.tsx
+cbfee99 Create status-badge.tsx
+351b856 Create action-menu.tsx
+8f5a120 Update page.tsx
+9a034ad Update page.tsx
+262cdef Create page.tsx
+8d327b8 Create stat-card.tsx
+2cc6ea5 Create page.tsx
+5583544 Update page.tsx
+68620cc Create page.tsx
+2db1145 Create plans.tsx
+001607b Update plans.tsx
+bf5b0e7 Update plans.tsx
+7ac173c Update page.tsx
+30c3636 Update plans.tsx
+5982596 Create Licenses.tsx
+da04c8e Create Services.tsx
+51c32a2 Update page.tsx
+d2ef679 Update page.tsx
+047c9b0 Update page.tsx
+2b80d40 Update page.tsx
+d2d6dec Create PricingPlan.tsx
+f28a5be Create pricing.tsx
+f8e4711 Update pricing.tsx
+5d2f8cf Update pricing.tsx
+9be2186 Create Footer.tsx
+6027e4a Update pricing.tsx
+c832577 Update PricingPlan.tsx
+a3864ac Create SubscriptionForm.tsx
+1614dd7 Update pricing.tsx
+49ffbf2 Update next.config.js
+64adf72 Create page.tsx
+cf8e2ee Update page.tsx
+4b27393 Delete src/pages directory
+fd2cb82 Update tsconfig.json
+79d20a1 Update tsconfig.json
+72e1b09 Create jsconfig.json
+6607918 Create button.tsx
+c80ead2 Create input.tsx
+0883164 Create textarea.tsx
+0bc3c4d Create accordion.tsx
+2ca554f Create status-badge.tsx
+3f7f977 Create action-menu.tsx
+e44beae Create card.tsx
+5caea7a Create badge.tsx
+11e53f9 Update button.tsx
+0fb9dbe Create dropdown-menu.tsx
+8f3dfba Update input.tsx
+4331ec9 Update textarea.tsx
+759b14f Create label.tsx
+ac7f648 Update status-badge.tsx
+6beefc6 Create stat-card.tsx
+94bf5f5 Update input.tsx
+404ea46 Update accordion.tsx
+0d5e03a Update action-menu.tsx
+fb86a7a Update stat-card.tsx
+6aa8524 Update jsconfig.json
+d98bea7 Update tsconfig.json
+1067e4f Update package.json
+d4510e6 Create utils.ts
+afa0079 Update accordion.tsx
+c388367 Update badge.tsx
+13914ac Update status-badge.tsx
+2862c55 Update button.tsx
+dd376b7 Update package.json
+2852a4c Update jsconfig.json
+41d1c59 Create tailwind.config.js
+8d6fa6a Update postcss.config.js
+bf6fb3e Update button.tsx
+802fc76 Update utils.ts
+5b45fa9 Update button.tsx
+4dda9cb Create README.md
+e3bc877 Create AccordionExample.tsx
+e71ab43 Create ActionMenuExample.tsx
+8da8f78 Create BadgeExample.tsx
+ed9f696 Update button.tsx
+1596e10 Update card.tsx
+2f681a9 Update dropdown-menu.tsx
+e359932 Update dropdown-menu.tsx
+1687cb8 Update stat-card.tsx
+d4d6249 Update status-badge.tsx
+ec6dc3b Update textarea.tsx
+f33c3cd Create tooltip.tsx
+af1c131 Create index.ts
+fa605f3 Update README.md
+6996d1f Create generate-ui-index.js
+974086a Update package.json
+8ed2160 Create generate-ui-index.js
+9032e9c Update package.json
+f5b027c Create ci.yml
+486ddd8 Create deploy-vercel.yml
+be0eaa4 Update deploy-vercel.yml
+01b512b Update README.md
+b245a49 Create page.tsx
+62e6afd Create page.tsx
+f23e4a4 Update page.tsx
+39df848 Create TextEditor.tsx
+e141bf7 Create AssistantIA.tsx
+7335107 Create page.tsx
+50d3906 Update TextEditor.tsx
+6d38e66 Update AssistantIA.tsx
+19199c6 Create assistant-ia.ts
+2195b2b Create .env.local
+1d25049 Update .env.local
+5a9a1d8 Update .env.local
+ff7b62a Create .gitignore
+9ea4bd3 Update .env.local
+03cfe0e Create openai.js
+f344cab Update openai.js
+f9708e4 Update package.json
+bd4030a Create superadmin.tsx
+007f754 Update superadmin.tsx
+8a2b23d Update superadmin.tsx
+3486235 Create openai.ts
+4e82441 Update package.json
+29d19cd Update openai.ts
+e98ded2 Update superadmin.tsx
+023207a Create dashboard.tsx
+be389ac Create finance.tsx
+14922a0 Create content-manager.tsx
+e2f50c5 Create index.tsx
+efe9303 Create [id].tsx
+ed4c4b1 Create [beatId].tsx
+7c2ac5f Create EditBeatForm.tsx
+d608a2a Create calculateEarnings.ts
+f24cf83 Create EditLicensesTable.tsx
+11c1ff9 Create revenueCalculator.ts
+2179387 Create page.tsx
+e7058d3 Create page.tsx
+8b22ba1 Create page.tsx
+3e976eb Create beats.ts
+19c041c Update page.tsx
+ffed56c Update page.tsx
+d01633c Create upload.ts
+9b785e2 Create upload-image.tsx
+ca0c0b7 Create upload.ts
+df45a45 Update upload.ts
+65fdc21 Create BeatmakerUpload.tsx
+92ffa69 Create beatmaker.tsx
+f52a393 Create saveFiles.ts
+e5f21e1 Create AuthProfile.tsx
+70a8d53 Create supabaseClient.ts
+57f2b50 Update AuthProfile.tsx
+9818557 Update .env.local
+fbd58b6 Create supabase.ts
+9950267 Update supabase.ts
+2d4c5c4 Create api.ts
+938b0d7 Create users.tsx
+dd0e2e1 Create useAuth.ts
+43fe5c5 Create AuthForm.tsx
+3be9b32 Update page.tsx
+4ce9f11 Create page.tsx
+6bfc4f2 Create page.tsx
+e9c29a5 Update page.tsx
+47c2d4a Update Footer.tsx
+a32555a Update page.tsx
+6aa77ff Create Link.tsx
+68fe0c6 Create BeatStatusBadge.tsx
+7436ea2 Update page.tsx
+59fbb9f Update page.tsx
+7aa1ded Update page.tsx
+f9fcca9 Create BeatForm.tsx
+042bac8 Update page.tsx
+b964b81 Create BeatTable.tsx
+e930087 Create BeatActionsMenu.tsx
+86c7926 Update BeatForm.tsx
+eb14f42 Create footer.tsx
+240227f Update page.tsx
+3690e9d Update Footer.tsx
+ba23ba5 Create page.tsx
+2fcb266 Create page.tsx
+58c19cf Create page.tsx
+8f44d4d Create page.tsx
+d30b895 Create revenue-chart.tsx
+98415a2 Create recent-sales.tsx
+d06ed6e Create content-moderation.tsx
+355b9f4 Create page.tsx
+98c9f82 Create artists-table.tsx
+84570c2 Create beatmakers-table.tsx
+5bd3dd8 Update page.tsx
+12afa1c Update footer.tsx
+88c476f Update page.tsx
+450c1c8 Update Footer.tsx
+bc6fbe4 Update Header.tsx
+02ed10e Update Footer.tsx
+bd1be51 Update Footer.tsx
+ac6f736 Update Footer.tsx
+dd6c866 Update Footer.tsx
+f6ee9d9 Update accordion.tsx
+928761a Update badge.tsx
+e11ff22 Update button.tsx
+14aeeb7 Update card.tsx
+2c16405 Update input.tsx
+064dd7e Update label.tsx
+7487e2a Create separator.tsx
+0541fb7 Create toggle.tsx
+f451f95 Update separator.tsx
+97993a0 Create tabs.tsx
+ae4949a Update toggle.tsx
+35e82be Update separator.tsx
+1e5f9ea Update tabs.tsx
+2e278b2 Update toggle.tsx
+d4cdf58 Update tabs.tsx
+1bf34b9 Update separator.tsx
+cdf9919 Update card.tsx
+78acb7f Update jsconfig.json
+f644416 Update .env.local
+fd8afdf Update next.config.js
+24fb283 Update next.config.js
+e1bc0f7 Update next.config.js
+d524372 Update tailwind.config.js
+59b1d76 Update postcss.config.js
+4f673df Create globals.css
+2d23a34 Update layout.tsx
+d5bec10 Update tailwind.config.js
+cedc8f4 Create globals.css
+ce1db6d Update tailwind.config.js
+ebaa494 Update layout.tsx
+7ddf369 Create fonts.ts
+01fe692 Create layout.tsx
+51ac768 Update tailwind.config.js
+05af947 Update postcss.config.js
+755e94a Update layout.tsx
+d86421f Update page.tsx
+3ef66f8 Update footer.tsx
+d62e76f Create header.tsx
+6b44e37 Update page.tsx
+dc6116f Update header.tsx
+0ed6c57 Update footer.tsx
+663790a Update header.tsx
+3a7c58c Update postcss.config.js
+c7a0ac7 Update layout.tsx
+3e2f1fc Update globals.css
+a5b2b59 Update tailwind.config.js
+a2e6b36 Update postcss.config.js
+07f3c8e Update globals.css
+27aa1df Update next.config.js
+28af710 Update postcss.config.js
+3cab168 Update postcss.config.js
+8a9b170 Update postcss.config.js
+a2f51bb Update tailwind.config.js
+94af1cf Update tailwind.config.ts
+c4bc331 Update .env.local
+6eee14f Create LocalFontExample.tsx
+bdc448e Update LocalFontExample.tsx
+2a1753b Create index.tsx
+8796995 Update next.config.js
+e63469b Update tailwind.config.js
+c5d72f6 Update globals.css
+1ec8f2b Update postcss.config.js
+2ffbe47 Update postcss.config.js
+94d5c5a Update next.config.js
+d38d96a Update .env.local
+3176f8c Update tailwind.config.ts
+c12c88a Update tailwind.config.js
+2b21e20 Delete tailwind.config.ts
+63f9869 Update globals.css
+0018acd Update next.config.js
+299ebaa Update next.config.js
+76417dc Update next.config.js
+9453ce0 Update postcss.config.js
+634ba3b Update postcss.config.js
+809c492 Update next.config.js
+3309aff Update layout.tsx
+2a61fd0 Update header.tsx
+183d16b Update footer.tsx
+7a011d9 Update page.tsx
+4103c59 Update page.tsx
+9e08483 Create Header.tsx
+7acdcc0 Update page.tsx
+3eb4cbe Create Footer.tsx
+ba6e408 Update page.tsx
+695abfe Update page.tsx
+68555c9 Update page.tsx
+fec0b5c Update page.tsx
+35252f0 Update page.tsx
+46341a1 Update page.tsx
+23d65cc Update page.tsx
+747624a Update page.tsx
+998cbd8 Create page.tsx
+1dde34e Create page.tsx
+93554dc Update page.tsx
+cd784da Update page.tsx
+139afb2 Update page.tsx
+c4251df Create status-badge.tsx
+d888e20 Create action-menu.tsx
+61c97a2 Update page.tsx
+c93c48f Create Navbar.tsx
+5b433df Update header.tsx
+d0946ba Create Hero.tsx
+b8da990 Create CallToAction.tsx
+a5de20d Update footer.tsx
+8564eb7 Update button.tsx
+8e1d9c5 Create CardStat.tsx
+bd4ea89 Create RevenueChart.tsx
+c1e4606 Create AdminMenu.tsx
+79efb9b Update status-badge.tsx
+0139659 Update badge.tsx
+7efc06b Create status-toggle.tsx
+49bfa1b Create table-empty.tsx
+3b41777 Create table-loading.tsx
+795dfb2 Create table-pagination.tsx
+9d7061f Create user-avatar.tsx
+8c49be6 Create user-role-badge.tsx
+58a6055 Create user-status-badge.tsx
+58089d9 Create filter-input.tsx
+0418a1a Update dropdown-menu.tsx
+73613d5 Update button.tsx
+cb86196 Create avatar.tsx
+8cd478c Create switch.tsx
+b7b368a Create modal.tsx
+473a990 Create alert.tsx
+c724b89 Update textarea.tsx
+864b454 Update input.tsx
+1b8c48f Create select.tsx
+ccbb4cd Create checkbox.tsx
+648da13 Create radio-group.tsx
+734e385 Update label.tsx
+cf65223 Update tooltip.tsx
+11bdbba Create loading-spinner.tsx
+fd4d611 Create empty-state.tsx
+50b5a7c Create pagination.tsx
+272041e Create checkbox-group.tsx
+48c2193 Create rating.tsx
+768ad82 Create scroll-area.tsx
+d3ba131 Create progress.tsx
+13d287a Create toast.tsx
+a16dfeb Create dialog.tsx
+274afa1 Create collapse.tsx
+2f07902 Create scroll-to-top.tsx
+da5a2b4 Create .keep
+8d7b479 Add files via upload
+490d2bc Update Footer.tsx
+46442f1 Delete public/images/Footer BeatsMarket.jpg
+0ff5b4f Add files via upload
+2ed714f Update Footer.tsx
+07c0797 Mise à jour de la config et ajout de fichiers
+9ba88fe Update next.config.js
+bea6285 Update postcss.config.js
+f20eadd Update next.config.js
+4bd823a Update next.config.js
+bc3a485 Update next.config.js
+17ed5b5 Update next.config.js
+da7300c Update next.config.js
+c00396a Update next.config.js
+532bf33 Update next.config.js
+43c36fe Delete public/images/.keep
+a7e0613 Update next.config.js
+3b319d0 Update postcss.config.js
+17c5f92 Update postcss.config.js
+8aee003 Update tailwind.config.js
+a2e87cb Update globals.css
+44a725d Update next.config.js
+0728b9a Fix next.config.js
+3c41a86 Fix next.config.js
+041bb98 Update page.tsx
+8a81ace Create page.tsx
+0fec95d Create page.tsx
+64ac3c6 Update .env.local
+30a2eb6 Update next.config.js
+9425ce5 Update next.config.js
+01ff28b Update next.config.js
+0f29083 Update next.config.js
+09b4318 Update tailwind.config.js
+14e0f61 Update postcss.config.js
+c0fea2f Create vite.config.js
+514cfa7 Update vite.config.js
+2666e31 Update layout.tsx
+f1e74df Update tailwind.config.js
+140faff Create globals.css
+0334426 Create main.jsx
+21c135d Create App.jsx
+840c317 Create index.css
+21ab551 Update main.jsx
+3d259e8 Create App.jsx
+c94fe05 Create index.html
+c531777 Create index.html
+f2b87e8 Update main.jsx
+6b3c0cc Update App.jsx
+e1a6ca9 Update main.jsx
+eac9c28 Update index.html
+2e34ce1 Update package.json
+b43d5ae Update package.json
+7a7a785 Update .env.local
+0a00f8a Mise à jour des fichiers package.json et package-lock.json
+0baceda Sauvegarde avant pull
+911dc3e Correction finale package.json après rebase
+1675ccc Create githubBot.js
+be8a90f Update githubBot.js
+524b711 Create githubBot.js
+fe8113a Update githubBot.js
+fb6d744 Update .env.local
+a9bf1e3 Mise à jour Footer automatique
+3000ceb Message de commit automatique
+668896a Ajout autoGit.js et mise à jour des packages
